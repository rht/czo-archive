[
    {
        "content": "<ol>\n<li>\n<p>I recently learned that there are common words which are excluded from the search. <br>\nIs there a way to require common words? <br>\nIf there is no way to require them is there a way to change a set of such common words somewhere?<br>\nCan we actually perform search with common words? <br>\nCan search results be partial... like here is the latest 20 results and you have to click to get older results?</p>\n</li>\n<li>\n<p>I always see \"end of results from your history\". Help article <a href=\"https://chat.zulip.org/help/search-for-messages#searching-shared-history\">https://chat.zulip.org/help/search-for-messages#searching-shared-history</a><br>\nWhy don't we search in all history for \"subscribed\" streams? What is the reason to hide history if it is accessible to a user?<br>\nWhen I click <code>search all public streams</code> doesn't Zulip search through my DMs and other private streams I'm part of?</p>\n</li>\n</ol>",
        "id": 1606486,
        "sender_full_name": "Vlad Korobov",
        "timestamp": 1688849885
    },
    {
        "content": "<ol start=\"3\">\n<li>\"Self-hosted Zulip organizations can instead set up an experimental PGroonga integration\"<br>\nWhy can't we provide a better search on all languages in Zulip cloud?</li>\n</ol>",
        "id": 1606490,
        "sender_full_name": "Vlad Korobov",
        "timestamp": 1688851821
    },
    {
        "content": "<p>Latter point is likely connected to <a class=\"stream-topic\" data-stream-id=\"3\" href=\"/#narrow/stream/3-backend/topic/make.20pgroonga.20default.20.3F\">#backend &gt; make pgroonga default ?</a></p>",
        "id": 1606495,
        "sender_full_name": "Neil Pilgrim (neiljp)",
        "timestamp": 1688852998
    },
    {
        "content": "<ol start=\"4\">\n<li>why do we use postgres full text search? I know it is good but what is the main reason? Simplicity? Results have to be not from the index but from messages db anyway? Or what is the main driver of a decision here? Do we know how often people use search which is not a jump to some zulip narrower?</li>\n</ol>",
        "id": 1606515,
        "sender_full_name": "Vlad Korobov",
        "timestamp": 1688855179
    },
    {
        "content": "<p>We picked postgres' full-text search early, but I can talk about its major advantages:</p>\n<ul>\n<li>Search that's done directly in the database is way easier to do correctly than with an external search system. With features like moving topics betweens streams, and stream permissions being mutable, we would need a complex data synchronization system or multi-service coordination in order to correctly implement live update of that data as well as the security model for which messages a user has access to in the presence of that changing over time ... and limits the scope of a whole class of race condition bugs where your search gives stale results because new messages or edits or other changes haven't been synchronized properly.</li>\n<li>Search done in the database makes it easy to add new facets with efficient queries; we can join any combination of filters without weird overhead.</li>\n<li>Stop words like \"the\" are inefficient to index, because they're going to be in like 50% of all messages, and also are basically useless to filter on.  We do control the set of stop words used -- it's configuration -- so we could turn it off if we wanted to, but it probably wouldn't be a good idea.</li>\n<li>The PGroonga search engine extension for postgres would have those same advantages; it's main advantage is that it supports non-English search much better. We offer it as an option but haven't enabled it by default because it has some major performance downsides for some classes of common queries we've not figured out how to address. (<a class=\"stream-topic\" data-stream-id=\"3\" href=\"/#narrow/stream/3-backend/topic/make.20pgroonga.20default.20.3F\">#backend &gt; make pgroonga default ?</a> covers our most recent effort to do so).</li>\n</ul>",
        "id": 1609216,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1689265295
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"22433\">Vlad Korobov</span> <a href=\"#narrow/stream/101-design/topic/Search.20results.20questions/near/1606486\">said</a>:</p>\n<blockquote>\n<p>Can search results be partial... like here is the latest 20 results and you have to click to get older results?</p>\n</blockquote>\n<p>Yes, we do that today -- but the number is I think 50 and we just fetch the next 200 whenever you reach the top of the scrolling message feed. Doing less than 50 is a bad idea in that it's not really any faster to get 50 than say 20, and you'll notice the fetches of additional messages much more.</p>",
        "id": 1609217,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1689265400
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"22433\">Vlad Korobov</span> <a href=\"#narrow/stream/101-design/topic/Search.20results.20questions/near/1606486\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>I always see \"end of results from your history\". Help article <a href=\"https://chat.zulip.org/help/search-for-messages#searching-shared-history\">https://chat.zulip.org/help/search-for-messages#searching-shared-history</a><br>\nWhy don't we search in all history for \"subscribed\" streams? What is the reason to hide history if it is accessible to a user?<br>\nWhen I click <code>search all public streams</code> doesn't Zulip search through my DMs and other private streams I'm part of?</li>\n</ol>\n</blockquote>\n<p>This is somewhat complicated. We currently by default search \"The messages you actually received\" by default -- this is nice in that if you remember seeing a message, you'll find it with this search mechanism, and you won't find things that you didn't receive at some point.</p>\n<p>The \"Search all public streams\" does exactly that -- it will search all public streams in the organization, and not your DMs or private stream messages. If the organization has 1000 public streams and you're only subscribed to 25 of them, which is a realistic story for a 1000+ person organization, that will be a bad experience -- someone will have a public stream where they sent 100K messages of news articles via a bot and your search results will be dominated by that.</p>\n<blockquote>\n<p>Why don't we search in all history for \"subscribed\" streams? What is the reason to hide history if it is accessible to a user?</p>\n</blockquote>\n<p>I think we had a plan to support a search operator for doing <code>streams:subscribed</code> to search that, but it's not implemented; there's some complexity involving the security model requirements of private streams with protected history that we haven't found the time to work through. There's some technical reasons why it'd be slower that might make us not excited about changing to that model as the default.</p>",
        "id": 1609221,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1689265862
    }
]