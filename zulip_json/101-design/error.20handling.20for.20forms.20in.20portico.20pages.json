[
    {
        "content": "<p>There is some inconsistency in showing errors after client side validation in a couple of forms.</p>\n<p>A couple of forms probably show error in a popover like UI and it depends on browsers.<br>\n<a href=\"/user_uploads/2/ac/pw6rsjE1JNrYBpJH0a01AEd-/html-default-errors.gif\">html-default-errors.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/ac/pw6rsjE1JNrYBpJH0a01AEd-/html-default-errors.gif\" title=\"html-default-errors.gif\"><img src=\"/user_uploads/2/ac/pw6rsjE1JNrYBpJH0a01AEd-/html-default-errors.gif\"></a></div><p>And for many forms we show the error below (or above in some cases) the input field and these are handled by <code>jquery-validation</code> plugin and we can customise where we want to show the error.<br>\n<a href=\"/user_uploads/2/2a/AMFWl87zs7-NPteIXQudyJGE/Peek-2023-05-19-20-21.gif\">Peek-2023-05-19-20-21.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/2a/AMFWl87zs7-NPteIXQudyJGE/Peek-2023-05-19-20-21.gif\" title=\"Peek-2023-05-19-20-21.gif\"><img src=\"/user_uploads/2/2a/AMFWl87zs7-NPteIXQudyJGE/Peek-2023-05-19-20-21.gif\"></a></div>",
        "id": 1572738,
        "sender_full_name": "Sahil Batra",
        "timestamp": 1684513255
    },
    {
        "content": "<p>The second approach probably generalized better for forms that have multiple fields?</p>",
        "id": 1572844,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1684518476
    },
    {
        "content": "<p>I've not been particularly satisfied with the user experience of the native browser feature used in that top form, and so probably would lean in the direction of doing more things the second way. Though we probably should find a more modern library to replace jquery-validation.</p>",
        "id": 1573319,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1684542907
    },
    {
        "content": "<p>The native approach is customizable with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity\"><code>setCustomValidity</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid\"><code>:invalid</code></a>, etc.; it’s also naturally <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required#description\">accessible</a> and involves orders of magnitude less code to maintain.</p>",
        "id": 1573332,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1684544238
    },
    {
        "content": "<p>I don't have particularly strong feelings on this. If we decide to try converting to the native browser feature, I'd want to play with some forms to get a feel for it before we do a ton of work (on a PR, or even some non-Zulip examples might be helpful, if that's easier).</p>",
        "id": 1573617,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1684645190
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/error.20handling.20for.20forms.20in.20portico.20pages/near/1573332\">said</a>:</p>\n<blockquote>\n<p>The native approach is customizable with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity\"><code>setCustomValidity</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid\"><code>:invalid</code></a>, etc.; it’s also naturally <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required#description\">accessible</a> and involves orders of magnitude less code to maintain.</p>\n</blockquote>\n<p>I agree with this a lot, and l linked to this conversation from <a href=\"#narrow/stream/6-frontend/topic/aria-hidden/near/1573846\">https://chat.zulip.org/#narrow/stream/6-frontend/topic/aria-hidden/near/1573846</a></p>",
        "id": 1573849,
        "sender_full_name": "Steve Howell",
        "timestamp": 1684709304
    },
    {
        "content": "<p>For context, AFAIK we currently only use the jQuery validation library via these selector registrations:</p>\n<div class=\"codehilite\"><pre><span></span><code>web/src/portico/signup.js:    $(&quot;#registration, #password_reset, #create_realm&quot;).validate({\nweb/src/portico/signup.js:    $(&quot;#send_confirm&quot;).validate({\nweb/src/portico/signup.js:    $(&quot;#login_form&quot;).validate({\n</code></pre></div>\n<p>And that currently entails a pretty large third-party dependency:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ wc node_modules/jquery-validation/dist/jquery.validate.js\n 1660  6856 51171 node_modules/jquery-validation/dist/jquery.validate.js\n</code></pre></div>",
        "id": 1575419,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1684885646
    },
    {
        "content": "<p>I don't have good intuition as to whether it's more effort to write our own thing using the browser native features, or to use a modern library that sits on top of those and provides a more ergonomic interface, but I'd be very glad to see someone propose a specific concept to migrate our handful of portico forms to.</p>",
        "id": 1575422,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1684885860
    },
    {
        "content": "<p>My intuition is to just build something on top of browser native features.  There's nothing super tricky about validation.  A modern library could plausibly add some value on top of the browser native features, but the modern library would inevitably have to deal with a bunch of use cases that are irrelevant to Zulip, and then you have to put a more ergonomic interface on top of that, and then you just have an extra moving part.</p>",
        "id": 1575437,
        "sender_full_name": "Steve Howell",
        "timestamp": 1684886879
    },
    {
        "content": "<p>To be precise, I should say that there isn't anything super tricky about validation that the browser vendors and committees haven't already figured out.  I mean it's been a couple decades of doing form validation.  Form validation precedes even CSS and JS if memory serves correctly.</p>",
        "id": 1575451,
        "sender_full_name": "Steve Howell",
        "timestamp": 1684887339
    },
    {
        "content": "<p>Just for context, I have recently undertaken a project to build the left-sidebar-navigation-area using native browser APIs.  I can definitely compare the experience to building with the Zulip stack.  It's just so much more straightforward to just use the native APIs.  The only modern tool I use is TypeScript.  Everything else would basically have worked in 2005 on the most crappy IE browser.</p>",
        "id": 1575457,
        "sender_full_name": "Steve Howell",
        "timestamp": 1684887878
    },
    {
        "content": "<p>And, of course, browser technology has greatly evolved since then for slightly more tricky issues.</p>",
        "id": 1575460,
        "sender_full_name": "Steve Howell",
        "timestamp": 1684887935
    }
]