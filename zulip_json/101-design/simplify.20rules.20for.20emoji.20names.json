[
    {
        "content": "<p>The rules in <a href=\"https://github.com/zulip/zulip/blob/master/docs/subsystems/emoji.md#picking-emoji-names\">https://github.com/zulip/zulip/blob/master/docs/subsystems/emoji.md#picking-emoji-names</a> were added ~4 years ago. I think the rules are too complex, and also not generalizable (most cases needs to be evaluated manually), e.g.</p>\n<div class=\"codehilite\"><pre><span></span><code>Many emoji names are unnecessarily specific in iamcal/etc, like :flower_playing_cards:, :izakaya_lantern:, or :amphora:. Renaming them to :playing_cards:, :lantern:, and :vase: makes them more widely usable. In such cases we often keep the specific name as an alternate\n</code></pre></div>\n<p>New emojis are not being added automatically, and have to be vetted manually. This adds up to the overall maintenance cost, also results in missing emojis. An example of an emoji not present in tools/setup/emoji/emoji_names.py is <code>:star-struck:</code> (🤩 &lt;- this is manual copy paste).</p>\n<p>I propose to just offload the naming choices to iamcal or emojibase.</p>",
        "id": 1247261,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629132927
    },
    {
        "content": "<p>This is what it'd look like with auto-generated emoji_names.py from iamcal:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>  <span class=\"nt\">\"1f929\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"canonical_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"grinning_face_with_star_eyes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"aliases\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"star-struck\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}}</span>\n</code></pre></div>\n<p>This is the full iamcal data:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GRINNING FACE WITH STAR EYES\"</span><span class=\"p\">,</span>\n<span class=\"s2\">\"unified\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1F929\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"non_qualified\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"docomo\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"au\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n<span class=\"s2\">\"softbank\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"google\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"image\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1f929.png\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"sheet_x\"</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span>\n <span class=\"s2\">\"sheet_y\"</span><span class=\"p\">:</span> <span class=\"mi\">49</span><span class=\"p\">,</span>\n <span class=\"s2\">\"short_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"star-struck\"</span><span class=\"p\">,</span>\n<span class=\"s2\">\"short_names\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"star-struck\"</span><span class=\"p\">,</span> <span class=\"s2\">\"grinning_face_with_star_eyes\"</span><span class=\"p\">],</span>\n <span class=\"s2\">\"text\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"texts\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n <span class=\"s2\">\"category\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Smileys &amp; Emotion\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"subcategory\"</span><span class=\"p\">:</span> <span class=\"s2\">\"face-affection\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"sort_order\"</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"p\">,</span>\n <span class=\"s2\">\"added_in\"</span><span class=\"p\">:</span> <span class=\"s2\">\"5.0\"</span><span class=\"p\">,</span>\n<span class=\"s2\">\"has_img_apple\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s2\">\"has_img_google\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s2\">\"has_img_twitter\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s2\">\"has_img_facebook\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1247265,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629135394
    },
    {
        "content": "<p>This json is freshly generated from <a href=\"https://github.com/iamcal/emoji-data\">https://github.com/iamcal/emoji-data</a>: <a href=\"/user_uploads/2/5a/9c78OXwVbQVMfwDohO-lBPbU/emoji_names.json\">emoji_names.json</a></p>",
        "id": 1247269,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629135652
    },
    {
        "content": "<p>According to <a href=\"https://github.com/matrix-org/matrix-react-sdk/pull/6347\">https://github.com/matrix-org/matrix-react-sdk/pull/6347</a>, The IamCal data seems to be consistent with Slack shortcodes.</p>",
        "id": 1247270,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629136265
    },
    {
        "content": "<p>See <a href=\"https://github.com/zulip/zulip/pull/18121\">#18121</a>.</p>",
        "id": 1247284,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629139705
    },
    {
        "content": "<p>I checked <a href=\"https://github.com/unicode-org/cldr-json/blob/master/cldr-json/cldr-annotations-modern/annotations/en/annotations.json\">https://github.com/unicode-org/cldr-json/blob/master/cldr-json/cldr-annotations-modern/annotations/en/annotations.json</a>. </p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;🤩&quot;: {\n        &quot;default&quot;: [\n          &quot;eyes&quot;,\n          &quot;face&quot;,\n          &quot;grinning&quot;,\n          &quot;star&quot;,\n          &quot;star-struck&quot;\n        ],\n        &quot;tts&quot;: [\n          &quot;star-struck&quot;\n        ]\n      }\n</code></pre></div>\n<p>The canonical name is \"star-struck\". This is the same with the canonical name I found on <a href=\"http://Matrix.org\">Matrix.org</a>. <a href=\"http://Matrix.org\">Matrix.org</a> uses emojibase, and according to <a href=\"https://emojibase.dev/docs/datasets/\">https://emojibase.dev/docs/datasets/</a>, </p>\n<blockquote>\n<p>As stated, there are 3 groups of datasets, each serving a specific purpose. The first group, localized data, is exactly that, datasets with localization provided by CLDR (view supported locales).</p>\n</blockquote>\n<p>And so using emojibase is equivalent to using CLDR (albeit just for the <code>en</code> version).</p>",
        "id": 1247294,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629141221
    },
    {
        "content": "<p>It turns out that I haven't carefully read the emojibase description. They do have localization of the names: <a href=\"https://github.com/milesj/emojibase/tree/master/packages/data\">https://github.com/milesj/emojibase/tree/master/packages/data</a>.</p>",
        "id": 1247305,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629142119
    },
    {
        "content": "<p>Is there a reason to use emojibase rather than CLDR directly?</p>",
        "id": 1247307,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629142187
    },
    {
        "content": "<p>Probably because emojibase provides group, and other info</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"star-struck\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"hexcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1F929\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"tags\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"face\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"grinning\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"star\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"emoji\"</span><span class=\"p\">:</span> <span class=\"s2\">\"🤩\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"order\"</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"group\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"subgroup\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n  <span class=\"p\">},</span>\n</code></pre></div>\n<p>I don't know how emojibase generates the extra info, but it is probably auto-generated.<br>\nMore detail of the metadata is at <a href=\"https://github.com/milesj/emojibase/blob/master/packages/data/en/meta.raw.json\">https://github.com/milesj/emojibase/blob/master/packages/data/en/meta.raw.json</a>, where e.g. group 0 is</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n      <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smileys-emotion\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smileys &amp; emotion\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"order\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1247504,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629196243
    },
    {
        "content": "<p>Probably because emojibase provides group, and more other info</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"star-struck\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"hexcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1F929\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"tags\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"face\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"grinning\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"star\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"emoji\"</span><span class=\"p\">:</span> <span class=\"s2\">\"🤩\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"order\"</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"group\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"subgroup\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n  <span class=\"p\">},</span>\n</code></pre></div>\n<p>I don't know how emojibase generates the extra info, but it is probably auto-generated.<br>\nMore detail of the metadata is at <a href=\"https://github.com/milesj/emojibase/blob/master/packages/data/en/meta.raw.json\">https://github.com/milesj/emojibase/blob/master/packages/data/en/meta.raw.json</a>, where e.g. group 0 is</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n      <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smileys-emotion\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smileys &amp; emotion\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"order\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1247505,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629196256
    },
    {
        "content": "<p>Those groups seem useful for potentially improving the picker UI. It'd be good to work out where emojibase is getting them from.</p>\n<p>OK, after a bit of browsing, it looks like they're provided by CLDR:<br>\n<a href=\"https://github.com/unicode-org/cldr/blob/91cb12ed9/common/properties/labels.txt\">https://github.com/unicode-org/cldr/blob/91cb12ed9/common/properties/labels.txt</a></p>\n<div class=\"codehilite\"><pre><span></span><code>[☺😀-😆😉-😋😍😎😗-😚🙂🤗]     ;  Smileys &amp; People    ;   face-positive\n# …\n[🍅🍇-🍓🥝🥥🥭]                ;  Food &amp; Drink    ;   food-fruit\n[🌰🌶🌽🍄🍆🥑🥒🥔🥕🥜🥦]       ;   Food &amp; Drink    ;   food-vegetable\n# …\n</code></pre></div>",
        "id": 1247663,
        "sender_full_name": "Greg Price",
        "timestamp": 1629228013
    },
    {
        "content": "<p>That probably explains what \"subgroup\" in emojibase means, too -- it's that second-level grouping like \"food-fruit\" vs \"food-vegetable\".</p>",
        "id": 1247664,
        "sender_full_name": "Greg Price",
        "timestamp": 1629228070
    },
    {
        "content": "<p>If we use the Unicode and CLDR data files directly from upstream, we'll need to do some parsing and assembly of the data to get it into a convenient format.</p>\n<p>That is exactly the job it looks like emojibase undertakes to do. So it seems quite possible that using emojibase would be helpful. We'll probably still want to reshuffle the data a bit ourselves, but it'll probably be simpler to do so starting from the kind-of-verbose JSON that emojibase provides than to write accurate parsers for the upstream formats.</p>\n<p>Put another way, the upstream files appear to be optimized for use as source code: for human editing and human review. That makes a lot of sense for them, but it means that when consuming them by machine the up-front task of parsing and interpreting them gets more complicated. The emojibase files are in a form that nobody would want to maintain by hand, but are simple to interpret by machine.</p>",
        "id": 1247666,
        "sender_full_name": "Greg Price",
        "timestamp": 1629228568
    },
    {
        "content": "<p>CLDR upstream provides machine-oriented <a href=\"https://github.com/unicode-org/cldr-json\">JSON data</a> compiled from the human-oriented XML source, and uploads it to NPM.</p>",
        "id": 1247764,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629255799
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 1247780,
        "sender_full_name": "Sai Rohitth Chiluka",
        "timestamp": 1629264405
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247764\">said</a>:</p>\n<blockquote>\n<p>CLDR upstream provides machine-oriented <a href=\"https://github.com/unicode-org/cldr-json\">JSON data</a> compiled from the human-oriented XML source, and uploads it to NPM.</p>\n</blockquote>\n<p>I did <code>npm install cldr-annotations-modern</code>, and then grepped for <code>group</code>, couldn't find any of the groups in the <code>node_modules/cldr-annotations-modern</code>. The groups are stored in a separate repo, <a href=\"https://github.com/unicode-org/cldr/blob/91cb12ed9/common/properties/labels.txt\">https://github.com/unicode-org/cldr/blob/91cb12ed9/common/properties/labels.txt</a>.</p>",
        "id": 1247860,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629283961
    },
    {
        "content": "<p>That labels.txt file hasn’t been updated in three years. It looks like those groups actually originate from the UTS <a href=\"https://github.com/zulip/zulip/pull/51\">#51</a> emoji specification: <a href=\"https://unicode.org/Public/emoji/13.1/emoji-test.txt\">https://unicode.org/Public/emoji/13.1/emoji-test.txt</a>.</p>",
        "id": 1247961,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629314767
    },
    {
        "content": "<p><a href=\"https://unicode-org.atlassian.net/browse/CLDR-10355\">https://unicode-org.atlassian.net/browse/CLDR-10355</a></p>",
        "id": 1247962,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629315082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247764\">said</a>:</p>\n<blockquote>\n<p>CLDR upstream provides machine-oriented <a href=\"https://github.com/unicode-org/cldr-json\">JSON data</a> compiled from the human-oriented XML source, and uploads it to NPM.</p>\n</blockquote>\n<p>Oh neat! Good for them.</p>",
        "id": 1247964,
        "sender_full_name": "Greg Price",
        "timestamp": 1629315433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247962\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://unicode-org.atlassian.net/browse/CLDR-10355\">https://unicode-org.atlassian.net/browse/CLDR-10355</a></p>\n</blockquote>\n<p>Hmm yeah. So that was a request to take the information in emoji-test.txt (where it's only in comments) and put it somewhere formal.</p>\n<p>That labels.txt file in CLDR seems like an effort to do exactly that, though it sadly hasn't been maintained. The commits touching it link to this task:<br>\n<a href=\"https://unicode-org.atlassian.net/browse/CLDR-10525\">https://unicode-org.atlassian.net/browse/CLDR-10525</a><br>\n\"Provide the emoji categories/subcategories in a data file\"</p>",
        "id": 1247965,
        "sender_full_name": "Greg Price",
        "timestamp": 1629315605
    },
    {
        "content": "<p>Maybe we should send them a PR? The groups and subgroups are already parsed from emoji-test.txt by <a href=\"https://github.com/unicode-org/cldr/blob/master/tools/cldr-code/src/main/java/org/unicode/cldr/util/Emoji.java\"><code>org.unicode.cldr.util.Emoji</code></a>.</p>",
        "id": 1247966,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629315968
    },
    {
        "content": "<p>(But also, emoji-test.txt is a totally reasonable format to parse, unlike labels.txt.)</p>",
        "id": 1247975,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629316356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247975\">said</a>:</p>\n<blockquote>\n<p>(But also, emoji-test.txt is a totally reasonable format to parse, unlike labels.txt.)</p>\n</blockquote>\n<p>Heh, yeah. Not as convenient as JSON, but those ranges and <code>{}</code> definitely make labels.txt more complicated.</p>",
        "id": 1247996,
        "sender_full_name": "Greg Price",
        "timestamp": 1629318927
    },
    {
        "content": "<p>I think a PR would be neat! The groups and subgroups are kind of in a limbo state by being only in comments.</p>\n<p>Does CLDR have translations for the group and subgroup names? It seems like those would be a useful resource that's right in their wheelhouse -- it's fairly common for emoji-picker UIs to show names for those groups.</p>",
        "id": 1247997,
        "sender_full_name": "Greg Price",
        "timestamp": 1629319045
    },
    {
        "content": "<p>Emojibase parses their group data from emoji-test.txt: <a href=\"https://github.com/milesj/emojibase/blob/03e5b50b78ca058115e9c4a0b4d1fc2ba5f3527b/packages/generator/src/loaders/loadOrderAndGroup.ts\">https://github.com/milesj/emojibase/blob/03e5b50b78ca058115e9c4a0b4d1fc2ba5f3527b/packages/generator/src/loaders/loadOrderAndGroup.ts</a>.</p>",
        "id": 1248001,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629321839
    },
    {
        "content": "<p>Cool, thanks -- good to have confirmed that.</p>",
        "id": 1248018,
        "sender_full_name": "Greg Price",
        "timestamp": 1629345978
    },
    {
        "content": "<blockquote>\n<p>Does CLDR have translations for the group and subgroup names?</p>\n</blockquote>\n<p>Yeah, <a href=\"https://unpkg.com/browse/cldr-misc-modern@39.0.0/main/fr/characterLabels.json\">https://unpkg.com/browse/cldr-misc-modern@39.0.0/main/fr/characterLabels.json</a></p>",
        "id": 1248021,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629347749
    },
    {
        "content": "<p>Hmm, do those correspond to these emoji groups, though? Some of the names definitely appear to correspond, but I don't see a good match for \"People &amp; Body\" (one of the groups in emoji-test.txt), or a clearly square-on match for \"Smileys &amp; Emotion\".</p>\n<p>That translations file kind of sounds like it's about labels for types of Unicode characters in general.</p>",
        "id": 1248027,
        "sender_full_name": "Greg Price",
        "timestamp": 1629350219
    },
    {
        "content": "<p>There’s something fishy going on where the “Smileys &amp; People” group is being split into “People &amp; Body” and “Smileys &amp; Emotion” based on the minor category, but this is currently done <a href=\"https://github.com/unicode-org/cldr/blob/4c4ba8b091bfdcd9bfd6c0a002b7e97034bd5802/tools/cldr-code/src/main/java/org/unicode/cldr/util/PathHeader.java#L1801\">in the translation code</a> rather than in the source data.</p>\n<p><a href=\"https://unicode-org.atlassian.net/browse/CLDR-11227\">https://unicode-org.atlassian.net/browse/CLDR-11227</a></p>",
        "id": 1248032,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1629350877
    },
    {
        "content": "<p>Hmm, I see:</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code>                    <span class=\"k\">case</span> <span class=\"s\">\"Smileys &amp; People\"</span><span class=\"p\">:</span>\n                        <span class=\"n\">String</span> <span class=\"n\">minorCat</span> <span class=\"o\">=</span> <span class=\"n\">Emoji</span><span class=\"p\">.</span><span class=\"na\">getMinorCategory</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">);</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">minorCat</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">\"skin-tone\"</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"n\">minorCat</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">\"hair-style\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n                            <span class=\"k\">return</span> <span class=\"n\">PageId</span><span class=\"p\">.</span><span class=\"na\">Component</span><span class=\"p\">.</span><span class=\"na\">toString</span><span class=\"p\">();</span>\n                        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">minorCat</span><span class=\"p\">.</span><span class=\"na\">contains</span><span class=\"p\">(</span><span class=\"s\">\"face\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n                            <span class=\"k\">return</span> <span class=\"n\">PageId</span><span class=\"p\">.</span><span class=\"na\">People</span><span class=\"p\">.</span><span class=\"na\">toString</span><span class=\"p\">();</span>\n                        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                            <span class=\"k\">return</span> <span class=\"n\">PageId</span><span class=\"p\">.</span><span class=\"na\">Smileys</span><span class=\"p\">.</span><span class=\"na\">toString</span><span class=\"p\">();</span>\n                        <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1248181,
        "sender_full_name": "Greg Price",
        "timestamp": 1629390335
    },
    {
        "content": "<p>Though that still leads to \"People &amp; Body\", which I don't see an obvious match for in that <code>characterLabels.json</code>.</p>",
        "id": 1248182,
        "sender_full_name": "Greg Price",
        "timestamp": 1629390414
    },
    {
        "content": "<p>I think the emoji-test.txt is a sufficient reference point, regardless of the group further splitting (or the lack of) in the translated version of the groups. Shouldn't we nail <code>en</code> first, before everything else?</p>",
        "id": 1248419,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629474263
    },
    {
        "content": "<p>Well, there's a few different things discussed in this thread.</p>\n<p>Scrolling up to the idea that opened it:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"2328\">Rein Zustand</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247261\">said</a>:</p>\n<blockquote>\n<p>The rules in <a href=\"https://github.com/zulip/zulip/blob/master/docs/subsystems/emoji.md#picking-emoji-names\">https://github.com/zulip/zulip/blob/master/docs/subsystems/emoji.md#picking-emoji-names</a> were added ~4 years ago. I think the rules are too complex, and also not generalizable (most cases needs to be evaluated manually)</p>\n</blockquote>\n<p>I think we more or less have consensus that those rules are (at best) not worth it, and that for adding new emoji (<a href=\"https://github.com/zulip/zulip/pull/19371\">#19371</a>), we should ignore that approach and instead use the names we find in CLDR.</p>",
        "id": 1248570,
        "sender_full_name": "Greg Price",
        "timestamp": 1629489639
    },
    {
        "content": "<p>Then we entered a discussion of the different ways we could acquire that data.</p>\n<p>I think emojibase looks like a quite respectable implementation of \"take the CLDR data, and digest it into a convenient-to-consume verbose JSON form\". But then it turns out CLDR upstream already does the same thing:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247764\">said</a>:</p>\n<blockquote>\n<p>CLDR upstream provides machine-oriented <a href=\"https://github.com/unicode-org/cldr-json\">JSON data</a> compiled from the human-oriented XML source, and uploads it to NPM.</p>\n</blockquote>\n<p>so that may be the most convenient source to use.</p>",
        "id": 1248577,
        "sender_full_name": "Greg Price",
        "timestamp": 1629489866
    },
    {
        "content": "<p>Then one thing that emojibase provides, and that the nicely-digested format from CLDR upstream may not -- so a possible reason to go for emojibase -- is the information of which group and subgroup each emoji belongs to.</p>\n<p>That's not an immediate concern, because we don't currently try to use that information anyway. But it'd probably be a nice improvement to the picker UI to start using it, or at least the top-level groups.</p>\n<p>The ideal answer there may be to use CLDR upstream's data, and send them a PR:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/101-design/topic/simplify.20rules.20for.20emoji.20names/near/1247966\">said</a>:</p>\n<blockquote>\n<p>Maybe we should send them a PR? The groups and subgroups are already parsed from emoji-test.txt by <a href=\"https://github.com/unicode-org/cldr/blob/master/tools/cldr-code/src/main/java/org/unicode/cldr/util/Emoji.java\"><code>org.unicode.cldr.util.Emoji</code></a>.</p>\n</blockquote>\n<p>to start including the groups and subgroups.</p>",
        "id": 1248582,
        "sender_full_name": "Greg Price",
        "timestamp": 1629490069
    },
    {
        "content": "<p>According to <a href=\"https://github.com/zulip/zulip/blob/e015f3ed7dba9db01e4c961626d3617794763ec1/docs/subsystems/emoji.md\">https://github.com/zulip/zulip/blob/e015f3ed7dba9db01e4c961626d3617794763ec1/docs/subsystems/emoji.md</a></p>\n<blockquote>\n<p>We use the iamcal emoji data package to provide sprite sheets and individual images for our emoji, as well as a data set of emoji categories, code points, etc.</p>\n</blockquote>\n<p>So currently we use iamcal for the groups, but can switch to CLDR once the PR to the CLDR repo has been merged (which will take a while).</p>\n<p>Moving forward, are we good with using <a href=\"https://github.com/unicode-org/cldr-json\">https://github.com/unicode-org/cldr-json</a> for the naming source? If yes, I can start migrating the current emoji_names.py to it.</p>",
        "id": 1248826,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1629542428
    },
    {
        "content": "<p>So, I tried doing another machine-generated <code>emoji-datasource-google</code> used in <a href=\"https://github.com/zulip/zulip/pull/19386\">#19386</a>, and found the generated dict to be identical to the emojibase version I generated earlier.</p>",
        "id": 1250692,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1630335071
    },
    {
        "content": "<p>This is my code (emoji.json is the file located in emoji-datasource-google in node_modules folder):</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"emoji.json\"</span><span class=\"p\">,</span> <span class=\"s2\">\"r\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">google_emoji_data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">reformat</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"p\">,</span> <span class=\"s2\">\"_\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">\"-\"</span><span class=\"p\">,</span> <span class=\"s2\">\"_\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">EMOJI_NAME_MAPS</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">for</span> <span class=\"n\">emoji_dict</span> <span class=\"ow\">in</span> <span class=\"n\">google_emoji_data</span><span class=\"p\">:</span>\n    <span class=\"n\">emoji_code</span> <span class=\"o\">=</span> <span class=\"n\">emoji_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"non_qualified\"</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">emoji_dict</span><span class=\"p\">[</span><span class=\"s2\">\"unified\"</span><span class=\"p\">]</span>\n    <span class=\"n\">emoji_code</span> <span class=\"o\">=</span> <span class=\"n\">emoji_code</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"n\">canonical_name</span> <span class=\"o\">=</span> <span class=\"n\">reformat</span><span class=\"p\">(</span><span class=\"n\">emoji_dict</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n    <span class=\"n\">aliases</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">reformat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">emoji_dict</span><span class=\"p\">[</span><span class=\"s2\">\"short_names\"</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">reformat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"n\">canonical_name</span><span class=\"p\">]</span>\n    <span class=\"n\">EMOJI_NAME_MAPS</span><span class=\"p\">[</span><span class=\"n\">emoji_code</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"canonical_name\"</span><span class=\"p\">:</span> <span class=\"n\">canonical_name</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"aliases\"</span><span class=\"p\">:</span> <span class=\"n\">aliases</span>\n    <span class=\"p\">}</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"emoji_names.json\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">EMOJI_NAME_MAPS</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 1250693,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1630335177
    },
    {
        "content": "<p>In short, no new library is needed to be included in package.json. Simply use the existing <code>emoji-datasource-google</code>.</p>",
        "id": 1250874,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1630383742
    },
    {
        "content": "<p>I made <a href=\"https://github.com/zulip/zulip/pull/19637\">#19637</a>.</p>",
        "id": 1250940,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1630415161
    }
]