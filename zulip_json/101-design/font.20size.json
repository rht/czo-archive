[
    {
        "content": "<p>I know most people generally agree Zulip's font is a bit too small (but not all)<br>\nNow, there is a 'scientific proof': <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span><br>\n<a href=\"https://www.figma.com/file/MOzpThKvYD3f5jEf1oTVYLVw/Font-Size-Comparison\" target=\"_blank\" title=\"https://www.figma.com/file/MOzpThKvYD3f5jEf1oTVYLVw/Font-Size-Comparison\">https://www.figma.com/file/MOzpThKvYD3f5jEf1oTVYLVw/Font-Size-Comparison</a></p>",
        "id": 715570,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1551994493
    },
    {
        "content": "<p>It turns out that Source Sans Pro 14px is as large as 13px Roboto/Helvetica Nue/Noto Sans</p>",
        "id": 715571,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1551994541
    },
    {
        "content": "<p>nice!</p>",
        "id": 715573,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1551994695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284\">@Boris Yankov</span> can you test what Source Sans Pro 16px would look like for comparison?</p>",
        "id": 715679,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1551999172
    },
    {
        "content": "<p>actually assuming it's not hard, would be great to get 15px and 17px as well in that chart :)</p>",
        "id": 715687,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1551999388
    },
    {
        "content": "<p>Yeah, that'd be valuable.</p>",
        "id": 715696,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1551999637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> <span class=\"user-mention\" data-user-id=\"131\">@Rishi Gupta</span> I added 15px, 16px, 17px sizes<br>\nAt the bottom Slack's font size almost perfectly matches Source Sans 16px in size</p>",
        "id": 715731,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1552000669
    },
    {
        "content": "<p>Great, thanks.  <a href=\"https://github.com/zulip/zulip/pull/9769/files\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/9769/files\">https://github.com/zulip/zulip/pull/9769/files</a> uses 16px, so I think that confirms we had a reasonable plan there.</p>",
        "id": 715751,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1552001201
    },
    {
        "content": "<p>oh interesting, I thought the plan was actually 15px (to match typical products, rather than slack)</p>",
        "id": 715752,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552001238
    },
    {
        "content": "<p>You can see clearly in that PR it's 16px, and I think the choice was to match the actual size of the text.</p>",
        "id": 715763,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1552001859
    },
    {
        "content": "<p>(line-height etc. are independent settings anyway)</p>",
        "id": 715766,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1552001873
    },
    {
        "content": "<p>interesting, I guess I didn't realize font-size was a part of what was being changed by dense mode (what I was imagining was both normal mode and dense mode would have 15px).</p>",
        "id": 715776,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552002186
    },
    {
        "content": "<p>(though yes, it's clear in the PR, and maybe I'm just remembering stuff from 2017)</p>",
        "id": 715778,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552002239
    },
    {
        "content": "<p>maybe one thing that's changed for me in the last year is that I now feel like we should just focus on making one mode, that's similar in font-size and spacing to to Facebook, Gmail dense mode, etc, and then put the remaining design effort into other onboarding projects. (Though that's obviously a bigger discussion.)</p>",
        "id": 715780,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552002619
    },
    {
        "content": "<p>A lot of this discussion simply goes away if an administrator can just paste in some CSS in the organisation settings panel. They can then name that code snippet ( or theme ) and allow the user to select from one of the themes.</p>\n<p>That simple generic solution has a few advantages -</p>\n<p>1. Different organisations different preferences ( read different users )<br>\n2. Opens up an ecosystem for zulip themes ( code snippets )<br>\n3. Is generic enough to fix up any CSS shortfall ( hopefully administrators will be vigilant enough to prevent XSS attacks if those are even possible through the style tag)</p>",
        "id": 715782,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552003317
    },
    {
        "content": "<p>I think zulip on 110% browser zoom is currently basically fine on this front. So the problem this is trying to solve is the new user experience</p>",
        "id": 715787,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552003484
    },
    {
        "content": "<p>I am in favor of one single mode with mostly consistent font sizes.  If our fonts are in a sane range most folks will thrive at normal zoom or maybe +-10% zoom</p>",
        "id": 715788,
        "sender_full_name": "Steve Howell",
        "timestamp": 1552003496
    },
    {
        "content": "<p>I think the solution I proposed would solve the problem for new users since organization administrators could select a default theme for new users.</p>",
        "id": 715793,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552003556
    },
    {
        "content": "<p>by new users I mean new org admins (i.e. people doing zulip trials)</p>",
        "id": 715796,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552003591
    },
    {
        "content": "<p>So wouldnâ€™t the ability to add a default theme mean they have an array of choices plus a good default?</p>",
        "id": 715797,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552003641
    },
    {
        "content": "<p>Since we donâ€™t have the design resources but are not as short on development help.</p>",
        "id": 715799,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552003687
    },
    {
        "content": "<p>I think the first step there is the same regardless, which is to make a good default</p>",
        "id": 715803,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1552003765
    },
    {
        "content": "<p>I have a good one â€” font-size: 15px ðŸ™‚</p>",
        "id": 715805,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552003807
    },
    {
        "content": "<p>Or if we want to match Slack's size: Source Sans @ 16px</p>",
        "id": 715814,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1552004241
    },
    {
        "content": "<p>Discord also uses size 15px, albeit with the Whitney font (which also defaults to Helvetica Neue)</p>",
        "id": 715831,
        "sender_full_name": "Cynthia Lin",
        "timestamp": 1552007883
    },
    {
        "content": "<p>Usually, when one would see 'Helvetica Neue' this means 'system font' as is the case for Facebook and FB Messenger.<br>\nOn Windows, it would be 'Segoe UI'.</p>",
        "id": 716696,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1552159095
    },
    {
        "content": "<p>Stockholm syndrome is a pretty well known term. At lest in the tech community. Usually when one sees a project being left behind in terms of a particular area of interest itâ€™s because people in control havenâ€™t had the chance to catch up to whatâ€™s going on in the larger context.</p>",
        "id": 716796,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552179647
    },
    {
        "content": "<p>Letâ€™s not get overly dramatic.  Itâ€™s a font.  Nobody is being held captive here. Our font is totally readable.</p>",
        "id": 716799,
        "sender_full_name": "Steve Howell",
        "timestamp": 1552180098
    },
    {
        "content": "<p>If the Zulip font strains your eyes, you probably need eyeglasses.</p>",
        "id": 716818,
        "sender_full_name": "Steve Howell",
        "timestamp": 1552183001
    },
    {
        "content": "<p>Fair enough. I can see how you would think Zulipâ€™s design issues begin and end at the font. I think the problem lies deeper in not appreciating value in quick experimentation with design in general. The font is just the most laughably obvious symptom of this issue.</p>",
        "id": 716846,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552200563
    },
    {
        "content": "<p>We've made 373 commits to the frontend just in 2019.</p>",
        "id": 716884,
        "sender_full_name": "Steve Howell",
        "timestamp": 1552221509
    },
    {
        "content": "<p>Not taking away from what zulip has achieved but I think thereâ€™s always scope to be more design oriented. Probably the wrong attitude though I apologise for coming off as dismissive.</p>",
        "id": 716890,
        "sender_full_name": "Armaan Ahluwalia",
        "timestamp": 1552226311
    },
    {
        "content": "<blockquote>\n<p>not appreciating value in quick experimentation with design in general. </p>\n</blockquote>\n<p>I disagree with this analysis.  We do plenty of quick experiments in pull requests, and often discard ideas we thought would be helpful when we actually see them.  And for larger changes or ones where the impact isn't clear in testing, we do quick experiments of test-deploying them on <a href=\"http://chat.zulip.org\" target=\"_blank\" title=\"http://chat.zulip.org\">chat.zulip.org</a>.</p>\n<p>What doesn't make sense is \"quick experiments\" merged to master and exposed to our many thousands of users if after the above we think the change might not be an improvement.  End users have limited patience for the UI randomly changing on them, and we need to spend that patience wisely.  Further, \"quick experiments\" are, by their nature, often hacky and introduce a lot of bugs, often those that are obvious from a few minutes of using the experimental feature.  </p>\n<p>I would like us to be increasing our throughput of visual design changes, but I think the challenges in doing so are more around other problems:</p>\n<ul>\n<li>The fact that I have been suffering from a semi-debilitating GI illness since August which has severaly reduced our bandwidth for complex changes that are likely to break things.</li>\n<li>The fact that the main design issues we'd like to focus on in the near term are in the app's main logged-in view, which is a particularly risky area to modify).  </li>\n<li>The fact that even with design improvements in the last 2 years, the core HTML/CSS logic for the message feed was written in 2013 by an early-stage startup.  While it is essentially bug-free, its implementation makes changes require a lot of care to avoid introducing lots of annoying layout/positioning bugs.  <span class=\"user-mention\" data-user-id=\"58\">@Steve Howell</span> has been making a lot of great progress on cleaning it up to be easy to modify to support the changes we'd like to make.  But this approach of first cleaning up the underyling implementation means that you won't be seeing immediate visual changes even while very active work is happening on making them possible.</li>\n</ul>",
        "id": 716989,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1552249459
    },
    {
        "content": "<p>Anders and Vaibhav have also been working on cleaning our message-pane markup, which is particularly hard to work with due to some legacy decisions.  A lot of simplifications from Anders have already been merged, and Vaibhav's stuff is around the corner.</p>",
        "id": 716997,
        "sender_full_name": "Steve Howell",
        "timestamp": 1552249658
    },
    {
        "content": "<p>Hey! I know it was discussed a couple of years ago and is a fairly complex project, but I'd like to bump the idea of increasing Zulip's font size to match modern web standards. I think it could do a lot to improve users' first impression of the product, and would help make it more readable for folks who don't think of using their browser's \"+\" key. Thoughts?</p>\n<p>A couple of questions we would definitely need to address:</p>\n<ol>\n<li>What size should we bump Zulip to? I updated the comparison that was shared a couple of years ago to use the current Slack font (Lato 15px). Unfortunately, this tool doesn't seem to have Discord's font (Whitney 16px), and I'm having a hard time even figuring out what Gmail is doing. If someone can  generate a better comparison, please go for it! <a href=\"https://www.figma.com/file/T31rhac6laNhy4NdgsyGCf/Font-Size-Comparison-2021?node-id=0%3A1\">https://www.figma.com/file/T31rhac6laNhy4NdgsyGCf/Font-Size-Comparison-2021?node-id=0%3A1</a></li>\n<li>If we work on this, should we just increase the size for everyone, or should we increase it by default but retain a \"compact\" option?</li>\n</ol>",
        "id": 1154219,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617654307
    },
    {
        "content": "<p>See also <a href=\"https://github.com/zulip/zulip/pull/12611\">#12611</a>.</p>",
        "id": 1154222,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617654730
    },
    {
        "content": "<p>We should make the font size slightly larger.</p>",
        "id": 1154223,
        "sender_full_name": "Steve Howell",
        "timestamp": 1617654880
    },
    {
        "content": "<p>Yeah I donâ€™t think it will take much to make a big difference. Something like 15px with a line-height of 1.4. (We currently use 14px with a line-height of ~1.2.)</p>",
        "id": 1154224,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617655050
    },
    {
        "content": "<p>But I suspect we have lots of users who like Zulip <em>because</em> itâ€™s so information-dense, so weâ€™ll want a range of options.</p>",
        "id": 1154225,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617655126
    },
    {
        "content": "<p>Yep I suggest a very minor tweak. My hypothesis is that folks who like info density and are blessed with good eyesight just use browser zoom.</p>",
        "id": 1154226,
        "sender_full_name": "Steve Howell",
        "timestamp": 1617655294
    },
    {
        "content": "<p>Itâ€™s not that simple; you canâ€™t just zoom away a line-height difference.</p>",
        "id": 1154227,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617655327
    },
    {
        "content": "<p>And I think line-height is actually the more important factor here.</p>",
        "id": 1154228,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617655339
    },
    {
        "content": "<p>I'm pretty flexible on how we do this.  I do think that our life will be a lot easier for managing this transition if we preserve a \"dense UI\" option that has roughly the current spacing, and then change the default spacing.  And I do thing there will be plenty of people who want the more dense view long-term.</p>",
        "id": 1154291,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617661341
    },
    {
        "content": "<p>We have a <code>dense_mode</code> setting in development-only \"Display settings\" that is intended for this purpose.</p>",
        "id": 1154292,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617661379
    },
    {
        "content": "<p>I think the Right way to do this would be to try changing the font size and line-height manually for individual components, and then do CSS refactoring to make doing so without massively forking CSS in a way that will be painful to maintain.  (E.g. changing things intended to be vertically centered to not achieve that goal with complex pixel math).</p>",
        "id": 1154293,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617661462
    },
    {
        "content": "<p>(E.g. I bet our unread count markers will break if you change the font size in a way that's totally avoidable in theory, which would make supporting multiple sizes annoying).</p>",
        "id": 1154294,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617661496
    },
    {
        "content": "<p>I do think this is one our most important issues and it'd be well worth an entire week from a member of our leadership to do it.</p>",
        "id": 1154296,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617661535
    },
    {
        "content": "<p>It sounds like there might be a few plausible options (e.g. 15px vs. 16px; 1.4 spacing or a bit more). It would be nice if we could play around with it in a super-hacky way to see what looks good.</p>\n<p>Chatting with <span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span>, there are currently a bunch of redundant places where font size is indicated. Would someone be up for cleaning that up to make it easy to just fiddle with the browser css and try things?</p>",
        "id": 1154958,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617732566
    },
    {
        "content": "<p>There are probably also refactors that could be done before we finalize the new sizing by seeing what gets messed up.</p>",
        "id": 1154961,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617732622
    },
    {
        "content": "<p>That was the motivation behind <a class=\"stream-topic\" data-stream-id=\"6\" href=\"/#narrow/stream/6-frontend/topic/CSS.20migrations.3A.20rem\">#frontend &gt; CSS migrations: rem</a>.</p>",
        "id": 1154963,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617732654
    },
    {
        "content": "<p>Well, the thought I'd had is that we can probably remove several duplicate <code>font-size: 14px</code> lines (E.g. there's one for the right sidebar that is identical to the font-size entry for <code>body</code>), and then be able to just change the fields on <code>body</code> in the JS console.</p>",
        "id": 1155355,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617755550
    },
    {
        "content": "<p>Which is sorta orthogonal to that migration -- basically cleaning up duplicate CSS that makes this annoying to change.</p>",
        "id": 1155356,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617755569
    },
    {
        "content": "<p>If we think that a lot of users want increased font size and line height, and those who don't want that can simply zoom out, then we should do this change for all our users and not think about adding a <code>compact</code> or <code>dense</code> mode.</p>\n<p>Long term, there are two ways we could add such a setting:</p>\n<ol>\n<li>Create a css file like <code>night_mode.css</code>. This will not just be overriding font-size or line spacing but also <code>top/bottom...</code> position of elements, padding, width, height etc.</li>\n<li>Convert all our <code>px</code> values to <code>rem</code> and then simply scale the app like zoom in / out  by modifying font-size for <code>html</code> tag. This is actually complicated by the fact that our css external libraries like <code>bootstrap</code>, <code>bootstrap-tooltip</code> have pixel values for font-size, padding, position (top/bottom...) etc. So, the first step for this plan would be to upgrade our old libraries as the new version of these libraries already use <code>rem</code> values or we need to replace outdated libraries (like we are doing for tooltips).</li>\n</ol>\n<p>So, <code>1</code> is actually quicker to do and can be done in 2 weeks time frame but there is a huge maintenance cost associated with it. Also, we are not likely to know if anything has broken until someone complains.<br>\n<code>2</code> is something which I am already working on. I believe it will take us more than a year to get to it.</p>",
        "id": 1155733,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617782003
    },
    {
        "content": "<p>Well, we probably also have a lot of users who like the current font size and line height, which is why we might want such a mode.</p>",
        "id": 1155741,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617782816
    },
    {
        "content": "<p>What I was imagining is something like <code>night_mode.css</code>, using a similar strategy (of refactoring components that are annoying to override in that file where possible).</p>",
        "id": 1155742,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617782910
    },
    {
        "content": "<p>I think option 2 is not a year's work -- you spent less time than that on the first big bootstrap upgrade, and it's not clear to me that later ones will be worse (Since e.g. the most annoying part of the Bootstrap 3 upgrade was dealing with extracting all of our hacks from that file, which is now essentially done via the separate typeahead module).</p>",
        "id": 1155744,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783063
    },
    {
        "content": "<p>Upgrading bootstrap to v4 (which we really want) will make our libraries like <code>bootstrap-tooltip</code> and <code>bootstrap-typeahead</code> outdated and maybe unsuable. So, we have to find suitable alternatives for them.</p>",
        "id": 1155749,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783258
    },
    {
        "content": "<p>Have we tested that it breaks bootstrap-typeahead?</p>",
        "id": 1155753,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783309
    },
    {
        "content": "<p>For the tooltip library, we're in the process of replacing that anyway and I imagine will be done with <code>bootstrap-tooltip</code> in a few weeks.</p>",
        "id": 1155754,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783332
    },
    {
        "content": "<p>(Though you have a better sense of that than I do, I suppose)</p>",
        "id": 1155755,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/101-design/topic/font.20size/near/1155742\">said</a>:</p>\n<blockquote>\n<p>What I was imagining is something like <code>night_mode.css</code>, using a similar strategy (of refactoring components that are annoying to override in that file where possible).</p>\n</blockquote>\n<p>Okay, I will start doing the initial work like refactoring things for this.</p>",
        "id": 1155756,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783358
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/101-design/topic/font.20size/near/1155754\">said</a>:</p>\n<blockquote>\n<p>For the tooltip library, we're in the process of replacing that anyway and I imagine will be done with <code>bootstrap-tooltip</code> in a few weeks.</p>\n</blockquote>\n<p>Yeah.</p>",
        "id": 1155757,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783383
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/101-design/topic/font.20size/near/1155753\">said</a>:</p>\n<blockquote>\n<p>Have we tested that it breaks bootstrap-typeahead?</p>\n</blockquote>\n<p>Yes, we will have to upgrade it to  <a href=\"https://github.com/bassjobsen/Bootstrap-3-Typeahead\">https://github.com/bassjobsen/Bootstrap-3-Typeahead</a></p>",
        "id": 1155758,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783426
    },
    {
        "content": "<p>Or something not dependent on bootstrap if we can.</p>",
        "id": 1155759,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783455
    },
    {
        "content": "<p>That upgrade at least looks not hard, since it's trying to preserve compatibility.</p>",
        "id": 1155760,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783606
    },
    {
        "content": "<p>I would not be sad to move to a totally different typeahead library.  Though we have customized the bootstrap one some with new features, so if we can unblock bootstrap upgrades by rebasing our patches onto that, probably worth doing as an intermediate step.</p>",
        "id": 1155761,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617783670
    },
    {
        "content": "<p>I was planning to do after <code>tippy</code> migration. I can do it earlier.</p>",
        "id": 1155762,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617783718
    },
    {
        "content": "<p>I think you can start looking at it, now that we're starting to merge the tippy migration; I think it's unlikely we won't finish that so you can assume it'll happen.</p>",
        "id": 1155771,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617784312
    },
    {
        "content": "<p>Thank you guys for working through these details! Just to make sure I understand the conclusion, is the idea to use approach (2), but with multiple size options available to users?</p>",
        "id": 1155807,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617786370
    },
    {
        "content": "<p>What's the rough estimate of how long it will take based on the above discussion?</p>",
        "id": 1155810,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617786432
    },
    {
        "content": "<p>Right now we are planning to do preparation for both <code>1</code> and <code>2</code> because it is good work to do regardless.</p>\n<ul>\n<li>Upgrade bootstrap and linked libraries (prep work for <code>2</code>)</li>\n<li>Refactor work for <code>1</code> to make something like <code>night_mode.css</code> possible for <code>comfortable</code> mode.</li>\n</ul>\n<p>After we have done this, we can decide on what to do. I imagine option <code>1</code> makes more sense after doing bootstrap upgrade anyway.</p>",
        "id": 1155824,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617786926
    },
    {
        "content": "<p>Hm, just to check, is the idea that the prep work will provide additional information as to whether option <code>2</code> is best after all? If not, would it make sense to start by implementing <code>1</code> before doing the prep work for <code>2</code>?</p>",
        "id": 1156117,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1617813900
    },
    {
        "content": "<p>We know <code>2</code> is the perfect thing to do but it will take some time to achieve. I can work towards <code>1</code> over this weekend.</p>",
        "id": 1156120,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617814361
    },
    {
        "content": "<p>Yeah, I think it makes sense to try to implement 1 but potentially rework specific components using a strategy that we'll be happy with maintaining.  E.g. for the left sidebar, I can imagine us trying to figure out CSS for the unread count boxes that would work with any font-size/line-height, e.g. perhaps using alignment CSS rather than specifying it via carefully tested margins to make sure we vertically center the unread counts bubbles within their rows and right-align them horizontally with each other.</p>",
        "id": 1156139,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617815853
    },
    {
        "content": "<p>And that'd be a relatively independent PR that would make our CSS better and would then mean we don't need to do something really fiddly when we try to make supporting multiple font sizes work in the sidebars.</p>",
        "id": 1156142,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617815883
    },
    {
        "content": "<p>This is basically the same strategy we took with <code>night_mode.css</code> -- when you find a component where you're going to need to do something really annoying to try a different size, try to fix the component so that the number of overrides you need to hand-code is manageable.</p>",
        "id": 1156144,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617816013
    },
    {
        "content": "<p>Yeah, makes sense.</p>",
        "id": 1156148,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617816185
    },
    {
        "content": "<p>Also for having the conversation about what new font size to go to, it'd be kinda nice if one can just change the <code>font-size</code> and <code>line-height</code> on body in the JS inspector and see what it looks like.</p>",
        "id": 1156150,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617816251
    },
    {
        "content": "<p>Okay, let me see what I can do.</p>",
        "id": 1156158,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617816691
    },
    {
        "content": "<blockquote>\n<p>If we think that a lot of users want increased font size and line height, and those who don't want that can simply zoom out,</p>\n</blockquote>\n<p>No, remember, the line-height ratio can <strong>not</strong> be zoomed.</p>",
        "id": 1156189,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617818305
    },
    {
        "content": "<p>The <code>night_mode.css</code> architecture is currently constrained by the need to do this PostCSS trick:</p>\n<div class=\"codehilite\" data-code-language=\"SCSS\"><pre><span></span><code><span class=\"k\">@media</span> <span class=\"p\">(</span><span class=\"n\">prefers-color-scheme</span><span class=\"o\">:</span> <span class=\"n\">dark</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nt\">body</span><span class=\"nc\">.color-scheme-automatic</span> <span class=\"p\">{</span>\n        <span class=\"k\">@extend</span> <span class=\"nt\">body</span><span class=\"nc\">.night-mode</span><span class=\"o\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Since we have no such constraint with <code>font-size</code>, thereâ€™s no need to use a separate CSS file. We can instead use PostCSS nesting to keep all the sizes for a given element together:</p>\n<div class=\"codehilite\" data-code-language=\"SCSS\"><pre><span></span><code><span class=\"nc\">.some-class</span> <span class=\"p\">{</span>\n    <span class=\"nt\">font-size</span><span class=\"nd\">:</span> <span class=\"nt\">15px</span><span class=\"o\">;</span>\n    <span class=\"nt\">line-height</span><span class=\"nd\">:</span> <span class=\"nt\">1</span><span class=\"nc\">.4</span><span class=\"o\">;</span>\n\n    <span class=\"nt\">body</span><span class=\"nc\">.dense-mode</span> <span class=\"k\">&amp;</span> <span class=\"p\">{</span>\n        <span class=\"nt\">font-size</span><span class=\"nd\">:</span> <span class=\"nt\">14px</span><span class=\"o\">;</span>\n        <span class=\"nt\">line-height</span><span class=\"nd\">:</span> <span class=\"nt\">1</span><span class=\"nc\">.2</span><span class=\"o\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1156292,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617824499
    },
    {
        "content": "<p>Okay, I think this will make it easier to maintain then.</p>",
        "id": 1156304,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617825026
    },
    {
        "content": "<p>I think we can use <code>less_dense_mode</code> and <code>more_dense_mode</code> for this, which was added in <a href=\"https://github.com/zulip/zulip/commit/6967b6519d18be3b74eb351477537acbe9cba0f9\">6967b6519d18be3b74eb351477537acbe9cba0f9</a></p>",
        "id": 1157045,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617869989
    },
    {
        "content": "<p>What do you guys think of changes like  <a href=\"https://github.com/zulip/zulip/pull/18047\">#18047</a>?</p>",
        "id": 1157416,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617879480
    },
    {
        "content": "<p>We can do this incrementally for different components slowly until all the views are migrated.</p>",
        "id": 1157417,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617879506
    },
    {
        "content": "<p>I think the actual visuals have some issues (E.g. the \"Time\" field in \"Recent topics\" line-wrapping), but that's probably fixable with adjustments in how we allocate space (E.g. the \"Stream\" column is probably too big).  But I assume the question is about the technical strategy.</p>",
        "id": 1157630,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899183
    },
    {
        "content": "<p>I think <code>body.less_dense_mode &amp; {</code> blocks are great.  For unread counts, I think I'd prefer to just have the <code>count/value</code> classes we use to define the unread counts have a <code>body.less_dense_mode</code> override on them, rather than having a <code>font-small</code> CSS class that we need to add in a bunch of places.</p>",
        "id": 1157635,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899359
    },
    {
        "content": "<p>Fundamentally, we should just have an \"unread count\" component, define CSS for it (including a <code>less_dense_mode</code> override), and be able to use that in a bunch of places.</p>",
        "id": 1157636,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899402
    },
    {
        "content": "<p>There will always be tradeoffs when deciding column widths in recent topics. The total width we have is limited, unless we want to keep users list hidden by default in less dense mode.</p>",
        "id": 1157638,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617899486
    },
    {
        "content": "<p>It'd take some somewhat annoying CSS refactoring since the current implementation has duplication, but that is one of our most visually important widgets and we could probably do better.  Here's the core implementation:</p>\n<div class=\"codehilite\"><pre><span></span><code>/* We are mostly consistent in how we style\n   unread counts, except for starred messages.\n   This is the common section.\n*/\n.top_left_all_messages .count,\n.top_left_private_messages .count,\n.top_left_starred_messages .count,\n.top_left_mentions .count,\n#stream_filters .count,\n.topic-unread-count,\n.private_message_count {\n    float: right;\n    padding: 0 4px;\n    height: 16px;\n    line-height: 16px;\n    font-size: 12px;\n    font-weight: normal;\n    letter-spacing: 0.6px;\n    border-radius: 4px;\n}\n</code></pre></div>\n<p>And then there's basically a duplicate in the the right sidebar.</p>\n<p>What I'd want is to make a new <code>unread_count</code> CSS class that has all the properties, including alignment positioning, and we can just use for all of the widgets with minimal variation.  And then we just need to make that component have <code>less_dense_mode</code> support.</p>",
        "id": 1157639,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899609
    },
    {
        "content": "<p>(Which I'd put in <code>app_components.css</code> to mark it as a nice reusable component)</p>",
        "id": 1157641,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899659
    },
    {
        "content": "<p>Does that make sense?  I'd be happy to prototype this one a bit to explain what I have in mind a bit more.</p>",
        "id": 1157642,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899681
    },
    {
        "content": "<p>Okay, makes sense.</p>",
        "id": 1157643,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617899689
    },
    {
        "content": "<p>While it will take a bit more time to do things this way, the end result is that at least the things we've put nontrivial effort into making support multiple sizes will at least have a reasonable CSS structure that makes sense.   (We're going to need to do a bunch of manual testing with this sort of refactor either way, and it'd be nice if we ended up with some clean components afterwards).</p>",
        "id": 1157646,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617899833
    },
    {
        "content": "<p>Iâ€™m worried that 16px is <em>too</em> big; I think we want to try 15px. Also, currently <code>#recent_topics_view</code> inherits font-size from <code>body</code>, so I think we should preserve that inheritance.</p>",
        "id": 1157686,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617902988
    },
    {
        "content": "<p>Yeah, agreed on that point as well -- we probably want to have a <code>body</code> rule that sets <code>font-size</code> in this way as a first step, and then we can do individual branches that fix the other aspects of a component to make it look nice with the new font-size..</p>",
        "id": 1157688,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1617903175
    },
    {
        "content": "<p>15px makes more sense given we want to scale the app horizontally since we have limited width.</p>",
        "id": 1157691,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617903430
    },
    {
        "content": "<p>If we set <code>15px</code> <code>font-size</code> for <code>body</code> directly, it might break a lot of things. I was thinking we take the approach of breaking this task into components and migrating pieces one at a time. Like we can do Recent topics, then settings overlay, etc.</p>",
        "id": 1157697,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617903522
    },
    {
        "content": "<p>The dense mode setting is only exposed in development. Itâ€™s not a problem to break things.</p>",
        "id": 1157699,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617903558
    },
    {
        "content": "<p>How I image it is we enable dense mode on <a href=\"http://chat.zulip.org\">chat.zulip.org</a> + development. Then migrate pieces. This way we don't have stare at a huge pile of commits to change a lot of css code. We can take our time to complete the migration and even get help from other community members for this.</p>",
        "id": 1157704,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1617903680
    },
    {
        "content": "<p>Iâ€™m not speaking in hypotheticalsâ€”the dense mode setting is exposed, only in development, right now. While weâ€™re working out the most obvious issues, that should be plenty. Once we think it works reasonably well, we can expose the setting on <a href=\"http://chat.zulip.org\">chat.zulip.org</a> and invite broader testing, then turn it off by default.</p>",
        "id": 1157717,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1617904440
    },
    {
        "content": "<p>Updated <a href=\"https://github.com/zulip/zulip/pull/18047\">#18047</a> with the unread counts refactor.</p>",
        "id": 1158888,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1618000221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> <span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> what do you guys think about approach in <a href=\"https://github.com/zulip/zulip/pull/18047/commits/2475a0dd6b20cc4b12e365008d3e7c9fddb5f233#diff-a74b2e8e115b03cbe720d6b8cd23c9a80cb70c011adb72ce28b7a26b95314e54\">https://github.com/zulip/zulip/pull/18047/commits/2475a0dd6b20cc4b12e365008d3e7c9fddb5f233#diff-a74b2e8e115b03cbe720d6b8cd23c9a80cb70c011adb72ce28b7a26b95314e54</a></p>",
        "id": 1172940,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620001341
    },
    {
        "content": "<p>It is deployed on <a href=\"http://aman.zulipdev.org:9991/#recent_topics\">my test server</a> right now.</p>",
        "id": 1172941,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620001370
    },
    {
        "content": "<p>You can change the<code> font-size</code> of <code>html</code> to test how it scales. I feel like we can support 14px, 15px and maybe 16px with this method with not much maintenance. We will have to clean up some rough edges.</p>",
        "id": 1172942,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620001438
    },
    {
        "content": "<p>We are using <code>postcss</code> to convert properties which affect vertical spacing into <code>rem</code> format. This allows us to keep easy to develop on <code>px</code> values in the css files.</p>",
        "id": 1172943,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620001665
    },
    {
        "content": "<p>I think itâ€™s not a good idea to change what CSS means at compile time like this. That would be confusing, inflexible, and a source of really weird bugs.</p>",
        "id": 1172945,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620003099
    },
    {
        "content": "<p>We already have classes, <code>rem</code>s, CSS variables, and PostCSS variables as mechanisms for switching font sizes. Thereâ€™s no reason to add another one that involves <em>changing what numbers mean</em>.</p>",
        "id": 1172946,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620003469
    },
    {
        "content": "<p>Also, again, I think line-height is the more important factor, and that is not something it makes sense to try to programmatically adjust (even if it did make sense to programmatically adjust font-size, which it doesnâ€™t). Weâ€™re going to need to make human decisions about what looks right. Changing line-height will have other cascading effects, too; a larger line-height will require larger spacing between paragraphs and between messages, adjustments to our heavily tweaked list item spacing, and so on.</p>",
        "id": 1172947,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620004029
    },
    {
        "content": "<p>But, that way we will not be able to support a range of options. We can explicitly set <code>line-height</code> for different modes and not set them as rem units.</p>",
        "id": 1173014,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034435
    },
    {
        "content": "<p>This is exactly what twitter does. As I can see, <code>line-height</code> ranges from 18px to 28px while rest of the properties which affect vertical spacing of elements are in rem.</p>",
        "id": 1173015,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034495
    },
    {
        "content": "<p>For dense mode, this change won't introduce any bugs as we are just changing units.</p>",
        "id": 1173016,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034614
    },
    {
        "content": "<p>For other modes, we will have polish the css but it will eventually lead us to writing css that is much better than hardcoded placements.</p>",
        "id": 1173017,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034704
    },
    {
        "content": "<p>For example, changes like <a href=\"https://github.com/zulip/zulip/pull/18047/commits/8834adac9b8560ee565e4664a1a22078c6ae166d\">https://github.com/zulip/zulip/pull/18047/commits/8834adac9b8560ee565e4664a1a22078c6ae166d</a></p>",
        "id": 1173018,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034762
    },
    {
        "content": "<p>We can then also properly scale font size for mobile devices.</p>",
        "id": 1173019,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620034918
    },
    {
        "content": "<p>We could easily support font sizes between 13px to 16px this way as far as I have tested.</p>",
        "id": 1173020,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620035071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"5140\">Aman Agrawal (amanagr)</span> <a href=\"#narrow/stream/101-design/topic/font.20size/near/1173017\">said</a>:</p>\n<blockquote>\n<p>For other modes, we will have polish the css but it will eventually lead us to writing css that is much better than hardcoded placements.</p>\n<p>For example, changes like <a href=\"https://github.com/zulip/zulip/pull/18047/commits/8834adac9b8560ee565e4664a1a22078c6ae166d\">https://github.com/zulip/zulip/pull/18047/commits/8834adac9b8560ee565e4664a1a22078c6ae166d</a></p>\n</blockquote>\n<blockquote>\n<p>right_sidebar: Center align user_circles irrespective of position.</p>\n</blockquote>\n<p>This is a good kind of change which we'll definitely want to keep doing. We'll need this kind of change in order to make dense/loose mode work well, no matter what approach we take.</p>",
        "id": 1173254,
        "sender_full_name": "Greg Price",
        "timestamp": 1620065446
    },
    {
        "content": "<p>I think if that plugin helps you experiment with scaling the layout so as to spot issues like the one that commit fixed, then that is a useful tool for development in order to keep generating more fixes like that one.</p>\n<p>But like Anders said, it would be super confusing to have that as part of how the app normally works, either in normal development or in production. If we wanted the effect that plugin has, it would be better to do the same thing but in the source code -- i.e. make a sweep through the source code to switch all those vertical lengths to rem.</p>",
        "id": 1173264,
        "sender_full_name": "Greg Price",
        "timestamp": 1620065826
    },
    {
        "content": "<p>But <code>10px</code> in <code>rem</code> is <code>0.714285714285714</code> keeping 14 as base which is hard to relate to and understand as Tim said some time ago. If we are sure we don't want to follow this approach, I will follow the approach we previously discussed then.</p>",
        "id": 1173351,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620071916
    },
    {
        "content": "<p><code>calc(10rem / 14)</code></p>",
        "id": 1173353,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620072561
    },
    {
        "content": "<p>So, if I do that in the codebase, will it be an accepted approach?</p>",
        "id": 1173354,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620072843
    },
    {
        "content": "<p>Depends. I donâ€™t think we actually want every single vertical <code>10px</code> in our code to depend on the font size. Some of them are really just <code>10px</code>. For the ones that should depend on the font size, we probably want to make a CSS or PostCSS variable for the appropriate <code>rem</code> value, and/or use a more <a href=\"#narrow/stream/6-frontend/topic/CSS.20migrations.3A.20rem/near/1055107\">systematic scale</a>.</p>",
        "id": 1173359,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620073138
    },
    {
        "content": "<p>I tried to use a scale like that but we really want to things like padding, margin, height etc to scale with font size and each of them have very different values rainging from -50px to 2000px which cannot fit in a scale like that.</p>",
        "id": 1173361,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620073246
    },
    {
        "content": "<p>Also, width and height of different icons and images should scale too.</p>",
        "id": 1173362,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620073313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"5140\">Aman Agrawal (amanagr)</span> <a href=\"#narrow/stream/101-design/topic/font.20size/near/1173361\">said</a>:</p>\n<blockquote>\n<p>â€¦ but we really want to things like padding, margin, height etc to scale with font size â€¦</p>\n</blockquote>\n<p>No, I think we probably don't. For the mobile app, we explicitly don't do this, for reasons described here:<br>\n<a href=\"https://github.com/zulip/zulip-mobile/blob/master/docs/style.md#px-rem-no-em\">https://github.com/zulip/zulip-mobile/blob/master/docs/style.md#px-rem-no-em</a></p>",
        "id": 1173364,
        "sender_full_name": "Greg Price",
        "timestamp": 1620073653
    },
    {
        "content": "<p>Of those two reasons, I think the accessibility reason applies equally well for at least mobile web as it does for the mobile app.</p>",
        "id": 1173365,
        "sender_full_name": "Greg Price",
        "timestamp": 1620073691
    },
    {
        "content": "<p>I guess the detailed explanation is here:<br>\n<a href=\"https://github.com/zulip/zulip-mobile/blob/master/docs/background/webview.md#why-mostly-px-and-not-rem\">https://github.com/zulip/zulip-mobile/blob/master/docs/background/webview.md#why-mostly-px-and-not-rem</a></p>",
        "id": 1173366,
        "sender_full_name": "Greg Price",
        "timestamp": 1620073722
    },
    {
        "content": "<p>Yeah. I reiterate that the goal is not to emulate the browser zoom option. Some of the metrics will need to change because they are chosen to fit a line of text, but others will not.</p>",
        "id": 1173368,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1620073854
    },
    {
        "content": "<p>I was just trying to implement what twitter is doing for this -&gt; <a href=\"https://twitter.com/i/display\">https://twitter.com/i/display</a> which is fascinating.</p>",
        "id": 1173376,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620075066
    },
    {
        "content": "<p>I understand the above context. Let me do the refactoring work then using the postcss plugin I wrote, then we can discuss more about this.</p>",
        "id": 1173377,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620075193
    },
    {
        "content": "<p>Do you want to split the cleanup commits to make code less scale-dependant to another PR, so we can merge those?</p>",
        "id": 1173469,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1620078910
    },
    {
        "content": "<p>Yeah, I will.</p>",
        "id": 1173587,
        "sender_full_name": "Aman (amanagr)",
        "timestamp": 1620084837
    }
]