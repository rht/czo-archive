[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"4922\">@Abhigyan Khaund</span> <span class=\"user-mention\" data-user-id=\"131\">@Rishi Gupta</span> Let's continue <a href=\"#narrow/stream/65-checkins/subject/Abhigyan/near/605483\" title=\"#narrow/stream/65-checkins/subject/Abhigyan/near/605483\">this discussion</a> here.</p>\n<p>One thing I'm curious about in <a href=\"https://github.com/zulip/zulip-electron/blob/eeb0b4a666281251913899f00776ffebdb705525/app/renderer/js/utils/domain-util.js#L158\" target=\"_blank\" title=\"https://github.com/zulip/zulip-electron/blob/eeb0b4a666281251913899f00776ffebdb705525/app/renderer/js/utils/domain-util.js#L158\">the linked code</a> is: what's the interaction here? Is the user getting a yes/no dialog, and if they say yes then we trust the certificate? (It kind of looks like that to me, from the code, but I'm not sure.)</p>",
        "id": 605706,
        "sender_full_name": "Greg Price",
        "timestamp": 1530316208
    },
    {
        "content": "<p>If so, the main thing I'd want is to change that interaction. I think it'd be best to make it closer to the norm set by browsers: if the certs are bad, that's just an error, full stop. There will be corporate environments and so on where it makes sense to add certs to the trust store; but that's an admin-type setting, not part of the UI of normal use of the app.</p>",
        "id": 605707,
        "sender_full_name": "Greg Price",
        "timestamp": 1530316377
    },
    {
        "content": "<p>For examples of what browsers do, take your favorite browser and go to <a href=\"https://untrusted-root.badssl.com/\" target=\"_blank\" title=\"https://untrusted-root.badssl.com/\">https://untrusted-root.badssl.com/</a> , or to the other pages under <a href=\"https://badssl.com/\" target=\"_blank\" title=\"https://badssl.com/\">https://badssl.com/</a> .</p>",
        "id": 605708,
        "sender_full_name": "Greg Price",
        "timestamp": 1530316444
    },
    {
        "content": "<p>(Generally there is a UI -- behind an extra click or two, and sharply de-emphasized -- to go load the site this time, but it doesn't add it to a permanent trust list.)</p>",
        "id": 605709,
        "sender_full_name": "Greg Price",
        "timestamp": 1530316602
    },
    {
        "content": "<p>Here yes the user is getting a yes/no dialog box as you said. If it's a yes we trust the certificate and add the server. In case of a no we reject the server. We have put up a warning to add the certificate at from <code>Settings&gt;Organizations</code> if they have one.</p>",
        "id": 605799,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530356878
    },
    {
        "content": "<blockquote>\n<p>There will be corporate environments and so on where it makes sense to add certs to the trust store; but that's an admin-type setting, not part of the UI of normal use of the app.</p>\n</blockquote>\n<p>In our case of the desktop app, we aren't reading the certs from the trust store/list, rather the user has to add the certificate through our app for it to be passed as a valid certificate. We don't require any effort from admin here.</p>",
        "id": 605801,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530356973
    },
    {
        "content": "<blockquote>\n<p>(Generally there is a UI -- behind an extra click or two, and sharply de-emphasized -- to go load the site this time, but it doesn't add it to a permanent trust list.)</p>\n</blockquote>\n<p>In our case as well, we aren't adding the site to a permanent trust list and loading only this one time until the user adds the certificate from the settings.</p>",
        "id": 605803,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530357109
    },
    {
        "content": "<blockquote>\n<p>(Generally there is a UI -- behind an extra click or two, and sharply de-emphasized -- to go load the site this time, but it doesn't add it to a permanent trust list.)</p>\n</blockquote>\n<p>The cert behaviour in our app is same as the browser. So if you visit <a href=\"https://untrusted-root.badssl.com/\" target=\"_blank\" title=\"https://untrusted-root.badssl.com/\">https://untrusted-root.badssl.com/</a> it shows you the warning but let you in once you click on <code>Proceed to untrusted-root.badssl.com (unsafe)</code>. We are doing the same thing with the app that is - if a user add a server which doesn't have a proper/valid certificate, we show the warning alert first and let the user decide whether they want to add it or not.</p>",
        "id": 605805,
        "sender_full_name": "Akash Nimare",
        "timestamp": 1530357448
    },
    {
        "content": "<p>Ok, I see -- and in particular, when the user starts the app up again in the future, they'll get the same error?</p>",
        "id": 606737,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541212
    },
    {
        "content": "<p>In that case, our behavior is pretty close to what the browsers do, and I'd just want to make our messaging around it be close to that too, to match.</p>",
        "id": 606738,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541258
    },
    {
        "content": "<p>On my phone right now, but basically I'd copy a lot of the text from the browser interactions, and try to make it feel like we're asking the same question.</p>",
        "id": 606739,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541391
    },
    {
        "content": "<p>Or really, if you look at at least the Chrome interaction, it doesn't feel like asking a question -- it's telling you about something wrong. And then there's this little option in the corner to bypass it.</p>",
        "id": 606740,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541461
    },
    {
        "content": "<p>Also, a really important part will be to fix this:</p>\n<blockquote>\n<p>In our case of the desktop app, we aren't reading the certs from the trust store/list, rather the user has to add the certificate through our app for it to be passed as a valid certificate. We don't require any effort from admin here.</p>\n</blockquote>\n<p>If the system has some additional certs added to the trust store that browsers use, we should be sure to accept those certs too.</p>",
        "id": 606741,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541615
    },
    {
        "content": "<p>That's the only way to actually securely handle the case of a corporate environment with their own internal CA.</p>",
        "id": 606742,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541656
    },
    {
        "content": "<p>(Well, that or have our own special thing for admins to configure that works a lot like the system trust store. But that is more work and annoyance for everyone.)</p>",
        "id": 606743,
        "sender_full_name": "Greg Price",
        "timestamp": 1530541701
    },
    {
        "content": "<p>Hmm, I just looked at the commit message.</p>\n<blockquote>\n<p>This PR helps to validate custom/self-signed certificates for servers by saving the certificate file in certificates folder in user's appData folder.</p>\n</blockquote>\n<p>That sure sounds like it's storing the cert for the future, beyond this session. (If not, why is it stored in that folder?)</p>",
        "id": 606744,
        "sender_full_name": "Greg Price",
        "timestamp": 1530542234
    },
    {
        "content": "<p>^ If the user goes to the settings and adds the certificate to the desktop app, then we obviously store it and do not prompt the user error if the added server validates with their certificate. Much like the behavior you're referring to with certificates from the trust store.</p>",
        "id": 606749,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530544272
    },
    {
        "content": "<p>However we do not have the certificates we'd prompt the user the cert error just like chrome, in that prompt if the user accepts the risk then we proceed for just that one time. So if they readd the server they'd be prompted with the warning again.</p>",
        "id": 606750,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530544357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"4922\">@Abhigyan Khaund</span> can you post a screen capture of the flows we're talking about here?  I'm getting a bit confused as to what the behavior you're describing is, and that would simplify the discussion a lot.</p>",
        "id": 607299,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1530626698
    },
    {
        "content": "<p>I hope this helps.<br>\n<a href=\"/user_uploads/2/95/Vmxx2Zt0oLFvs-y9uuFEgHwR/Certificate_flow-1.png\" target=\"_blank\" title=\"Certificate_flow-1.png\">Certificate_flow.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/95/Vmxx2Zt0oLFvs-y9uuFEgHwR/Certificate_flow-1.png\" target=\"_blank\" title=\"Certificate_flow.png\"><img src=\"/user_uploads/2/95/Vmxx2Zt0oLFvs-y9uuFEgHwR/Certificate_flow-1.png\"></a></div>",
        "id": 607321,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530627819
    },
    {
        "content": "<p>The screenshots in the figure are not very clear, I'll post the screenshots separately if that'd help.</p>",
        "id": 607322,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530627971
    },
    {
        "content": "<p>I think it might be helpful for the certificate error to have a link to the page where one would add a cert permanently.</p>",
        "id": 607358,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1530629543
    },
    {
        "content": "<p>That'd lead us to having 3 buttons on the error. I am not sure if that'd look good, or maybe would confuse the user more or not.</p>",
        "id": 607379,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1530630950
    },
    {
        "content": "<blockquote>\n<p>if they readd the server</p>\n</blockquote>\n<p>This sounds like potentially a key difference from the browser behavior, though. What happens if the user clicks through this error, then simply closes the app (or reboots their computer), and opens it up again? Will they get the error, or will we cheerfully connect them to the server despite it not having a valid cert?</p>",
        "id": 608528,
        "sender_full_name": "Greg Price",
        "timestamp": 1530814475
    },
    {
        "content": "<p>Because that interaction is a lot more closely analogous to what people normally do on the Web -- they visit a site, then they do other things and at some point restart their browser and/or machine, then they come back to the site -- then re-adding a server does. That sounds like something you'd rarely do; normally in the Zulip desktop app you add a given server once and then you're done.</p>",
        "id": 608529,
        "sender_full_name": "Greg Price",
        "timestamp": 1530814555
    },
    {
        "content": "<p>Yeah, I think given the use case, probably the \"allow an invalid cert once\" use case doesn't make a huge amount of sense.</p>",
        "id": 608581,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1530816468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"4922\">@Abhigyan Khaund</span> <span class=\"user-mention\" data-user-id=\"53\">@Akash Nimare</span> FYI, here's the best report I found on just how long Chrome keeps one of those exceptions around:<br>\n<a href=\"https://superuser.com/questions/1242085/how-long-does-a-self-signed-certificates-proceed-anyway-exception-last-in-goo\" target=\"_blank\" title=\"https://superuser.com/questions/1242085/how-long-does-a-self-signed-certificates-proceed-anyway-exception-last-in-goo\">https://superuser.com/questions/1242085/how-long-does-a-self-signed-certificates-proceed-anyway-exception-last-in-goo</a><br>\nSame person observed every few days on one site/cert, and every month or so on another.</p>",
        "id": 611520,
        "sender_full_name": "Greg Price",
        "timestamp": 1531406711
    },
    {
        "content": "<p>And here's a bit of a writeup of the last major redesign Chrome did of this flow, a few years ago:<br>\n<a href=\"https://nakedsecurity.sophos.com/2015/02/03/google-redesigns-security-warnings-after-70-of-chrome-users-ignore-them/\" target=\"_blank\" title=\"https://nakedsecurity.sophos.com/2015/02/03/google-redesigns-security-warnings-after-70-of-chrome-users-ignore-them/\">https://nakedsecurity.sophos.com/2015/02/03/google-redesigns-security-warnings-after-70-of-chrome-users-ignore-them/</a></p>",
        "id": 611523,
        "sender_full_name": "Greg Price",
        "timestamp": 1531406756
    },
    {
        "content": "<p>That's good background on the considerations for this kind of interaction.</p>",
        "id": 611525,
        "sender_full_name": "Greg Price",
        "timestamp": 1531406775
    },
    {
        "content": "<p>Reading this, the idea of disabling the continue button for x seconds sounds good.</p>",
        "id": 611536,
        "sender_full_name": "Abhigyan Khaund",
        "timestamp": 1531407009
    }
]