[
    {
        "content": "<p>This is referenced to issue <a href=\"https://github.com/zulip/zulip/pull/7475\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7475\">#7475</a>.<br>\n<strong>Current situation</strong>: When user create a stream, we automatically subscribe the user for that stream. So we don't show user name in <code>People to add</code> list.<br>\n<strong>According to <a href=\"https://github.com/zulip/zulip/pull/7475\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7475\"><a href=\"https://github.com/zulip/zulip/pull/7475\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7475\">#7475</a></a></strong>: We should show user who is creating stream in <code>People to add</code> list</p>\n<p><strong>What I have implemented in PR <a href=\"https://github.com/zulip/zulip/pull/7524\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7524\"><a href=\"https://github.com/zulip/zulip/pull/7524\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7524\">#7524</a></a></strong></p>\n<ul>\n<li>Current user will be shown on top of People to add list</li>\n<li>By default current user's checkbox will be checked</li>\n<li>If user try to create a stream in which he/she is not subscribed, then the warning box will appear to warn user, saying You are not subscribed to stream with two options Go back and Yes, create stream</li>\n</ul>\n<p>The problem is that, this can create a scenario where user try to create a private stream, in which he/she is not subscribed.<br>\nIf we want to prevent user to creating stream in which he/she is not subscribed, then we can </p>\n<ul>\n<li>Show current user on top of <code>People to add</code> list with default value checked</li>\n<li>Prevent user to change value of that particular checkbox.(disable the uncheck operation for that option)</li>\n</ul>\n<p>In this way, user will know that he/she is subscribed and can not create stream without subscription. <br>\nWhich one we should implement here?<br>\n<span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span></p>",
        "id": 353950,
        "sender_full_name": "Yashashvi Dave",
        "timestamp": 1512144918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span> <span class=\"user-mention\" data-user-email=\"yashashvidave@gmail.com\" data-user-id=\"3244\">@Yashashvi Dave</span> Before we go too far down the road on fixing the create-stream experience, I think we have deeper plans to make create-stream work more like edit-stream.  If we're going to make the experiences more similar, I'd like to start removing code, not adding code.  (The only main difference between create-stream and edit-stream should be copy-subscribers-from-stream, and even maybe that should apply to edit as well.)</p>",
        "id": 354013,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512145591
    },
    {
        "content": "<p>Are you talking about something like, org-admin creates a stream and then stream-admin can edit stream(like adding more users)?</p>",
        "id": 354140,
        "sender_full_name": "Yashashvi Dave",
        "timestamp": 1512147132
    },
    {
        "content": "<p>I'm talking about the current workflow with a bit of an admin bias.</p>",
        "id": 354156,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512147281
    },
    {
        "content": "<p>All users can create streams, at least private streams, and they go through the \"add\" workflow.</p>\n<p>All users can edit streams, at least private streams, and they go through the \"edit\" flow to add subscribers (or remove them if they have admin privileges).</p>\n<p>I <strong>think</strong> I'm right about the above, but the more central point is that the UI for these are completely different for legacy reasons.</p>",
        "id": 354158,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512147386
    },
    {
        "content": "<p>I personally find the create-stream experience to be most broken for adding subscribers.  For a realm with thousands of users, the checkbox approach just doesn't scale at all.</p>",
        "id": 354161,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512147457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"yashashvidave@gmail.com\" data-user-id=\"3244\">@Yashashvi Dave</span> A good thing to try out is populating your local server with 2000 users and play around as Iago a bit.</p>",
        "id": 354163,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512147495
    },
    {
        "content": "<p>The populate_db script has an option to do that.</p>",
        "id": 354166,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512147527
    },
    {
        "content": "<p>yeah, agreed that we should make the Add and Edit flow use similar code and UX, and that they are both broken in various ways.<br>\nIs it a problem to create a stream without being subscribed?</p>",
        "id": 354204,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512147952
    },
    {
        "content": "<p>No, but I think it will be confusing if it's a private stream. Cause if user will create a private stream then he/she can not edit stream options further.<br>\nIf it doesn't breaks our idea of stream creation then we are okay to go.</p>",
        "id": 354284,
        "sender_full_name": "Yashashvi Dave",
        "timestamp": 1512149037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span> So current flow, which I have implemented in PR is okay or is there something we should add?</p>",
        "id": 354299,
        "sender_full_name": "Yashashvi Dave",
        "timestamp": 1512149447
    },
    {
        "content": "<p>any member of the stream should be able to edit the stream options though, right?</p>",
        "id": 354300,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512149475
    },
    {
        "content": "<p>Yeah</p>",
        "id": 354314,
        "sender_full_name": "Yashashvi Dave",
        "timestamp": 1512149638
    },
    {
        "content": "<p>hm. I'm tempted to say it's fine to just let them create a stream without themselves on it, but I don't know the full implications. Thoughts, Steve?</p>",
        "id": 354357,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512150462
    },
    {
        "content": "<p>I'm a little wary of changing the status quo.  For private streams, I think it almost always make sense that you'd want to implicitly subscribe yourself, and there are lots of edge cases if you don't.</p>\n<p>For public streams, I think it's mostly the case that you want to subscribe yourself, even when you're in the admin role, and you can always unsubscribe quickly.</p>",
        "id": 354525,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512153098
    },
    {
        "content": "<p>We have a setting \"Prevent users from creating streams\", in which case the admin creating streams they don't want to be in seems like more of a possibility. <br>\nAlso, it seems like I can unsubscribe from private streams I create as Iago, which suggests that we're already having to deal with all the corner cases?</p>",
        "id": 354559,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512154005
    },
    {
        "content": "<p>I'm not too worried about the usability for admins, to be honest.  As an admin myself, I usually want to either be a permanent stream member or remain just long enough to make sure it gets started ok.</p>",
        "id": 354577,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512154865
    },
    {
        "content": "<p>For the unsubscribe-privates scenario, I believe we already have code or a pending PR for the last-to-leave case, but that code isn't directly reusable for the create-stream case.  Since users can create their own private streams, it's rare that admins need to be involved, and if we do get involved, we usually want to babysit the stream for a bit before we unsubscribe.</p>",
        "id": 354584,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512155058
    },
    {
        "content": "<p>I think users can't create private streams with \"Prevent users from creating streams\" is on? <br>\nI think one of the reasons for that settings is to prevent people from using your (public) server's bandwidth to host their private chats :).</p>",
        "id": 354589,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512155180
    },
    {
        "content": "<p>Also to be clear, my motivation for this is largely to avoid the complexity of special casing the stream creator in the stream creation flow, since they aren't special cased elsewhere. I agree the situation of an admin creating a private stream they are not on is rare enough that either way (allowing or disallowing in the creation flow) is fine.</p>",
        "id": 354601,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512155394
    },
    {
        "content": "<p>The intention behind \"Prevent users from creating streams\" is mostly to prevent naive newbies from creating spammy public streams by accident.</p>",
        "id": 354605,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512155579
    },
    {
        "content": "<p>It's true that a legit newbie who wants a private stream might have to enlist an admin, but I think it's a rare scenario, and the admin will almost always want to babysit the stream for a while.</p>",
        "id": 354607,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512155666
    },
    {
        "content": "<p>As for \"special casing\", I think it's appropriate to special-case the individual creating the stream.  We know they're somewhat likely to want to be subscribed.  The problem is not so much that we special case; it's more that our UI is unclear.  I'd want to special-case the UI with a checkbox like</p>\n<div class=\"codehilite\"><pre><span></span>[x] subscribe yourself\n</pre></div>",
        "id": 354613,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512155925
    },
    {
        "content": "<p>We actually have two separate settings, one for newbie protection, and one for bandwidth protection, though that isn't clear from the settings page (opened <a href=\"https://github.com/zulip/zulip/pull/7617\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7617\">#7617</a> to fix).</p>\n<p>In any case, I'm fine either way. If we stay with the status quo, I'm in favor of:<br>\n<code>Prevent user to change value of that particular checkbox.(disable the uncheck operation for that option)</code></p>\n<p>If we allow stream creator to not be subscribed, I like Steve's idea above, of havign a separate checkbox somewhere.</p>",
        "id": 354752,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512159355
    },
    {
        "content": "<p>I think a separate checkbox is likely to still be more confusing than just putting the user in the list of users to subscribe.</p>",
        "id": 354899,
        "sender_full_name": "Greg Price",
        "timestamp": 1512164275
    },
    {
        "content": "<p>It's also more UI surface. The way I'd want to do it is to just use the existing \"People to add\" widget, but don't specially filter the current user out of it -- instead, just make their box pre-checked.</p>",
        "id": 354906,
        "sender_full_name": "Greg Price",
        "timestamp": 1512164488
    },
    {
        "content": "<p>That way the whole list of users that will be subscribed is in one place, rather than having to read a separate checkbox and integrate that with what the list is saying.</p>",
        "id": 354909,
        "sender_full_name": "Greg Price",
        "timestamp": 1512164554
    },
    {
        "content": "<p>It's the zillions of checkboxes that are already there that actually create the UI surface. <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span> (for any reasonable sized realm)</p>",
        "id": 354912,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512164620
    },
    {
        "content": "<p>Sure, but one more that is in the same regular pattern is a lot easier to absorb than another outside the list, with some descriptive text like \"subscribe yourself\".</p>",
        "id": 354918,
        "sender_full_name": "Greg Price",
        "timestamp": 1512164762
    },
    {
        "content": "<p>IOW, I'd rather show than tell. <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span></p>",
        "id": 354921,
        "sender_full_name": "Greg Price",
        "timestamp": 1512164770
    },
    {
        "content": "<p>Just to be clear, I'm advocating for subscribe-yourself-automatically.</p>",
        "id": 355102,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512168510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"greg@zulipchat.com\" data-user-id=\"2187\">@Greg Price</span> Have you tried to create a stream on this realm lately with more than 3 or 4 people?  I think you'll understand why the checkbox-for-each-user approach is a way bigger problem here.  So I go back to the earlier advice on this thread that we might want to do something a lot more like our stream-edit approach.</p>",
        "id": 355108,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512168635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"showell@zulipchat.com\" data-user-id=\"58\">@Steve Howell</span> Oh, definitely agreed that we can improve this UI more generally!</p>\n<p>I just don't want that bigger project to stop us from doing the simplest fix here. I think the design <span class=\"user-mention\" data-user-email=\"yashashvidave@gmail.com\" data-user-id=\"3244\">@Yashashvi Dave</span> decribes in the PR comment makes sense:</p>\n<blockquote>\n<ul>\n<li>Current user will be shown on top of <code>People to add</code> list </li>\n<li>By default current user's checkbox will be checked</li>\n</ul>\n</blockquote>",
        "id": 355250,
        "sender_full_name": "Greg Price",
        "timestamp": 1512176650
    },
    {
        "content": "<p>I'm inclined to just skip this part:</p>\n<blockquote>\n<ul>\n<li>If user try to create a stream in which he/she is not subscribed, then the warning box will appear to warn user, saying <code>You are not subscribed to stream</code> with two options <code>Go back</code> and <code>Yes, create stream</code></li>\n</ul>\n</blockquote>\n<p>because I think if the user explicitly unchecks that box, they probably don't need an extra box about that.</p>",
        "id": 355251,
        "sender_full_name": "Greg Price",
        "timestamp": 1512176709
    },
    {
        "content": "<p>The only reason I am disinclined to the iterative approach here is that I think we’re fixing something that arguably isn’t that broken when we know the much bigger problems exist.</p>",
        "id": 355260,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512177228
    },
    {
        "content": "<p>The main problem this is trying to solve is: you try to create a stream, and can't figure out why you can't add yourself / why you aren't showing up in the typeahead</p>",
        "id": 355264,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512177425
    },
    {
        "content": "<p>Yeah, that's exactly what was confusing for me when I created a stream here a few weeks ago.</p>",
        "id": 355265,
        "sender_full_name": "Greg Price",
        "timestamp": 1512177631
    },
    {
        "content": "<p>See <a href=\"https://github.com/zulip/zulip/pull/7475\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7475\">#7475</a></p>",
        "id": 355266,
        "sender_full_name": "Greg Price",
        "timestamp": 1512177644
    },
    {
        "content": "<p>I have almost never used the 'create stream' workflow so, from 'fresh eyes' perspective... the flow is a mess.</p>",
        "id": 356642,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512233537
    },
    {
        "content": "<p>I would definitely split the 'stream list' with the 'create stream' window (as it is when you are in responsive mode, narrow screen)</p>",
        "id": 356643,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512233570
    },
    {
        "content": "<p>I would also split the 'admin' part of the settings (name and description of stream, is private, color) from the 'personal preferences' types of settings (is it muted, do I get notifications)</p>",
        "id": 356644,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512233620
    },
    {
        "content": "<p>yeah, there is a fair amount of work that could go into that flow :). I like the idea of hiding the 'stream list' when in 'create stream' mode; opened <a href=\"https://github.com/zulip/zulip/pull/7634\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7634\">#7634</a> to keep track of it. </p>\n<p>I don't understand the second comment. Do you just mean putting an &lt;hr&gt; between the two sections? Also the color is a personal preferences setting, not a global color; maybe that needs to be made clearer.</p>",
        "id": 356751,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512238249
    },
    {
        "content": "<p>No, I mean completely different 'screens' or 'panels'.<br>\nThe trend to separate tasks become even before smart phones, but strongly accelerated there...</p>",
        "id": 357541,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512256282
    },
    {
        "content": "<p>When you look at a list of streams, it is one 'mode' but when you start creating a stream, you should no longer be looking at the list itself.</p>",
        "id": 357545,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512256336
    },
    {
        "content": "<p>The simpler the screen, the easier/lighter the process seems and the more people will do it. We can just offer them 1-2 things, maybe just 'name, description, color, public' with everything else hidden behind an 'advanced' button or even saved for future edits.</p>",
        "id": 357551,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512256421
    },
    {
        "content": "<p>From a techincal perspective the UI definitely feels slow, possibly because of the long user list...</p>",
        "id": 357553,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512256477
    },
    {
        "content": "<p>Creating a stream, and adding users to it are two separate steps, the 'adding user' step being one that people would want to do multiple times. It is very much a best-practice to split them.</p>",
        "id": 357554,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1512256538
    },
    {
        "content": "<p>oh, interesting idea. Agreed with splitting them into two parts; opened <a href=\"https://github.com/zulip/zulip/pull/7639\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7639\">#7639</a> to keep track of it. <br>\n(And yeah, I assume the perf issue is just due to the long user list.)</p>\n<p>Another big stream creation simplification I think would be to simplify the semantics of \"Copy from stream\". I think that can instead limit you to choose at most 1 stream at a time, and then give you the option \"Add users of stream X to current stream\" or \"Replace membership of current stream with membership of stream X\".</p>",
        "id": 358832,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512290776
    },
    {
        "content": "<p>I would like to work on issue <a href=\"https://github.com/zulip/zulip/pull/7639\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7639\">#7639</a>. Can anyone please help me out in looking for the related files</p>",
        "id": 366057,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512502636
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"shreyanshdwivedi1997@gmail.com\" data-user-id=\"3958\">@Shreyansh Dwivedi</span>. To find the template files, you could use <code>git grep</code>. Try <code>git grep 'People to add'</code></p>",
        "id": 366074,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512502770
    },
    {
        "content": "<p>We use handlebars for frontend templating so look out for that in the result of git grep</p>",
        "id": 366080,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512502848
    },
    {
        "content": "<p>The reason I used <code>People to add</code> instead of something like <code>Create stream</code> is because it is a bit more specific and likely to return less \"noise\"</p>",
        "id": 366086,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512502918
    },
    {
        "content": "<p>From there you could find the related logic (JS modules) by grepping the id/class in the templates</p>",
        "id": 366090,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512502970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"shreyanshdwivedi1997@gmail.com\" data-user-id=\"3958\">@Shreyansh Dwivedi</span> ^^</p>",
        "id": 366093,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512503013
    },
    {
        "content": "<p>Thanks a lot <span class=\"user-mention\" data-user-email=\"hkmp7tommy@gmail.com\" data-user-id=\"714\">@Tommy Ip</span></p>",
        "id": 366707,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512542625
    },
    {
        "content": "<p><a href=\"/user_uploads/2/4d/-a1v7mwYTEWpV-CLPjEfVSl4/Test.mp4\" target=\"_blank\" title=\"Test.mp4\">Test.mp4</a></p>",
        "id": 373607,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512755332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"hkmp7tommy@gmail.com\" data-user-id=\"714\">@Tommy Ip</span> <span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span> I have added a screencast. Please take a look if this was wanted for solving this issue?</p>",
        "id": 373616,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512755396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"shreyanshdwivedi1997@gmail.com\" data-user-id=\"3958\">@Shreyansh Dwivedi</span> Super cool!  I think when the settings are actually final (the last panel), we want a super clear message that they're done.</p>",
        "id": 373643,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512755566
    },
    {
        "content": "<p>And for the first couple panels, some kind of visual indicator that they're not done yet.  (\"Next\" is obviously clear enough to some people, but I think an additional cue would help.)</p>",
        "id": 373658,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512755637
    },
    {
        "content": "<p>Ok cool.. So we need a clear success message after the last panel that the stream is created. Right? <span class=\"user-mention\" data-user-email=\"showell@zulipchat.com\" data-user-id=\"58\">@Steve Howell</span></p>",
        "id": 373677,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512755732
    },
    {
        "content": "<blockquote>\n<p>And for the first couple panels, some kind of visual indicator that they're not done yet.  (\"Next\" is obviously clear enough to some people, but I think an additional cue would help.)</p>\n</blockquote>\n<p>UX wise we should probably be using the bootstrap primary button for \"next\" instead of the outline style</p>",
        "id": 373681,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512755739
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>And for the first couple panels, some kind of visual indicator that they're not done yet.  (\"Next\" is obviously clear enough to some people, but I think an additional cue would help.)</p>\n</blockquote>\n<p>UX wise we should probably be using the bootstrap primary button for \"next\" instead of the outline style</p>\n</blockquote>\n<p>Okk. I will change the class of <code>Next</code> button accordingly</p>",
        "id": 373701,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512755832
    },
    {
        "content": "<p>For some of the finer points here, <span class=\"user-mention\" data-user-email=\"brock@zulipchat.com\" data-user-id=\"136\">@Brock Whittaker</span> will want to weigh in, either suggesting changes, or just letting us merge this and he can do some follow-up work.  (I think multi-panel is a huge improvement over the existing UI, so I'd be willing to merge it even less-than-perfect.)</p>",
        "id": 373734,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512756120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"hkmp7tommy@gmail.com\" data-user-id=\"714\">@Tommy Ip</span> what are you referring to with the bootstrap primary button style? The <code>.btn.btn-primary</code> class group? We don't use that anymore in the codebase, and I'd recommend against using it in the future.</p>",
        "id": 373934,
        "sender_full_name": "Brock Whittaker",
        "timestamp": 1512757953
    },
    {
        "content": "<p>Is there a PR for this btw?</p>",
        "id": 373937,
        "sender_full_name": "Brock Whittaker",
        "timestamp": 1512758002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"brock@zulipchat.com\" data-user-id=\"136\">@Brock Whittaker</span> Currently I am running tests on my local computer</p>",
        "id": 373986,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512758916
    },
    {
        "content": "<p>While running tests I encountered error<br>\n<a href=\"/user_uploads/2/14/o7SRhy0U_YjOsqfpI1LXpTgo/Screenshot-from-2017-12-09-00-18-04.png\" target=\"_blank\" title=\"Screenshot-from-2017-12-09-00-18-04.png\">Screenshot-from-2017-12-09-00-18-04.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/14/o7SRhy0U_YjOsqfpI1LXpTgo/Screenshot-from-2017-12-09-00-18-04.png\" target=\"_blank\" title=\"Screenshot-from-2017-12-09-00-18-04.png\"><img src=\"/user_uploads/2/14/o7SRhy0U_YjOsqfpI1LXpTgo/Screenshot-from-2017-12-09-00-18-04.png\"></a></div>",
        "id": 373991,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512758945
    },
    {
        "content": "<p>as #copy-from-stream-expand-collapse has been moved to second panel, I think this test is failing</p>",
        "id": 373996,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512758983
    },
    {
        "content": "<p>Please suggest a possible fix</p>",
        "id": 374002,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512759012
    },
    {
        "content": "<p>Fixing Casper tests might be tricky for this change.  Here are some docs:</p>\n<p><a href=\"http://zulip.readthedocs.io/en/latest/testing/testing-with-casper.html?highlight=casper\" target=\"_blank\" title=\"http://zulip.readthedocs.io/en/latest/testing/testing-with-casper.html?highlight=casper\">http://zulip.readthedocs.io/en/latest/testing/testing-with-casper.html?highlight=casper</a></p>",
        "id": 374040,
        "sender_full_name": "Steve Howell",
        "timestamp": 1512759319
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"shreyanshdwivedi1997@gmail.com\" data-user-id=\"3958\">@Shreyansh Dwivedi</span> thanks for your work on this. We should make sure we're all agreed on the design before going too far in this direction, though (in general, issues with <code>help wanted</code> are the ones where it is safe to just jump right in).</p>",
        "id": 374069,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512759959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span> If u want any change in design, please mention it.</p>",
        "id": 374081,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512760137
    },
    {
        "content": "<p>I'm not actually convinced splitting out the \"add users\" is a good idea, now that I think about it more and see how other products do it. I think a better strategy might be to just simplify all the fields enough that it fits nicely in one screen</p>",
        "id": 374107,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512760469
    },
    {
        "content": "<p>E.g. we don't need all the words for both Public and Private (we could show just the one you've selected), our box for stream description could be one line instead of two since we actually only want small descriptions, and instead of People to Add it could be just a single input box that took either stream names or people names (or a mix), and added the union of them.</p>",
        "id": 374125,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512760597
    },
    {
        "content": "<p>Okk.. I understood.<br>\nShould I start working on this then? <span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span></p>",
        "id": 374136,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512760770
    },
    {
        "content": "<p>I would pick an issue alreday labeled <code>help wanted</code>, since those have mostly been hashed out, and are unlikely to go through big design changes.</p>",
        "id": 374139,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512760807
    },
    {
        "content": "<p>should I drop this issue then?</p>",
        "id": 374145,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512760890
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"rishig@zulipchat.com\" data-user-id=\"131\">@Rishi Gupta</span> ^^</p>",
        "id": 374153,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512761087
    },
    {
        "content": "<p>yeah, let's drop for now. Thanks!</p>",
        "id": 374155,
        "sender_full_name": "Rishi Gupta",
        "timestamp": 1512761137
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-email=\"hkmp7tommy@gmail.com\" data-user-id=\"714\">@Tommy Ip</span> what are you referring to with the bootstrap primary button style? The <code>.btn.btn-primary</code> class group? We don't use that anymore in the codebase, and I'd recommend against using it in the future.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-email=\"brock@zulipchat.com\" data-user-id=\"136\">@Brock Whittaker</span>  I just mean a solid background instead of the outline style. Eg the send button in compose</p>",
        "id": 374171,
        "sender_full_name": "Tommy Ip",
        "timestamp": 1512761412
    },
    {
        "content": "<blockquote>\n<p>yeah, let's drop for now. Thanks!</p>\n</blockquote>\n<p>Okk..</p>",
        "id": 374189,
        "sender_full_name": "Shreyansh Dwivedi",
        "timestamp": 1512761658
    }
]