[
    {
        "content": "<p>In the code  I see   <em>res.main_div_min_height = viewport_height - top_navbar_height;</em>   ,  but the height or min-height of  #main_div is never actually set .   or am I missing something ?</p>",
        "id": 657721,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541153599
    },
    {
        "content": "<p>I think that's why we have to calculate it from <code>viewport_height</code> and <code>top_navbar_height</code>. <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 657729,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541158484
    },
    {
        "content": "<p>I mean, it is calculated, but it isn't used anywhere  (afaik)</p>",
        "id": 657732,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541159609
    },
    {
        "content": "<p>Huh, I think you're right.  Apparently it's been dead code since 2013, when  it was added in <a href=\"https://github.com/zulip/zulip/commit/5622e59b48841a7ca5326ecff8e42bdb61fd2ca8\" target=\"_blank\" title=\"https://github.com/zulip/zulip/commit/5622e59b48841a7ca5326ecff8e42bdb61fd2ca8\">5622e59b48841a7ca5326ecff8e42bdb61fd2ca8</a>.</p>",
        "id": 657736,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541161798
    },
    {
        "content": "<p>I'm guessing it snuck in because it was useful for debugging at some point (and probably still is, but I'd rather just eliminate it to avoid confusion).</p>",
        "id": 657737,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541161881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9830\">@Alex</span> you're working on sticky headers with this effort, right?  I think <span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> has a branch, <a href=\"https://github.com/zulip/zulip/pull/9910\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/9910\">https://github.com/zulip/zulip/pull/9910</a>, that attempts to implement that; you might want to collaborate with him on that.</p>",
        "id": 657839,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541185301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  It is a bit different. I've made a version where the Compose box  uses position:sticky . This solves a few issues with resizing,  since it can take the width of its parent (the middle column).  It also eliminates the need for #bottom_whitespace .    position:sticky could also be applied to the nav-bar (header) ,  but that doesn't seem to make much difference.</p>",
        "id": 657874,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541186988
    },
    {
        "content": "<p>OK, makes sense.</p>",
        "id": 657881,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541187688
    },
    {
        "content": "<p>I think we still end up needing <code>#bottom_whitespace</code>; a big part of the purpose of it is to make it possible to have blank space (which is convenient for not having scrolling interrupt your reading on a busy thread)</p>",
        "id": 657882,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541188064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I'm not sure I understand; what do you mean by 'scrolling interrupt' ?   is there a way I could simulate that ?</p>",
        "id": 658033,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541248732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9830\">@Alex</span> Let's say your composing a message, and you're looking at a message on the screen that you're basically replying to.  Maybe somebody asked you a three-part question or something.</p>\n<p>If the feed is busy, new messages could scroll in while you're typing and push the message that you're reading offscreen, which is annoying.  We prevent that with code in <code>resize.js</code>.</p>\n<p>You can simulate this in dev by having two users running (usually I do Cordelia in the main window and Hamlet in the incognito window).</p>",
        "id": 658037,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541251549
    },
    {
        "content": "<p>I <strong>think</strong> the code is in <code>resize.js</code>.  There may also be scroll handlers elsewhere in the JS codebase that are part of making this experience nice.</p>",
        "id": 658038,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541251596
    },
    {
        "content": "<p>I would start by doing a lot of testing on <code>master</code> to feel for all the use cases.  You want to try a bunch of things:</p>\n<ul>\n<li>have Hamlet bombard Cordelia with messages while she's trying to compose</li>\n<li>do lots of mouse scrolling on Verona</li>\n<li>do lots of Home, PgUp, PgDn on Verona</li>\n<li>compose multi-line messages that cause the compose box to autosize</li>\n</ul>",
        "id": 658039,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541251740
    },
    {
        "content": "<p>ok thanks. I'll give it a try.</p>",
        "id": 658040,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541251829
    },
    {
        "content": "<p>got it all working now, except for one weird  thing, and I can't figure out what the issue is:  when the Compose has <code>position:sticky</code> and I click on some message, the page scrolls down to the end. ( But only when the message is not greyed-out). This only happens when using Brave browser (0.18.36).  Is there some JS event when clicking a message perhaps ?</p>",
        "id": 658128,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541337393
    },
    {
        "content": "<p>Clicking a message should open the compose box, and then there's code that tries to nudge the feed up in  certain situations.  I don't really have a good theory on what you're seeing, though.</p>",
        "id": 658141,
        "sender_full_name": "Steve Howell",
        "timestamp": 1541344597
    },
    {
        "content": "<p>Yeah, seems likely to be some sort of interaction with the animation to scroll up the feed to show the message you clicked fully.</p>",
        "id": 658180,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541385794
    },
    {
        "content": "<p>Probably via a call to <code>message_viewport.scrollTop</code></p>",
        "id": 658181,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541385820
    },
    {
        "content": "<p>I've spend a lot of time to find it,but cant figure it out.  (it doe not seem to relate to <code>scrollTop</code>).  But I noticed it is easy to replicate:  using browser Dev tools,  from <code>#compose</code> disable <code>position:fixed</code> , then scroll up and click some message. it will immediately go to the bottom of the page (no animation).  (using FF) .   I would appreciate if someone could point me to where this comes from.</p>",
        "id": 658446,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541508955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9830\">@Alex</span> look at <code>select_message_function</code> in <code>click_handlers.js</code>.</p>",
        "id": 658608,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1541536423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  thanks!    That triggers <code>set focus</code> in <code>compose_actions.js</code> which seems to be the issue.</p>",
        "id": 658618,
        "sender_full_name": "Alex-CL",
        "timestamp": 1541537064
    }
]