[
    {
        "content": "<p>Hello,<br>\nI have seen that in deployments I have json and po files for locales. I want to update the locales to change some string. I guess changing the json the restarting Zulip would work. But how to do with the po? Need to be complied to mo? How?<br>\nIs everything in<code>/home/zulip/deployments/${install_date}/locale/${locale}/</code>. Right?</p>",
        "id": 1369767,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650352342
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"2\" href=\"/#narrow/stream/2-general/topic/update.20an.20recompile.20locales\">#general &gt; update an recompile locales</a> by <span class=\"user-mention silent\" data-user-id=\"19257\">Alya Abbott</span>.</p>",
        "id": 1369922,
        "sender_full_name": "Notification Bot",
        "timestamp": 1650388664
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> you need to run <code>manage.py compilemessages</code> after changing the strings to compile it.</p>",
        "id": 1370110,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650402551
    },
    {
        "content": "<p>You can read more about this <code>.po</code> =&gt; <code>.mo</code> process in the Django documentation.</p>",
        "id": 1370111,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650402567
    },
    {
        "content": "<p>Amazing, looks easy, thank you <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span></p>",
        "id": 1370112,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650402611
    },
    {
        "content": "<p>OK updated json and mo files wiht <code>sed</code>then delted <code>.po</code> files, now when I execute <code>./manage.py compilemessages</code> I get this error</p>\n<div class=\"codehilite\"><pre><span></span><code>zulip@echat:~/deployments/2022-04-18-13-42-51$ ./manage.py compilemessages -s\nfatal: not a git repository (or any of the parent directories): .git\nTraceback (most recent call last):\n  File &quot;./manage.py&quot;, line 157, in &lt;module&gt;\n    execute_from_command_line(sys.argv)\n  File &quot;./manage.py&quot;, line 122, in execute_from_command_line\n    utility.execute()\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/__init__.py&quot;, line 413, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/base.py&quot;, line 354, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/base.py&quot;, line 398, in execute\n    output = self.handle(*args, **options)\n  File &quot;/home/zulip/deployments/2022-04-18-13-42-51/zerver/management/commands/compilemessages.py&quot;, line 30, in handle\n    self.extract_language_options()\n  File &quot;/home/zulip/deployments/2022-04-18-13-42-51/zerver/management/commands/compilemessages.py&quot;, line 118, in extract_language_options\n    percentage = self.get_translation_percentage(locale_path, locale)\n  File &quot;/home/zulip/deployments/2022-04-18-13-42-51/zerver/management/commands/compilemessages.py&quot;, line 143, in get_translation_percentage\n    po = polib.pofile(self.get_po_filename(locale_path, locale))\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/polib.py&quot;, line 130, in pofile\n    return _pofile_or_mofile(pofile, &#39;pofile&#39;, **kwargs)\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/polib.py&quot;, line 78, in _pofile_or_mofile\n    instance = parser.parse()\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/polib.py&quot;, line 1428, in parse\n    raise IOError(&#39;Syntax error in po file %s(line %s)&#39; %\nOSError: Syntax error in po file (line 1)\n</code></pre></div>",
        "id": 1370172,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650407194
    },
    {
        "content": "<p>Looks like I messed it up, mo is complied and po is not hhhh</p>",
        "id": 1370174,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650407485
    },
    {
        "content": "<p>OK Got everything complied, but the updated locales strings are not showing in the html tempaltes of zserver, <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> any clue?</p>",
        "id": 1370183,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650408367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> I think actually you need to follow <a href=\"https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#making-changes\">these instructions</a>.</p>",
        "id": 1370288,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650413785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> Read it. Here is what I have done. I've updated locales in po file, compiled them, the restarted Zulip<br>\nAs example if I change the string \"Log in to Zulip\" in the files it does not work, then when I do a change in /home/zulip/deployments/2022-04-18-13-42-51/templates/zerver/login.html anything then just reload the page it works !! Locales sttrings not being fetched properly?</p>",
        "id": 1370538,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650453741
    },
    {
        "content": "<p>I have this compiled in .mo</p>\n<div class=\"codehilite\" data-code-language=\"Gettext Catalog\"><pre><span></span><code><span class=\"kd\">#: templates/zerver/login.html:13</span>\n<span class=\"nv\">msgid</span> <span class=\"s\">\"Log in to Zulip\"</span>\n<span class=\"nv\">msgstr</span> <span class=\"s\">\"Log in to virtual chat server\"</span>\n</code></pre></div>",
        "id": 1370539,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650454204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I not a Django expert but I can confirm that locales string are not loaded in the production tempaltes, only the msgid is being used as fallback</p>",
        "id": 1370544,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650455750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> can you explain more precisely what you're trying to do?  It sounds like you might be trying to change the English versions of strings using the translation system?</p>",
        "id": 1370618,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650469890
    },
    {
        "content": "<p>In general if you follow the instructions I linked last, you'll generate a Git branch for your changes, and then <code>upgrade-zulip-from-git</code> can be used to install the changes correctly.</p>",
        "id": 1370619,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650469924
    },
    {
        "content": "<p>I don't think the i18n system is used at all for the English (United States) locale -- I would expect it to just use the string in the template, which is written in American English in the first place.</p>",
        "id": 1370622,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650469998
    },
    {
        "content": "<p>Generally we don't recommend doing any hand-editing in a production environment at all; make your changes and verify them in a development environment and then use the upgrade tool as documented, and you'll not run into this sort of trouble.</p>",
        "id": 1370623,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650470032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I made updates on a fork, then built using <code>upgrade-zulip-from-git</code>. I don't see my locales changes.</p>",
        "id": 1372584,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650815925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> can you answer my question above about whether you're trying to change English strings?</p>",
        "id": 1372592,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650821135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> Yes English and non-English string values</p>",
        "id": 1372606,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650825917
    },
    {
        "content": "<p>Let me describe what I have done</p>",
        "id": 1373152,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650917820
    },
    {
        "content": "<p>1 - I forked the repo, created a new branch <code>eChat</code> from tag <code>v5.1</code><br>\n2 - In po and json locales I replaced values (not keys) from \"Zulip\" to \"eChat\"<br>\n3 - I replaced few images as logos<br>\n4 - In my production server in configured <code> /etc/zulip/zulip.conf</code> to fetch from my git fork,<br>\n5 - I upgraded Zulip using <code>sudo /home/zulip/deployments/current/scripts/upgrade-zulip-from-git echat</code></p>",
        "id": 1373158,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918051
    },
    {
        "content": "<p>Now in Zulip I still see Zulip string and images</p>",
        "id": 1373160,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> yeah, I think the problem is that locale files aren't used for English (it instead just uses the strings in the HTML template itself, I think), and most references to Zulip are not tagged for translation.</p>",
        "id": 1373163,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650918211
    },
    {
        "content": "<p>I'm not entirely sure about that -- we have no reason to test adding translation files for the default locale.</p>",
        "id": 1373165,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650918274
    },
    {
        "content": "<p>Is there a reason you're not just changing the default strings directly in HTML templates (etc.) on your fork?</p>",
        "id": 1373167,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650918325
    },
    {
        "content": "<p>As example  in<code>templates/zerver/register.html</code></p>",
        "id": 1373169,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918518
    },
    {
        "content": "<p>I can find this string</p>",
        "id": 1373170,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918528
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"HTML\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">label</span> <span class=\"na\">for</span><span class=\"o\">=</span><span class=\"s\">\"source_realm_id\"</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"inline-block\"</span><span class=\"p\">&gt;</span>{{ _('Import settings from existing Zulip account') }}<span class=\"p\">&lt;/</span><span class=\"nt\">label</span><span class=\"p\">&gt;</span>\n</code></pre></div>",
        "id": 1373171,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918531
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> Do you mean that in locales are loaded for all languages except English? So for English the key is used as fallback string?</p>",
        "id": 1373172,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918606
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> the <code>en</code> locale key is just used to define what strings exist for uploading to Transifex.</p>",
        "id": 1373178,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650918818
    },
    {
        "content": "<p>mmm I switch the language to French and I can see the updated references !</p>",
        "id": 1373179,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918867
    },
    {
        "content": "<p>Any way to force loading <code>en</code> custom locales?</p>",
        "id": 1373180,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650918887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"24035\">Ghazi Triki</span> <a href=\"#narrow/stream/31-production-help/topic/update.20an.20recompile.20locales/near/1373180\">said</a>:</p>\n<blockquote>\n<p>Any way to force loading <code>en</code> custom locales?</p>\n</blockquote>\n<p>You can try spelunking the i18n code in <code>zerver/lib/i18n.py</code> and <code>static/js/i18n.ts</code>.</p>",
        "id": 1373199,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650920007
    },
    {
        "content": "<p>I don't recall how this is implement, but it's decently likely there's an <code>en</code> conditional in there.</p>",
        "id": 1373200,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650920029
    },
    {
        "content": "<p>Having that <code>en</code> exception is probably not-quite-right.  There are times when a concept has one word in English, but may have mulitple different words in other languages -- for example, \"Home\" might be used in two places in the UI, one for a home address, and the other to go to the main page of the app.  Having an <code>en</code> PO file means we can make the base strings be \"Home address\" and \"Go to Homepage\" and <em>translate</em> those en english to both be \"Home,\" while leaving translators with the ability to translate those as <em>different</em> words in other languages.</p>\n<p>It also allows easier changes like this one, where an english concept is localized into a different term.</p>",
        "id": 1373217,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650920429
    },
    {
        "content": "<p>Well I think the \"Home address\" type case is handled by i18n systems with a separate context that goes alongside the string (Though we don't use that feature).</p>",
        "id": 1373218,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650920482
    },
    {
        "content": "<p>That’s what <a href=\"https://docs.transifex.com/localization-tips-workflows/the-complete-guide-to-adding-context-to-strings\">context</a> is for.</p>",
        "id": 1373219,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650920483
    },
    {
        "content": "<p>So I think we're just getting a small performance optimization for English uses by skipping translating X =&gt; X.</p>",
        "id": 1373221,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650920525
    },
    {
        "content": "<p>I don't think context solves the problem of there being one \"Home\" string which has two different semantic uses?</p>",
        "id": 1373222,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650920608
    },
    {
        "content": "<p>You distinguish the strings by adding the context in the source code, e.g. with <a href=\"https://docs.djangoproject.com/en/4.0/topics/i18n/translation/#contextual-markers-1\">Django’s <code>pgettext</code></a>.</p>",
        "id": 1373223,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650920695
    },
    {
        "content": "<p>(Our custom <code>compilemessages</code> code likely doesn’t handle this, but we should fix it.)</p>",
        "id": 1373224,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650920740
    },
    {
        "content": "<p>Ah, neat!  The Django docs are more useful than the Transifex ones on this front.  That's a feature I didn't know about before.</p>",
        "id": 1373225,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650920806
    },
    {
        "content": "<p>But the point about using it for locale-specific terminology still stands, I think?</p>",
        "id": 1373226,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650920837
    },
    {
        "content": "<p>Not sure which point you mean? But the idea is that if two strings are the same but with different contexts, that makes them not the same; they can be translated independently.</p>",
        "id": 1373227,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650920975
    },
    {
        "content": "<p>Yeah, I get the contexts allow different translations.</p>\n<p>I mean that <code>en</code> PO files allow one to localize \"Zulip\" as \"Cool Chat\" in english</p>",
        "id": 1373228,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650921018
    },
    {
        "content": "<p>Yeah it might be nice to have an option to skip that optimization, but I think it’s up to Django.</p>",
        "id": 1373234,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650921197
    },
    {
        "content": "<p>I guess here !!</p>",
        "id": 1373245,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922169
    },
    {
        "content": "<p><a href=\"https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L40-L41\">https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L40-L41</a></p>",
        "id": 1373246,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922170
    },
    {
        "content": "<p>If I remove that condition it should work</p>",
        "id": 1373247,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922182
    },
    {
        "content": "<p>Wait actually, this optimization isn’t a thing. I just edited that string in <code>locale/en/LC_MESSAGES/django.po</code>, ran <code>manage.py compilemessages</code>, and it worked; the dev server shows my edited string.</p>",
        "id": 1373248,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650922183
    },
    {
        "content": "<p>Ah yeah; that conditional is for frontend translations. (“Import settings from existing Zulip account” is a backend translation.)</p>",
        "id": 1373249,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650922287
    },
    {
        "content": "<p>So we should re-jigger to we just skip the warning at <a href=\"https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L48\">https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L48</a> for <code>en</code>, and otherwise not short-circuit it?</p>",
        "id": 1373250,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650922365
    },
    {
        "content": "<p>(also, why is that a <code>print</code>?)</p>",
        "id": 1373251,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650922377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> it works on dev but not working in production (does not make sense to me)</p>",
        "id": 1373253,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922404
    },
    {
        "content": "<p>Note that <code>locale/en/LC_MESSAGES/django.po</code> is not in the Git repository. It’s generated by <code>manage.py makemessages --locale=en</code>. You’ll need to <code>git add -f locale/en/LC_MESSAGES/django.po</code> and commit it if you want a production server installed from Git to see it.</p>",
        "id": 1373255,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650922519
    },
    {
        "content": "<p>ahhh I see !! <code>en</code> not <code>en-US</code> !</p>",
        "id": 1373256,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922556
    },
    {
        "content": "<p>So I should just copy en-US to en and it should work, now I get it <span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span></p>",
        "id": 1373257,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650922582
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"12178\">Alex Vandiver</span> <a href=\"#narrow/stream/31-production-help/topic/update.20an.20recompile.20locales/near/1373250\">said</a>:</p>\n<blockquote>\n<p>So we should re-jigger to we just skip the warning at <a href=\"https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L48\">https://github.com/zulip/zulip/blob/main/zerver/lib/i18n.py#L48</a> for <code>en</code>, and otherwise not short-circuit it?</p>\n</blockquote>\n<p>That would add a slightly unfortunate bloat to the non-cacheable <code>page_params</code> for our most common language. We may want to build a way to serve the translation data through cacheable static JSON files first.</p>",
        "id": 1373259,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650922862
    },
    {
        "content": "<p>I don't see a <code>locale/en/</code> at current; how would that result in a large <code>page_params</code>, unless the user has added one?</p>",
        "id": 1373261,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1650922929
    },
    {
        "content": "<p>Hmm. We invoke <code>manage.py makemessages --locale=en</code> which generates it from various odd commands in the dev environment (<code>test-all</code>, <code>check-capitalization</code>, <code>check-frontend-i18n</code>, <code>push-translations</code>), and might propagate it to release tarballs if it exists?</p>",
        "id": 1373262,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650923387
    },
    {
        "content": "<p>If we fix that, it’s probably fine.</p>",
        "id": 1373264,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650923441
    },
    {
        "content": "<p>Oh, <code>build-release-tarball</code> runs from a temporary copy of the tree from the Git index, so it’s probably fine already.</p>",
        "id": 1373265,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650923555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/31-production-help/topic/update.20an.20recompile.20locales/near/1373259\">said</a>:</p>\n<blockquote>\n<p>That would add a slightly unfortunate bloat to the non-cacheable <code>page_params</code> for our most common language. We may want to build a way to serve the translation data through cacheable static JSON files first.</p>\n</blockquote>\n<p>I guess that could work as long as we ensure that static JSON file is loaded before the JS -- I vaguely recall a benefit of moving it into <code>page_params</code> was avoiding having to deal with races where JS code was run before translation data was available, but could be misremembering.</p>",
        "id": 1373274,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650924300
    },
    {
        "content": "<p>If that is a problem, we’re going to need to tackle it eventually for <a href=\"https://github.com/zulip/zulip/pull/18785\">#18785</a>.</p>",
        "id": 1373279,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650924443
    },
    {
        "content": "<p>Webpack has experimental top-level <code>await</code> support; we could use that hammer in <code>i18n.ts</code> if nothing else.</p>",
        "id": 1373287,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650924645
    },
    {
        "content": "<p>Looks like I triggered a feature discussion, <span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> copying the en-us locale to en for production should be fine for me until this i18n issues is resolved?</p>",
        "id": 1373293,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650924734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699\">Anders Kaseorg</span> <a href=\"#narrow/stream/31-production-help/topic/update.20an.20recompile.20locales/near/1373287\">said</a>:</p>\n<blockquote>\n<p>Webpack has experimental top-level <code>await</code> support; we could use that hammer in <code>i18n.ts</code> if nothing else.</p>\n</blockquote>\n<p>Yeah; there's probably a few ways around it; we just want to make sure the transition doesn't add an extra RTT for no reasons, which may be mostly covered by caching.</p>",
        "id": 1373299,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1650924879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"24035\">@Ghazi Triki</span> I don’t know where you got an “en-us” locale—we only have <code>en</code> and <code>en_GB</code>—so I can’t say whether that is a reasonable thing to copy.</p>\n<p>(I would still recommend editing English strings in the source rather than attempting to do this through the translation system.)</p>",
        "id": 1373328,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650926467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> sorry I meant en-GB. I copied it to \"en\" then deployed and it did not work. What should I do?</p>",
        "id": 1373646,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1650968637
    },
    {
        "content": "<p>We left the realm of “should” at the beginning of this discussion. What you should do is edit the strings in the source rather than attempting to do this through the translation system. You are forging an uncharted path here—which you’re allowed to try to do, but you can’t expect guidance at each step.</p>",
        "id": 1373763,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1650997120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699\">@Anders Kaseorg</span> surely not asking for guidance, but pointed the team to a path where localisation is not really working because of an exceptional condition in the code. I have followed all what have been shared but it did not give the right effect. Many thank all for your guidance</p>",
        "id": 1373937,
        "sender_full_name": "Ghazi Triki",
        "timestamp": 1651009081
    },
    {
        "content": "<p>You're not trying to localize -- you're trying to white-label using the localization system. It's not designed for that, and I don't think it makes sense for us to all spend time debugging for you why that hack isn't working for you.</p>",
        "id": 1373950,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1651010573
    },
    {
        "content": "<p>We've told you a non-hacky way to do what you're trying to achieve; you're of course welcome to keep doing something hacky for your installation instead, but we need to focus on improving Zulip for all its users, so we can't spend more attention on debugging this hack for you.</p>",
        "id": 1373951,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1651010639
    }
]