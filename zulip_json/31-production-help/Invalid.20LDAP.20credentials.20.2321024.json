[
    {
        "content": "<p>Newly reported issue; posting here for visibility. <a href=\"https://github.com/zulip/zulip/pull/21024\">#21024</a></p>\n<p>See issue for additional details.</p>\n<blockquote>\n<p>So, I've got a FreeIPA 4.6.8 LDAP backend, and it's telling me I've got invalid credentials. But I've checked and double-checked my <code>auth_ldap_bind_password</code> in my <code>/etc/zulip/zulip-secrets.conf</code>, and it is 100% correct - I can use that exact password and username to log into servers that are enrolled into this exact same FreeIPA domain. I'm not sure what I'm doing wrong, but I expect it's in my <code>settings.py</code> LDAP settings somewhere.</p>\n<p>I've been trying to follow along with Apache Directory Studio and I can't see where I'm plugging anything in incorrectly. :( </p>\n</blockquote>",
        "id": 1321598,
        "sender_full_name": "Alya Abbott",
        "timestamp": 1643850895
    },
    {
        "content": "<p>Posted on the GitHub thread with a theory and a link back here.</p>",
        "id": 1321602,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1643851154
    },
    {
        "content": "<p>So, that's actually super helpful! Unfortunately, I tried the <code>ldaps://</code> protocol FIRST, and got a different error (<code>ldap.SERVER_DOWN</code>) suggesting that it couldn't even get a response from <code>ldaps://</code>. This actually makes sense - our internal LDAP CAN be served in plaintext over port 389, or it can be served via TLS over port 389, but I have had zero luck ever getting it to be served securely over port 636. I might need to look into that.</p>",
        "id": 1321874,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643906551
    },
    {
        "content": "<p>A lot of our internal infrastructure in here was running in plaintext when I got here. I have improved a lot of it, but there's still some that I haven't gotten to yet. :P</p>",
        "id": 1321875,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643906579
    },
    {
        "content": "<p>That said, this Zulip server is running on the same subnet as our FreeIPA servers, and I just did an <code>nmap ipa.example.com -Pn</code> command and got this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Nmap scan report for ipa.example.com (192.168.1.11)\nHost is up (0.50s latency).\nNot shown: 992 filtered ports\nPORT    STATE SERVICE\n22/tcp  open  ssh\n53/tcp  open  domain\n80/tcp  open  http\n88/tcp  open  kerberos-sec\n389/tcp open  ldap\n443/tcp open  https\n464/tcp open  kpasswd5\n636/tcp open  ldapssl\n</code></pre></div>",
        "id": 1321877,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643907021
    },
    {
        "content": "<p>Okay, I've even tried setting <code>AUTH_LDAP_SERVER_URI</code> to be  <code>\"ldaps://ldap.example.com:636\"</code> in addition to simply <code>\"ldaps://ldap.example.com\"</code>, no dice - I still get the <code>ldap.SERVER_DOWN</code> error. :(</p>",
        "id": 1321882,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643907906
    },
    {
        "content": "<p>Okay. I'm a little embarrassed to say this, because I could've SWORN I tested it, but I had the LDAP credentials wrong. ._.</p>",
        "id": 1321891,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643909207
    },
    {
        "content": "<p>However, I'm checking using <code>tcpdump</code> and WireShark, and I'm still at a loss as to why I cannot connect via <code>ldaps://</code></p>",
        "id": 1321892,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643909239
    },
    {
        "content": "<p>Connecting via <code>ldap://</code>, unfortunately, DOES transmit credentials in plaintext. I checked. ._.</p>",
        "id": 1321893,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643909265
    },
    {
        "content": "<p>I'm going to try via IP rather than hostname. :|</p>",
        "id": 1321894,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643909374
    },
    {
        "content": "<p>Okay, I can actually get to port 636 on <code>ipa.example.com</code>, and I can verify this via the command: <code>telnet ipa.example.com 636</code>, and I get a telnet prompt. The same does not work, for example, if I simply try <code>telnet ipa.example.com 900</code>, because port 900 is not open - so I'm not sure what's going on there.</p>",
        "id": 1321905,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910219
    },
    {
        "content": "<p>HMMM</p>",
        "id": 1321906,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910395
    },
    {
        "content": "<p>(thanks for being my rubber duckies guys)</p>",
        "id": 1321907,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910405
    },
    {
        "content": "<p>(i might yet figure this out)</p>",
        "id": 1321908,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910409
    },
    {
        "content": "<p>(the new morning coffee helps me in troubleshooting mode)</p>",
        "id": 1321909,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910417
    },
    {
        "content": "<p>I am DEFINITELY getting packets over to the LDAP server when I try with <code>ldaps://</code>, which suggests that it's probably not liking our cert!</p>",
        "id": 1321910,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643910444
    },
    {
        "content": "<p>For debugging the TLS connection, you can try:</p>\n<div class=\"codehilite\"><pre><span></span><code>openssl s_client -connect ipa.example.com:636 -showcerts\n</code></pre></div>",
        "id": 1321917,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911018
    },
    {
        "content": "<p>You can check if it verifies by adding <code>-servername ipa.example.com -verify 5</code> and looking for the \"Verify return code:\"</p>",
        "id": 1321920,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911270
    },
    {
        "content": "<p>Huh.  Looks like <code>-servername</code> is only used for SNI, and not for validating the the CN is valid for that name.  So you'll need to personally inspect the CN of the server cert and compare to the hostname.</p>",
        "id": 1321922,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911488
    },
    {
        "content": "<p>The return codes were 1... checking the CN now</p>",
        "id": 1321924,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911683
    },
    {
        "content": "<p>this was on port 636 as well :/</p>",
        "id": 1321925,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911697
    },
    {
        "content": "<p>oh yeah, CN is definitely my server name</p>",
        "id": 1321926,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911711
    },
    {
        "content": "<p>it says <code>verify return 1</code> right under that line</p>",
        "id": 1321927,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911727
    },
    {
        "content": "<p>That means something's amiss with the trust chain.</p>",
        "id": 1321928,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911746
    },
    {
        "content": "<p>That makes sense</p>",
        "id": 1321929,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911754
    },
    {
        "content": "<p>This is our own internal CA certificate!</p>",
        "id": 1321930,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911762
    },
    {
        "content": "<p>Generated by and for FreeIPA.</p>",
        "id": 1321931,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911772
    },
    {
        "content": "<p>:nod:</p>",
        "id": 1321932,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911776
    },
    {
        "content": "<p>We usually use a Let's Encrypt wildcart cert for stuff that our non-techie employees will be accessing (such as this), while using our own internal CA and subsequent certs for stuff that we want HTTPS for, but which we're accessing.</p>",
        "id": 1321933,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911821
    },
    {
        "content": "<p>Does Zulip use the system \"trust\", so if I were to add the cert to the trusted system certs, it would be happy?</p>",
        "id": 1321934,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643911847
    },
    {
        "content": "<p>It should!</p>",
        "id": 1321935,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643911855
    },
    {
        "content": "<p>That worked!</p>",
        "id": 1321937,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912103
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 1321938,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643912110
    },
    {
        "content": "<p>Now encrypted LDAP searches!</p>",
        "id": 1321939,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912116
    },
    {
        "content": "<p>You guys are bomb, thanks.</p>",
        "id": 1321940,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912121
    },
    {
        "content": "<p>Glad you got it working.</p>",
        "id": 1321941,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643912128
    },
    {
        "content": "<p>Now onto the most auspicious of challenges... getting Twitter integration working.</p>",
        "id": 1321942,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912136
    },
    {
        "content": "<p>Thank you! LDAP was the big one.</p>",
        "id": 1321943,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912150
    },
    {
        "content": "<p>As a heads-up about twitter -- if you want something that polls and pulls in tweets, you want <a href=\"https://zulip.com/integrations/doc/twitter\">https://zulip.com/integrations/doc/twitter</a></p>\n<p>If you just want links to twitter to preview, you want <a href=\"https://github.com/zulip/zulip/blob/ca0bf107123fa13a7a63bc8bda0371bc44e09a3d/zproject/prod_settings_template.py#L596-L609\">https://github.com/zulip/zulip/blob/ca0bf107123fa13a7a63bc8bda0371bc44e09a3d/zproject/prod_settings_template.py#L596-L609</a></p>",
        "id": 1321944,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643912319
    },
    {
        "content": "<p>The docs for the former link to the latter, but only as a smalla note at the end.  Which, apparently , is a doc bug we filed as <a href=\"https://github.com/zulip/zulip/pull/6052\">#6052</a> but haven't made progress on.</p>",
        "id": 1321945,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1643912375
    },
    {
        "content": "<p>That is super good to know! I will give them a look see in just a moment, I noticed that the Twitter doc I was using seemed to not exactly line up with the nomenclature of the API keys that Twitter actually gave me, so I was stuck wondering which one went where.</p>\n<p>I'm updating my Github issue post over there with my solution for FreeIPA and <code>ldaps://</code>, hopefully it will help someone.</p>",
        "id": 1321946,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643912453
    },
    {
        "content": "<p>Hmm. Just previews, I have my keys, but they do not appear to be working.</p>",
        "id": 1322006,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643915137
    },
    {
        "content": "<p>...could actually be firewall.</p>",
        "id": 1322007,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643915144
    },
    {
        "content": "<p>In which case, oh well.</p>",
        "id": 1322008,
        "sender_full_name": "Tom Spettigue",
        "timestamp": 1643915150
    }
]