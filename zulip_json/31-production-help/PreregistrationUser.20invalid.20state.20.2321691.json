[
    {
        "content": "<p>Following up here after filing <a href=\"https://github.com/zulip/zulip/issues/21691\">bug 21691</a> in Github.</p>",
        "id": 1361376,
        "sender_full_name": "James VL",
        "timestamp": 1649274185
    },
    {
        "content": "<p>In answer to the question there: no, no hand editing of the DB occurred. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<p>What may have led to it was that when the invite was created, the user's email did not fully exist in our system yet, and so would have received some kind of bounce message from the mail host. Once the e-mail account did exist, subsequent sends to the (valid) address failed to go out though.</p>",
        "id": 1361377,
        "sender_full_name": "James VL",
        "timestamp": 1649274292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"23906\">@James VL</span> I don't think a bounce could have caused this state, but can you try looking at <code>/var/log/zulip/errors.log</code> on the system?</p>",
        "id": 1361493,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1649282553
    },
    {
        "content": "<p>The next most likely explanation is that an error occurred that didn't get cleaned up properly.</p>",
        "id": 1361494,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1649282581
    },
    {
        "content": "<p>That makes more sense to me.</p>\n<p>The log I posted in the Github bug comes directly from <code>/var/log/zulip/errors.log</code>. I received the same thing via the email error reports.</p>",
        "id": 1361887,
        "sender_full_name": "James VL",
        "timestamp": 1649342940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"19765\">@James VL</span> are there older errors with a different traceback?  That could point to the event that caused your database to be in the state that we're seeing with this exception.</p>",
        "id": 1361906,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1649347172
    },
    {
        "content": "<p>I'll check</p>",
        "id": 1361946,
        "sender_full_name": "James VL",
        "timestamp": 1649349420
    },
    {
        "content": "<p>Not sure if this is helpful, but:</p>\n<div class=\"codehilite\"><pre><span></span><code>2022-04-04 14:24:45.766 WARN [] Method Not Allowed (GET): /accounts/register/\n2022-04-04 16:19:28.850 WARN [] Received 500 from push notification bouncer\n2022-04-04 18:50:12.133 WARN [] log_into_subdomain: Invalid token given: 3c56dc1351450afb38e6f607635[snip]\n2022-04-04 18:50:23.875 WARN [] log_into_subdomain: Invalid token given: e73be74e81cf66b4fd4b24896b9[snip]\n2022-04-04 18:53:39.582 ERR  [zerver.middleware.json_error_handler] Traceback (most recent call last):\n  File &quot;/srv/zulip-venv-cache/726c7d1d35d9cd61bb4b70e98167a1db7b0c524d/zulip-py3-venv/lib/python3.8/site-packages/django/db/backends/utils.py&quot;, line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File &quot;/home/zulip/deployments/2022-03-30-02-07-27/./zerver/lib/db.py&quot;, line 46, in execute\n    wrapper_execute(self, super().execute, query, vars)\n  File &quot;/home/zulip/deployments/2022-03-30-02-07-27/./zerver/lib/db.py&quot;, line 31, in wrapper_execute\n    action(sql, params)\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint &quot;zerver_reaction_user_profile_id_message__7d47bf38_uniq&quot;\nDETAIL:  Key (user_profile_id, message_id, emoji_name)=(105, 1876969, gong) already exists.\n</code></pre></div>",
        "id": 1361952,
        "sender_full_name": "James VL",
        "timestamp": 1649349661
    },
    {
        "content": "<p>Error logs are quiet for that for a few days (and that's the day I tried creating the user in question); next most recent ERR in the logs before that is</p>\n<div class=\"codehilite\"><pre><span></span><code>2022-03-30 02:06:16.135 ERR  [pika.adapters.base_connection:9800] Self-initiated stack bring-up failed: AMQPConnectionError: (AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(111, &#39;Connection refused&#39;); first exception - None,)\n</code></pre></div>",
        "id": 1361954,
        "sender_full_name": "James VL",
        "timestamp": 1649349826
    },
    {
        "content": "<p>If it helps w/ anything, I can connect to postgres locally via psql and run some SELECT queries.</p>",
        "id": 1361959,
        "sender_full_name": "James VL",
        "timestamp": 1649350015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"19765\">@James VL</span>: Oh!  I think I have a guess -- this is related to <a href=\"https://github.com/zulip/zulip/pull/21306\">#21306</a>.</p>\n<p>Specifically, we make the preregistration user, then in the backend make a confirmation object when we send the mail.  Particularly if you're saying that the user wasn't getting the invite, that may say something about the <code>invites</code> worker not running as expected.</p>\n<p>Can you show (as root):</p>\n<div class=\"codehilite\"><pre><span></span><code>rabbitmqctl list_queues\nsupervisorctl status\n</code></pre></div>\n<p>...and skim the <code>/var/log/zulip/events_invites.log</code> for anything notable?  If you're in a low-memory environment, that log file will be <code>/var/log/zulip/events.log</code> and the invites worker will be intermixed with other work -- search for <code>Sending invitation</code>.</p>",
        "id": 1362702,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649437978
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Timeout: 60.0 seconds ...\nListing queues for vhost / ...\nname    messages\nuser_activity   9\nnotify_tornado  0\nuser_presence   0\nembed_links 0\nmissedmessage_emails    0\nemail_mirror    0\nuser_activity_interval  0\ndeferred_work   0\nerror_reports   0\nslow_queries    16\nemail_senders   0\ninvites 0\nsignups 0\noutgoing_webhooks   0\nmissedmessage_mobile_notifications  0\ntornado_return  0\nfeedback_messages   0\ndigest_emails   0\nmissedmessage_email_senders 0\nembedded_bots   0\nmessage_sender  0\n</code></pre></div>",
        "id": 1363011,
        "sender_full_name": "James VL",
        "timestamp": 1649451384
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ sudo supervisorctl status\ngo-camo                                                         RUNNING   pid 8128, uptime 9 days, 18:43:32\nprocess-fts-updates                                             RUNNING   pid 582255, uptime 3 days, 1:05:46\nsmokescreen                                                     RUNNING   pid 8136, uptime 9 days, 18:43:32\nzulip-django                                                    RUNNING   pid 582213, uptime 3 days, 1:05:51\nzulip-tornado                                                   RUNNING   pid 582210, uptime 3 days, 1:05:53\nzulip-workers:zulip_events_deferred_work                        RUNNING   pid 582222, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_digest_emails                        RUNNING   pid 582223, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_email_mirror                         RUNNING   pid 582224, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_email_senders                        RUNNING   pid 582229, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_embed_links                          RUNNING   pid 582225, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_embedded_bots                        RUNNING   pid 582226, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_error_reports                        RUNNING   pid 582227, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_invites                              RUNNING   pid 582228, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_missedmessage_emails                 RUNNING   pid 582230, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_missedmessage_mobile_notifications   RUNNING   pid 582231, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_outgoing_webhooks                    RUNNING   pid 582232, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_user_activity                        RUNNING   pid 582233, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_user_activity_interval               RUNNING   pid 582234, uptime 3 days, 1:05:49\nzulip-workers:zulip_events_user_presence                        RUNNING   pid 582235, uptime 3 days, 1:05:49\nzulip_deliver_scheduled_emails                                  RUNNING   pid 582236, uptime 3 days, 1:05:48\nzulip_deliver_scheduled_messages                                RUNNING   pid 582239, uptime 3 days, 1:05:47\n</code></pre></div>",
        "id": 1363012,
        "sender_full_name": "James VL",
        "timestamp": 1649451409
    },
    {
        "content": "<p>OK, so the invite worker is <em>currently</em> running fine, and has no backlog.</p>",
        "id": 1363014,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451476
    },
    {
        "content": "<p>Anything useful in its logs?</p>",
        "id": 1363015,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451490
    },
    {
        "content": "<p>From the <code>event_invites.log</code>, not much - this line is repeated 8 times, probably when I clicked \"resend\" from the UI:</p>\n<div class=\"codehilite\"><pre><span></span><code>2022-04-04 14:27:28.126 INFO [zerver.worker.queue_processors] Sending invitation for realm  to some-user@example.com\n2022-04-04 14:27:28.145 INFO [zulip.send_email] Sending invitation email to [&#39;sumer-user@example.com&#39;] in\n</code></pre></div>\n<p>(user email and domain edited for this post)</p>",
        "id": 1363017,
        "sender_full_name": "James VL",
        "timestamp": 1649451573
    },
    {
        "content": "<p>OK, there goes that theory.  Hm.</p>",
        "id": 1363019,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451601
    },
    {
        "content": "<p>Let me cook up a couple SQL queries for you to run.</p>",
        "id": 1363020,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451619
    },
    {
        "content": "<p>But I'm not sure they're going to shed much light -- I think we're just going to finda row missing, which we expect from the error message, but not <em>why</em> it's missing.</p>",
        "id": 1363021,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451641
    },
    {
        "content": "<p>I just checked, and the invite I had originally sent expired... so now I don't even have an error to show you. Creating new invites now works, it seems...</p>",
        "id": 1363022,
        "sender_full_name": "James VL",
        "timestamp": 1649451729
    },
    {
        "content": "<p>Well, it's still in the database, even if it's expired.</p>",
        "id": 1363023,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451750
    },
    {
        "content": "<p>But yes, I did forget that this sort of error was effectively on a timer.  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n<p>We can adjust its expiration if we want the error back.</p>",
        "id": 1363024,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649451781
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"PostgreSQL SQL dialect\"><pre><span></span><code><span class=\"k\">SELECT</span><span class=\"w\"> </span><span class=\"n\">invited_at</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">date_sent</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">confirmation_confirmation</span><span class=\"mf\">.</span><span class=\"n\">id</span><span class=\"w\">  </span><span class=\"k\">AS</span><span class=\"w\"> </span><span class=\"n\">confirmation_id</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">zerver_preregistrationuser</span><span class=\"mf\">.</span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"k\">AS</span><span class=\"w\"> </span><span class=\"n\">prereg_user</span><span class=\"w\"></span>\n<span class=\"k\">FROM</span><span class=\"w\">   </span><span class=\"n\">zerver_preregistrationuser</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">LEFT</span><span class=\"w\"> </span><span class=\"k\">JOIN</span><span class=\"w\"> </span><span class=\"n\">confirmation_confirmation</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"k\">ON</span><span class=\"w\"> </span><span class=\"n\">content_type_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">SELECT</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"k\">FROM</span><span class=\"w\">   </span><span class=\"n\">django_content_type</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"k\">WHERE</span><span class=\"w\">  </span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'preregistrationuser'</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"k\">AND</span><span class=\"w\"> </span><span class=\"n\">object_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zerver_preregistrationuser</span><span class=\"mf\">.</span><span class=\"n\">id</span><span class=\"w\"></span>\n<span class=\"k\">ORDER</span><span class=\"w\">  </span><span class=\"k\">BY</span><span class=\"w\"> </span><span class=\"n\">invited_at</span><span class=\"w\"> </span><span class=\"k\">DESC</span><span class=\"w\"></span>\n<span class=\"k\">LIMIT</span><span class=\"w\">  </span><span class=\"mf\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>You can add <code>email</code> to the columns for you if it helps identify which is which, but I expect we'll be able to tell.</p>",
        "id": 1363030,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452093
    },
    {
        "content": "<p>I guess another question -- you reported that the user wasn't getting the invites before.  Do you see notes in the logfile showing that those invites went out?</p>",
        "id": 1363031,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452198
    },
    {
        "content": "<p>Do the lines I pasted from <code>event_invites.log</code> indicate that the system attempted to send them?</p>",
        "id": 1363033,
        "sender_full_name": "James VL",
        "timestamp": 1649452308
    },
    {
        "content": "<p>Yup.  And you say that when you clicked it one last time, it started showing \"Error listing invites\"?</p>",
        "id": 1363035,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452356
    },
    {
        "content": "<p>...oh, did it show that <em>repeatedly</em>, if you reloaded the page?  Or did you only see the error once, after sending the invite?</p>",
        "id": 1363037,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452390
    },
    {
        "content": "<p>No click required for that - I assume that was the JSON response I got when it tried to render the list of invites. (there was nothing to click, because the list could not be rendered).</p>",
        "id": 1363039,
        "sender_full_name": "James VL",
        "timestamp": 1649452418
    },
    {
        "content": "<p>Although maybe the references are becoming too vague, since \"this\" and \"that\" refer to potentially several things...</p>",
        "id": 1363040,
        "sender_full_name": "James VL",
        "timestamp": 1649452440
    },
    {
        "content": "<p>Got it.  I ask because <a href=\"https://github.com/zulip/zulip/pull/21306\">#21306</a> is this error, as a race condition which is essentially only triggered when you click \"send,\" and the backend worker races with the refresh that we tell the frontend to do.  But it would have resolved if you reloaded (and the worker was running, which it looks like it was).</p>",
        "id": 1363041,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452502
    },
    {
        "content": "<p>Anything from the SQL I pasted above?  You can get to a PostgreSQL prompt via, as the <code>zulip</code> user, running:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> ~/deployments/current\n./manage.py dbshell\n</code></pre></div>",
        "id": 1363042,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452548
    },
    {
        "content": "<ul>\n<li>I did not receive nor see any errors when trying to <em>send</em> the invite to this user - it failed silently (they kept reporting from other channels that they had not received yet, even after checking spam, etc.)</li>\n<li>after doing the Zulip upgrade to 5.1, I saw the error message on the Invites list page and got the error in the logs that \"confirmation.models.Confirmation.DoesNotExist: Confirmation matching query does not exist.\"<ul>\n<li>reloading the whole page didn't seem to fix</li>\n<li>since then, the error has gone away</li>\n</ul>\n</li>\n</ul>",
        "id": 1363043,
        "sender_full_name": "James VL",
        "timestamp": 1649452590
    },
    {
        "content": "<p>Oh, interesting that you didn't see the error prior to the 5.1 upgrade.  Though you were on 5.0 before that?  Nothing changed in the invitations codepath in between, AFAIK.</p>",
        "id": 1363044,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452639
    },
    {
        "content": "<p>Correct, didn't see this before then.</p>",
        "id": 1363045,
        "sender_full_name": "James VL",
        "timestamp": 1649452654
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>          invited_at           |           date_sent           | confirmation_id | prereg_user\n-------------------------------+-------------------------------+-----------------+-------------\n 2022-04-05 21:47:46.626774+00 | 2022-04-05 21:47:46.631507+00 |           75521 |         111\n 2022-04-05 21:47:46.626774+00 | 2022-04-05 21:41:37.893343+00 |           75518 |         111\n 2022-04-05 19:52:35.116532+00 |                               |                 |         110\n 2022-04-04 14:02:00.483525+00 | 2022-04-04 14:02:00.565208+00 |           75137 |         105\n 2022-03-28 13:37:13.968352+00 | 2022-03-28 13:37:14.034518+00 |           74226 |         104\n 2022-03-23 13:29:53.367163+00 | 2022-03-23 13:29:53.410415+00 |           73427 |         103\n 2022-03-22 13:39:26.651056+00 | 2022-03-22 13:39:26.717625+00 |           73303 |         102\n 2022-03-11 18:55:54.390198+00 | 2022-03-11 18:55:54.422231+00 |           71893 |         101\n 2022-03-11 13:45:36.429006+00 | 2022-03-10 18:33:18.687418+00 |           71555 |         100\n 2022-03-11 13:45:36.429006+00 | 2022-03-11 13:45:36.45631+00  |           71719 |         100\n</code></pre></div>",
        "id": 1363046,
        "sender_full_name": "James VL",
        "timestamp": 1649452663
    },
    {
        "content": "<p>Nothing in the <code>/var/log/zulip/events_invites.log</code> logfile near the <code>2022-04-05 19:52:35.116532+00</code> timestamp, I assume?</p>",
        "id": 1363047,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452716
    },
    {
        "content": "<p>Oddly, no..</p>",
        "id": 1363048,
        "sender_full_name": "James VL",
        "timestamp": 1649452929
    },
    {
        "content": "<p>That fits the diagnosis that we tried to enqueue something for the invite worker but failed to do so.</p>",
        "id": 1363049,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649452953
    },
    {
        "content": "<p>I see repeats of <a href=\"#narrow/stream/31-production-help/topic/PreregistrationUser.20invalid.20state.20.2321691/near/1363017\">the above log message</a> around that time, at 18:40 and 20:12</p>",
        "id": 1363050,
        "sender_full_name": "James VL",
        "timestamp": 1649452959
    },
    {
        "content": "<p>Color me very confused by those timestamps.</p>\n<p>Your above example had a timestamp of <code>2022-04-04 14:27:28.145</code> which is a time I would thus expect to see as a <code>date_sent</code> in the log.  It isn't.</p>\n<p>Nor do the timestamps there line up with any other <code>date_sent</code> lines.</p>",
        "id": 1363051,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649453240
    },
    {
        "content": "<p>Let me recheck some assumptions; one sec.</p>",
        "id": 1363052,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649453250
    },
    {
        "content": "<p>Here are the complete logs over the relevant time period:</p>\n<div class=\"codehilite\"><pre><span></span><code>2022-04-04 14:02:00.558 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user2@example.com\n2022-04-04 14:02:00.747 INFO [zulip.send_email] Sending invitation email to [&#39;user2@example.com&#39;] in\n2022-04-04 14:27:28.126 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-04 14:27:28.145 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-04 18:40:04.962 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-04 18:40:04.986 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-04 20:12:55.709 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-04 20:12:55.735 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-04 20:24:45.943 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-04 20:24:45.958 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-05 14:26:53.665 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-05 14:26:53.688 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-05 15:25:09.642 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-05 15:25:09.653 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-05 19:44:32.301 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-05 19:44:32.310 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n2022-04-05 19:50:15.466 INFO [process_queue] Worker 0 disconnecting from queue invites\n2022-04-05 19:51:30.829 INFO [process_queue] Worker 0 connecting to queue invites\n2022-04-05 21:41:37.887 INFO [zerver.worker.queue_processors] Sending invitation for realm  to user_3@example.com\n2022-04-05 21:41:37.993 INFO [zulip.send_email] Sending invitation email to [&#39;user_3@example.com&#39;] in\n</code></pre></div>",
        "id": 1363053,
        "sender_full_name": "James VL",
        "timestamp": 1649453395
    },
    {
        "content": "<p>(user2 and user_3 are indeed different emails in the original logs)</p>",
        "id": 1363054,
        "sender_full_name": "James VL",
        "timestamp": 1649453436
    },
    {
        "content": "<p>(looks like I read the date wrong before on the timestamps; there were events in the log on <code>04-05 19:51</code>)</p>",
        "id": 1363055,
        "sender_full_name": "James VL",
        "timestamp": 1649453789
    },
    {
        "content": "<p>And sadly, I need to step away from a computer for a bit, so won't be able to further response for a while</p>",
        "id": 1363056,
        "sender_full_name": "James VL",
        "timestamp": 1649453910
    },
    {
        "content": "<p>!</p>\n<p>I just replicated by trying to resend.</p>",
        "id": 1363057,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649454627
    },
    {
        "content": "<p>OK, this bug is great.</p>\n<p>The fact that you resent it several times is actually relevant, as it turns out.</p>",
        "id": 1363089,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649456047
    },
    {
        "content": "<p>So we don't actually store the number of days that an invite is valid -- we store when we sent it, and when it expires.</p>\n<p>But when we're pushing things into the queue, we want to be able to handle it like we are sending a new invite, so we back-calculate the validity days, and send that into the queue.</p>\n<p>Before we send it into the queue, we <em>delete the old confirmation object</em>.  This is new in <a href=\"https://github.com/zulip/zulip/commit/8c1ea78d7d4c7c470c3be23e5c10c27c426fa74f\">8c1ea78d7d4c7c470c3be23e5c10c27c426fa74f</a>, and I'm not sure is actually explainable, in that it means that the old link (if they find it) won't work.  It also leaves the database in inconsistent state for a short period of time, until the worker picks up the new invite to send out.</p>\n<p>Except that days of validity that we calculated?  We calculate it based on  <em>when it expires</em> minus <em>when we sent the invite</em>.  We write the expiration based on <em>when the preregistration user was created</em> plus <em>the validity in days</em>.</p>\n<p>The key is that there's a tiny delay between when we create the preregistration user and when we send the invite.  so the difference we calculate is always 1-2 seconds short of the original number of day -- which we round down.</p>\n<p>So our invites, when we resend them, are getting <em>one day shorter</em> in validity each time.  Eventually, we get to asking for a 0-day validity, and the backend worker just throws up its hands and doesn't do anything -- leaving the database with a dangling preregistration user and no confirmation.</p>",
        "id": 1363094,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649456752
    },
    {
        "content": "<p>Hat tip to you, sir, for figuring that out based on just this amount of data.</p>",
        "id": 1363184,
        "sender_full_name": "James VL",
        "timestamp": 1649460209
    },
    {
        "content": "<p>Anyways, see <a class=\"stream-topic\" data-stream-id=\"2\" href=\"/#narrow/stream/2-general/topic/resent.20invitations\">#general &gt; resent invitations</a> for some product questions that dictate how this gets fixed, but thanks for the report.  As long as you don't need to resend more times than days, you should be set going forward. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 1363190,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1649460810
    }
]