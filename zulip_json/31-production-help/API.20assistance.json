[
    {
        "content": "<p>Hi, all! <br>\nI'm trying to create a script to pull the total message history from our subdomain at recurse.zulip, and I've run into a problem of understanding - what, precisely, is <code>anchor</code> and how does it relate to how messages are stored in the database?  We performed a number of exploratory queries, but found that multiple anchor values (very large and very small) pointed to similar messages.  This is making it hard for us to construct a graduated window function that would be able to sequentially grab chunks of messages, IOT build a complete set.  The purpose behind this query is the scraping of message body for links, as part of an archival project.</p>\n<p>Alternatively, if there is a more efficient method of bulk querying for messages, we would love to hear about it.  We're crawling through the source to try and answer some of these questions, but it was mentioned that smarter-not-harder would be best served by asking you guys, at the source.</p>\n<p>Thanks in advance.</p>",
        "id": 1062958,
        "sender_full_name": "Ben Morsillo",
        "timestamp": 1605293637
    },
    {
        "content": "<p>Do you plan to query the database directly, or are you asking so that you use the API efficiently? In what way does <a href=\"https://zulip.com/api/get-messages\">https://zulip.com/api/get-messages</a> not cover what you want to know?<br>\nRegarding finding links, are you using <code>has:link</code> in your narrow when fetching messages, given your intent?</p>",
        "id": 1063047,
        "sender_full_name": "Neil Pilgrim (neiljp)",
        "timestamp": 1605297035
    },
    {
        "content": "<p>(this may be a topic for <a class=\"stream\" data-stream-id=\"127\" href=\"/#narrow/stream/127-integrations\">#integrations</a> in future)</p>",
        "id": 1063051,
        "sender_full_name": "Neil Pilgrim (neiljp)",
        "timestamp": 1605297099
    },
    {
        "content": "<p>The plan, as it stands, is to use the api - we have been operating under the assumption that we could not query the db directly.  </p>\n<p>Regarding the docs for get-messages, we're confused about the meaning of <code>anchor</code> and how to use it, which is making hard to figure out how to increment our window.</p>\n<p>Although, if it's possible to do this in SQL, that would work just fine.  </p>\n<p>Apologies for posting to the wrong thread.  I'll make sure any further questions go in #integrations.</p>",
        "id": 1063092,
        "sender_full_name": "Ben Morsillo",
        "timestamp": 1605300995
    },
    {
        "content": "<p>The page I linked describes the <code>anchor</code> parameter, ie. it's the \"target\" message to fetch, around which you can fetch other messages.</p>",
        "id": 1063128,
        "sender_full_name": "Neil Pilgrim (neiljp)",
        "timestamp": 1605309711
    },
    {
        "content": "<p>I agree the parameter is described in terms of itself (anchor), which isn't exactly ideal, so the general get-messages text could be improved in that way.</p>",
        "id": 1063129,
        "sender_full_name": "Neil Pilgrim (neiljp)",
        "timestamp": 1605309870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"17841\">@Ben Morsillo</span> you may find <a href=\"https://github.com/zulip/zulip-archive\">https://github.com/zulip/zulip-archive</a> useful; it's designed for the task you're trying to accomplish.</p>",
        "id": 1063206,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1605317850
    },
    {
        "content": "<p>(That is a tool using the API for fetching message history in bulk in an organized fashion, and storing it in JSON files.  It also has a second phase to create an HTML archive, but you may not need that stage depending on what you're trying to do)</p>",
        "id": 1063207,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1605317893
    },
    {
        "content": "<p>Can you explain your question about the meaning of <code>anchor</code> more clearly?  I'd like to take this opportunity to improve the documentation, and I'm not sure what's confusing.</p>",
        "id": 1063208,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1605317922
    },
    {
        "content": "<p>The structure is that Zulip will find the message matching your query closest to the <code>anchor</code> message, and then provide <code>num_before/num_after</code> additional messages in the appropriate direction.</p>",
        "id": 1063209,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1605317962
    },
    {
        "content": "<p>This is perfect!  Thanks for the tip!</p>",
        "id": 1071689,
        "sender_full_name": "Ben Morsillo",
        "timestamp": 1606691327
    },
    {
        "content": "<p>Maybe we should update our <code>GET /messages</code> API docs to link to <code>zulip-archive</code> for an example of fetching a whole stream?</p>",
        "id": 1083867,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1608345202
    },
    {
        "content": "<p>Or maybe we should just write a function in <code>python-zulip-api</code> that does this and document it; shouldn't be more than 10 lines of code.</p>",
        "id": 1083868,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1608345220
    }
]