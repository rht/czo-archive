[
    {
        "content": "<p>Since last night, I've been getting error emails from my server approximately every 15 minutes, with the subject line <code>[Django] hostname: Realm matching query does not exist</code>, and the body which I include at the end. The message body is always the same, including the remote IP which I replaced by \"redacted\", but which is unlikely to come from our team due to its geographic origin. Is that some kind of attack? Can I do something about it? Maybe block the IP?</p>\n<div class=\"codehilite\"><pre><span></span><code>Logger django.request, from module django.utils.log line 222:\nError generated by Anonymous user (not logged in) on domainname.dev deployment\n\nTraceback (most recent call last):\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/core/handlers/exception.py&quot;, line 34, in inner\n    response = get_response(request)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/core/handlers/base.py&quot;, line 115, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/core/handlers/base.py&quot;, line 113, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File &quot;./zerver/lib/request.py&quot;, line 367, in _wrapped_view_func\n    return view_func(request, *args, **kwargs)\n  File &quot;./zerver/views/auth.py&quot;, line 725, in login_page\n    template_response = DjangoLoginView.as_view(\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/views/generic/base.py&quot;, line 71, in view\n    return self.dispatch(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/utils/decorators.py&quot;, line 45, in _wrapper\n    return bound_method(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/views/decorators/debug.py&quot;, line 76, in sensitive_post_parameters_wrapper\n    return view(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/utils/decorators.py&quot;, line 45, in _wrapper\n    return bound_method(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/utils/decorators.py&quot;, line 142, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/utils/decorators.py&quot;, line 45, in _wrapper\n    return bound_method(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/views/decorators/cache.py&quot;, line 44, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/contrib/auth/views.py&quot;, line 61, in dispatch\n    return super().dispatch(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/views/generic/base.py&quot;, line 97, in dispatch\n    return handler(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/views/generic/edit.py&quot;, line 141, in post\n    if form.is_valid():\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/forms/forms.py&quot;, line 185, in is_valid\n    return self.is_bound and not self.errors\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/forms/forms.py&quot;, line 180, in errors\n    self.full_clean()\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/forms/forms.py&quot;, line 382, in full_clean\n    self._clean_form()\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/forms/forms.py&quot;, line 409, in _clean_form\n    cleaned_data = self.clean()\n  File &quot;./zerver/forms.py&quot;, line 345, in clean\n    realm = get_realm(subdomain)\n  File &quot;./zerver/models.py&quot;, line 641, in get_realm\n    return Realm.objects.get(string_id=string_id)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/db/models/manager.py&quot;, line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/95c200b6285ecd03438bf951c43e31ad53ea9492/zulip-py3-venv/lib/python3.8/site-packages/django/db/models/query.py&quot;, line 406, in get\n    raise self.model.DoesNotExist(\nzerver.models.Realm.DoesNotExist: Realm matching query does not exist.\n\n\nDeployed code:\n- git: 4.0-dev-1783-g90ca06d873\n- ZULIP_VERSION: 4.0-dev-1783-g90ca06d873\n\n\nRequest info:\n- path: /accounts/login/\n- POST: {&#39;next&#39;: [&#39;********************&#39;], &#39;username&#39;: [&#39;********************&#39;], &#39;password&#39;: [&#39;**********&#39;], &#39;csrfmiddlewaretoken&#39;: [&#39;**********&#39;]}\n- REMOTE_ADDR: &quot;redacted&quot;\n- QUERY_STRING: &quot;&quot;\n- SERVER_NAME: &quot;&quot;\n</code></pre></div>",
        "id": 1207990,
        "sender_full_name": "Jonas F",
        "timestamp": 1623542734
    },
    {
        "content": "<p>It's the second time this happens, last time was a few months ago. The server seems to be running fine apart from that.</p>",
        "id": 1207991,
        "sender_full_name": "Jonas F",
        "timestamp": 1623542916
    },
    {
        "content": "<p>I first thought it was people trying to login via the screen at the root domain even though the two realms are at subdomains. But I tried that myself and it didn't generate any error message.</p>",
        "id": 1207992,
        "sender_full_name": "Jonas F",
        "timestamp": 1623542972
    },
    {
        "content": "<p>Hmm, this looks like someone making requests to a subdomain where there is no realm and the main problem is that the Zulip code doesn't have the proper error handling for this scenario here. That'll be an easy fix (<span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> ping to myself to take care of this later) - but the more interesting question is why it's happening. It seems easy and harmless (other than the error email spam) to artificially make such requests and trigger the error, but if it's a confused user trying to log in then it would be nice if we could figure out how exactly that's happening on their end.</p>",
        "id": 1211630,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623867513
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> ! </p>\n<p>Just as a status update:</p>\n<ul>\n<li>the emails have stopped by now, after roughly 2 days</li>\n<li>the source IP was called a \"Recently reported forum spam source\" by <a href=\"https://whatismyipaddress.com\">https://whatismyipaddress.com</a></li>\n<li>I managed to trigger the error message myself by trying to log in through the login screen at the root domain which has no associated realm (the two realms on my server are at subdomains,as recommended). I had already dismissed this as cause since I didn't manage to trigger the error message on Sunday with the same technique, but that's probably because the server has a kind of anti-flooding mechanism built in where the same error message is only sent every 15 or 20 minutes.</li>\n</ul>\n<p>An obvious way to avoid this kind of login attempts in the future would be to disable the login screen at the root domain. Is that easy to do?</p>",
        "id": 1211822,
        "sender_full_name": "Jonas F",
        "timestamp": 1623877868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"17356\">@Jonas F</span> I think setting <code>ROOT_DOMAIN_LANDING_PAGE=True</code> in <code>/etc/zulip/settings.py</code> might do it, can you try that?</p>",
        "id": 1212199,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623925812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> Thanks! Can I simply put that anywhere in the file? Does it matter if it's at the beginning or end? (I searched the file, and <code>ROOT_DOMAIN_LANDING_PAGE</code> doesn't appear yet, not even in commented form).</p>",
        "id": 1212496,
        "sender_full_name": "Jonas F",
        "timestamp": 1623956740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"17356\">@Jonas F</span> You can put it anywhere in the file, it shouldn't matter. We don't document it there, it's just briefly mentioned in <a href=\"https://zulip.readthedocs.io/en/latest/production/multiple-organizations.html\">https://zulip.readthedocs.io/en/latest/production/multiple-organizations.html</a> - though I think given the situation in this thread perhaps we should recommend setting it whenever there's no organization on the root domain.</p>\n<p>So <code>ROOT_DOMAIN_LANDING_PAGE = True</code> anywhere in the file and server restart should fix this, if I'm right.</p>",
        "id": 1212501,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623957435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> OK I put it at the end and it works! Thanks!</p>",
        "id": 1212503,
        "sender_full_name": "Jonas F",
        "timestamp": 1623957620
    },
    {
        "content": "<p>I feel like there must be an actual bug here too.</p>",
        "id": 1212508,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1623957867
    },
    {
        "content": "<p>Do we understand why we'd be presenting a login page on the root domain for a server that doesn't have a realm hosted on that domain?  I guess one possibility is we just don't have special logic for that case with <code>not ROOT_DOMAIN_LANDING_PAGE</code>.</p>",
        "id": 1212509,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1623957909
    },
    {
        "content": "<p>Oh, I bet it's that, and the issue is masked by the development environment showing /devlogin in that situation?</p>",
        "id": 1212510,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1623957944
    },
    {
        "content": "<p>I feel like we should display some sort of page there.  One possibility is that we can redirect to <code>/accounts/go</code>, if you land on the root domain for a Zulip server that has realms on subdomains?</p>",
        "id": 1212511,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1623958001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/lots.20of.20emails.20w.2F.20error.20messages/near/1212511\">said</a>:</p>\n<blockquote>\n<p>I feel like we should display some sort of page there.  One possibility is that we can redirect to <code>/accounts/go</code>, if you land on the root domain for a Zulip server that has realms on subdomains?</p>\n</blockquote>\n<p>Yeah, the current logic is similar but conditioned on the setting being enabled:<br>\n(in <code>login_page</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code>    if is_subdomain_root_or_alias(request) and settings.ROOT_DOMAIN_LANDING_PAGE:\n        redirect_url = reverse(&quot;realm_redirect&quot;)\n        if request.GET:\n            redirect_url = add_query_to_redirect_url(redirect_url, request.GET.urlencode())\n        return HttpResponseRedirect(redirect_url)\n</code></pre></div>",
        "id": 1212528,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623958768
    },
    {
        "content": "<p>(<code>realm_redirect</code> is <code>/accounts/go</code>)</p>",
        "id": 1212529,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623958792
    },
    {
        "content": "<p>So possibly we should just auto-detect the correct value for this setting rather than requiring explicit configuration?</p>",
        "id": 1212530,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1623958849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> yeah, I think we want that logic on the root/alias domains as long as there isn't a realm there, regardless of <code>ROOT_DOMAIN_LANDING_PAGE</code>.</p>",
        "id": 1212636,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1623969024
    },
    {
        "content": "<p>Did this get an issue for it?</p>",
        "id": 1220921,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1624917336
    },
    {
        "content": "<p>Not that I'm aware of; if I'd opened it I'd have posted to this thread.</p>",
        "id": 1220949,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1624919166
    },
    {
        "content": "<p>I pushed a commit for this to <a href=\"https://github.com/zulip/zulip/pull/13924\">#13924</a> yesterday since it's kinda related to the other things that PR does</p>",
        "id": 1222303,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1624972056
    },
    {
        "content": "<p>Aha, cool.  I figured something like that might have happened. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 1222470,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1624991823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"19257\">@Alya Abbott</span> You just sent me an email asking me to set <code>ROOT_DOMAIN_LANDING_PAGE = False</code> in <code>/etc/zulip/settings.py</code> on my zulip server (which hosts two organizations), I assume since the default landing page gives the misleading impression of representing the zulip team.</p>\n<p>However, as you can see in the part I'm quoting below, I was previously advised here to set that value to <code>True</code> in order to solve another issue that is discussed in the present thread. </p>\n<p>Is there a setting to have the root domain landing page show nothing at all, ie neither a non-functional login field nor the default landing page that you're now asking me to take down?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"10349\">Mateusz Mandera</span> <a href=\"#narrow/stream/31-production-help/topic/lots.20of.20emails.20w.2F.20error.20messages/near/1212199\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"17356\">Jonas F</span> I think setting <code>ROOT_DOMAIN_LANDING_PAGE=True</code> in <code>/etc/zulip/settings.py</code> might do it, can you try that?</p>\n</blockquote>",
        "id": 1285434,
        "sender_full_name": "Jonas F",
        "timestamp": 1637628368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"17356\">@Jonas F</span> I think the answer is no, and we need to fix that; you can leave your system as-is until we publish a release that has a technical solution for this.</p>",
        "id": 1285447,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1637630230
    }
]