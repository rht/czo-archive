[
    {
        "content": "<p>Quick clarification on Outgoing Webhook integrations/bots: is the expected behavior is that the bots can or cannot function in private streams when the bot is not a member of the stream? <a href=\"https://zulipchat.com/help/bots-and-integrations\" target=\"_blank\" title=\"https://zulipchat.com/help/bots-and-integrations\">The docs</a> say:</p>\n<blockquote>\n<p>The bot can read private messages where the bot is a participant, and stream messages where the bot is mentioned</p>\n</blockquote>\n<p>which sounds like perhaps the bot should be able to function in all streams (including private ones) via a mention even if it's not subscribed to the stream, but I vaguely remember that's not the correct interpretation.</p>\n<p>Thanks!</p>",
        "id": 814354,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580780309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> an outgoing webhook bot can function in private streams even when not subscribed as long as you're just using the \"respond to mentions\" functionality.</p>",
        "id": 814487,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580851837
    },
    {
        "content": "<p>Ah thanks!</p>\n<blockquote>\n<p>as long as you're just using the \"respond to mentions\" functionality</p>\n</blockquote>\n<p>Is there a way to use more than that? I thought respond-to-mentions (and private messages) was by definition an Outgoing Webhook's only \"skill\". Or you just mean \"as long as you don't expect to be able to do more than that, like actively post an unprompted message to the private stream\"?</p>",
        "id": 814518,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580853976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> right.  A bot can post unprompted to private streams that it is subscribed to or that its owner is subscribed to</p>",
        "id": 814519,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580854155
    },
    {
        "content": "<p>Cool. And for Generic Bots it's different, right? Those do require a subscription? Or are they also able to respond to @mentions without being subscribed?</p>",
        "id": 814520,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580854290
    },
    {
        "content": "<p>Right, I believe they currently don't have the special feature of outgoing webhook bots to be delivered messages from private streams.  We may change that to make the model more consistent down the line.</p>",
        "id": 814521,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580854363
    },
    {
        "content": "<p>Ok, thanks. Yeah I think since a bot user has no clue (and probably doesn't care much) what the bot type is, it'd probably be nice to unify that bit at some point to avoid confusion.</p>",
        "id": 814522,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580854583
    },
    {
        "content": "<p>Anyways, back to Outgoing, I was asking because as far as I can tell on our instance the Outgoing bot is not successfully posting its reply on private streams when mentioned, unless the bot is subscribed, or its owner is subscribed. We're a bit behind the latest, on 2.0.4 I believe. Is it a recent development that Outgoing Webhooks can function without being subscribed?</p>",
        "id": 814523,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580854729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> I don't think there's been any changes to that behavior since 1.9.x.</p>",
        "id": 814547,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580861770
    },
    {
        "content": "<p>Ok thanks. I'll try to reproduce the issue here and report it. Do you know if by any chance someone has set up a  simple \"hello world\" Outgoing Webhook-compatible server URL out there in the internet that someone which I could point a bot to for testing? Or would I have to set up my own?</p>",
        "id": 814549,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580862045
    },
    {
        "content": "<p>I'm not aware of one that returns an appropriate HTTP response to reply.</p>",
        "id": 814550,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580862207
    },
    {
        "content": "<p>Cool I'll figure something out</p>",
        "id": 814551,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580862229
    },
    {
        "content": "<p>I stood up a quick endpoint that returns a Zulip-compatible Hello World, and made an Outgoing bot (NoeBot) pointing to it. With <span class=\"user-mention silent\" data-user-id=\"3733\">Sean Wallitsch</span>'s help I was able to reproduce the behavior where the bot does not reply in the private stream, unless the bot or me are invited to the stream. I'll make a github issue and leave the bot up for at least a couple days, so feel free to test yourself in private streams.</p>",
        "id": 814743,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580924138
    },
    {
        "content": "<p><a href=\"/user_uploads/2/90/5bWTq5xQHm3uQObydcYNFjnQ/zulip_outgoing_bot_private_streams.png\" target=\"_blank\" title=\"zulip_outgoing_bot_private_streams.png\">Proof</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/90/5bWTq5xQHm3uQObydcYNFjnQ/zulip_outgoing_bot_private_streams.png\" target=\"_blank\" title=\"Proof\"><img src=\"/user_uploads/2/90/5bWTq5xQHm3uQObydcYNFjnQ/zulip_outgoing_bot_private_streams.png\"></a></div>",
        "id": 814744,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580924164
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/zulip/zulip/issues/13828\" target=\"_blank\" title=\"https://github.com/zulip/zulip/issues/13828\">https://github.com/zulip/zulip/issues/13828</a></p>",
        "id": 814749,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580924963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> great, thanks for investigating!</p>",
        "id": 814821,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580933140
    },
    {
        "content": "<p>So this block in <code>zerver/lib/actions.py</code> inside <code>get_service_bot_events</code> certainly suggests we intend for this to work:</p>\n<div class=\"codehilite\"><pre><span></span>        # Important note: service_bot_tuples may contain service bots\n        # who were not actually mentioned in the message (e.g. if\n        # mention syntax for that bot appeared in a code block).\n        # Thus, it is important to filter any users who aren&#39;t part of\n        # either mentioned_user_ids (the actual mentioned users) or\n        # active_user_ids (the actual recipients).\n        #\n        # So even though this is implied by the logic below, we filter\n        # these not-actually-mentioned users here, to help keep this\n        # function future-proof.\n        if user_profile_id not in mentioned_user_ids and user_profile_id not in active_user_ids:\n            return\n</pre></div>",
        "id": 814823,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580933268
    },
    {
        "content": "<p>Probably the right answer will be to write an automated backend test for this and then see why it fails.</p>",
        "id": 814824,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580933281
    },
    {
        "content": "<p>Thanks and no problem</p>",
        "id": 814827,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580933352
    },
    {
        "content": "<p>Slight tangent question: <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I noticed that my outgoing bot endpoint on this Zulip server receives an HTTP GET from Zulip when summoned, whereas in our internal server it receives an HTTP POST that exactly matches <a href=\"https://zulipchat.com/api/outgoing-webhooks#zulip-message-format\" target=\"_blank\" title=\"https://zulipchat.com/api/outgoing-webhooks#zulip-message-format\">the spec in the docs</a>. Is there something about this server's setup that might be causing that? As far as I can tell from the latest Zulip source code (assuming I'm looking in the right place), outgoing bots always do a POST so I'm surprised to see that happen here.</p>",
        "id": 814935,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580939324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> yeah, it should always be a POST.  How are you checking that you're receiving a GET?</p>",
        "id": 814963,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580945486
    },
    {
        "content": "<p>The endpoint I stood up is a simple flask server and it reports a GET when I mention the bot in zulip. I'll triple check that I'm not messing something up cause I am doing a bit of url redirection to point to my home IP haha, but I can't see how a POST would be morphing to a GET in that process...</p>",
        "id": 815025,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580949292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> some web services will treat a POST as a GET in some cases; I don't know flask well enough to comment if it does that.</p>",
        "id": 815027,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1580949883
    },
    {
        "content": "<p>Flask is pretty POST-enabled as far as I know, and plus we're using flask with our internal zulip as well and it receives a POST so I don't <em>think</em> it's flask being weird, but I'll double check.</p>",
        "id": 815028,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580950033
    },
    {
        "content": "<p>Without knowing much about the context, the one thing I can think of that might turn a POST into a GET is an HTTP redirect?</p>",
        "id": 815029,
        "sender_full_name": "Anders Kaseorg",
        "timestamp": 1580950237
    },
    {
        "content": "<p>Ah that might be it. I tried a curl POST to my endpoint and it passed through the redirect as a POST but maybe the behavior is different with the zulip requests call. Thanks for the pointer. It's probably my URL setup then.</p>",
        "id": 815032,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580951765
    },
    {
        "content": "<p>Confirmed it was a 301 redirect in my setup changing the HTTP verb, which I guess <a href=\"https://stackoverflow.com/a/13628908\" target=\"_blank\" title=\"https://stackoverflow.com/a/13628908\">is a thing</a>. So ignore me on the whole GET saga.</p>",
        "id": 815069,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1580963030
    }
]