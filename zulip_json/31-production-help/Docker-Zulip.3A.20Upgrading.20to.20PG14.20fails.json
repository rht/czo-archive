[
    {
        "content": "<p>Having trouble upgrading Docker-Zulip from 5.7 to 6, the part where the database is supposed to be upgraded to PostGreSQL 14 via the provided upgrade script.</p>\n<p>What do I have?</p>\n<ul>\n<li>Standard Docker-Zulip 5.7-0 with PostGreSQL 10.</li>\n</ul>\n<p>What did I do?</p>\n<ol>\n<li>Pulled the docker-zulip 6.1-0 image.</li>\n<li>Stopped all containers via <code>docker-compose stop</code>.</li>\n<li>Updated <code>docker-compose.yml</code> to use 6.1-0.</li>\n<li>Ran the <a href=\"https://github.com/zulip/docker-zulip/blob/main/upgrade-postgresql\">provided</a> upgrade-postgresql.</li>\n</ol>\n<p>The latter resulted in:</p>\n<blockquote>\n<p>Error response from daemon: remove docker-zulip_postgresql-14: volume is in use</p>\n</blockquote>\n<p>(Full output <a href=\"https://pastebin.com/ZV5Kf3xT\">here.</a>)</p>\n<p>I had not created any volumes (e.g. not upgraded to have Zulip use Docker volmes).</p>\n<p>(Of course, 6.1-0 doesn't start with the old Postgres resulting in <code>django.db.utils.NotSupportedError: PostgreSQL 11 or later is required (found 10.11).</code>.)</p>\n<p>Any help/hint is highly appreciated! Happy to provide more details if needed.</p>",
        "id": 1510005,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1676853665
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"14475\">@Roman Bannack</span> - looks like you hit the slightly less happy path out of the upgrade options and need to run the longer set of instructions. <a href=\"https://github.com/zulip/docker-zulip/blob/main/UPGRADING.md#upgrading-zulipzulip-postgresql-to-14-version-60-0-and-above\">Here is the full upgrade guide</a> for upgrading to 6.x+; notably, you'll need the part after <code>If the tool does not work, or you would prefer to perform the steps manually, see the steps below</code></p>",
        "id": 1510006,
        "sender_full_name": "Josh Klar",
        "timestamp": 1676854595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"25085\">@Josh Klar</span> </p>\n<p>Thank you. I failed for now, server went up but was constantly reloading with some <code>hostname.com/#reload:238237515944</code>-URL. Will retry later. The instructions don't say that you, probably, must upgrade to use volumes before (declaring only the PG14 volume didn't help in my case).</p>",
        "id": 1510010,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1676857237
    },
    {
        "content": "<p>Oh interesting - where are you storing your PG data currently if not a volume? Bind mounting a host directory?</p>",
        "id": 1510011,
        "sender_full_name": "Josh Klar",
        "timestamp": 1676857327
    },
    {
        "content": "<p>(I ask in part so that we can start shaping our Docker/OCI stack to the usecases folks have in the wild and reduce friction in this area)</p>",
        "id": 1510012,
        "sender_full_name": "Josh Klar",
        "timestamp": 1676857379
    },
    {
        "content": "<p>PG10 was/is, as the old default was, in a host directory: <code>/opt/docker/zulip/postgresql/data</code>.</p>",
        "id": 1510013,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1676857412
    },
    {
        "content": "<p>I'm happy that I can revert to 5.7 and PG10 without any problems, by the way.</p>",
        "id": 1510014,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1676857521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"14475\">@Roman Bannack</span>: The first failure in the output you show is a failure of <code>docker-compose up --wait database</code> -- it looks like it doesn't understand the arguments.</p>\n<p>Can you show <code>docker-compose --version</code> ?</p>",
        "id": 1510609,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1676995897
    },
    {
        "content": "<p>Looks like <code>docker-compose up --wait</code> was introduced in <a href=\"https://github.com/docker/compose/releases/tag/v2.1.1\">2.1.1</a>, in November 2021.  Try upgrading to a more recent <code>docker-compose</code> and trying again?</p>",
        "id": 1510610,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1676996129
    },
    {
        "content": "<p>I'll add a version check to the code.</p>",
        "id": 1510611,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1676996136
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"14475\">Roman Bannack</span> <a href=\"#narrow/stream/31-production-help/topic/Docker-Zulip.3A.20Upgrading.20to.20PG14.20fails/near/1510010\">said</a>:</p>\n<blockquote>\n<p>The instructions don't say that you, probably, must upgrade to use volumes before (declaring only the PG14 volume didn't help in my case).</p>\n</blockquote>\n<p>I don't believe there's a required ordering between these steps.</p>",
        "id": 1510612,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1676996304
    },
    {
        "content": "<p>Pushed <a href=\"https://github.com/zulip/docker-zulip/pull/388\">#DZ388</a>.</p>",
        "id": 1510633,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1676998429
    },
    {
        "content": "<p>And <a href=\"https://github.com/zulip/docker-zulip/pull/389\">#DZ389</a> has a commit to address your question about ordering the PostgreSQL upgrade with respect to the Docker volume change.</p>",
        "id": 1510832,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677009299
    },
    {
        "content": "<p>Thank you, <span class=\"user-mention\" data-user-id=\"12178\">@Alex Vandiver</span>! Indeed, I had <code>docker-compose version 1.25.0, build 0a186604</code>. After upgrading it, the (new) upgrade script worked fine.</p>\n<p>With Zulip 6.1, though, I encountered CSFR issues (being behind a reverse proxy), similar to those that were addressed in <a class=\"stream-topic\" data-stream-id=\"9\" href=\"/#narrow/stream/9-issues/topic/Zulip.206.2E0.20behind.20reverse.20proxy.20-.20CSRF.20verification.20failed\">#issues &gt; Zulip 6.0 behind reverse proxy - CSRF verification failed</a>. Have yet to find a way to solve that. Interestingly, for getting 5.7 to run again, I had to disable the Docker managed volume for the Zulip container and go back to bind mounting a volume.</p>",
        "id": 1511100,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1677029567
    },
    {
        "content": "<p>I expect the reason you had to go back to a bind-mounted directory is that the volume had PostgreSQL 14 data -- they're not interchangeable.</p>",
        "id": 1511377,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677089280
    },
    {
        "content": "<p>If you want to start a new topic with the CSRF issues, we can attempt to help debug those.  We're not aware of any relevant changes that should have affected behaviour there -- my best guess is that there's a Django upgrade as part of 6.x which changed behaviour in some way.</p>",
        "id": 1511381,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677089383
    },
    {
        "content": "<p>I think it's actually more likely that something in the configuration was changed while working on the upgrade that broke CSRF than that anything changed in Zulip at all there -- Django CSRF has been AFAIK unchanged for years.</p>",
        "id": 1511694,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1677108303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"12178\">Alex Vandiver</span> <a href=\"#narrow/stream/31-production-help/topic/Docker-Zulip.3A.20Upgrading.20to.20PG14.20fails/near/1511381\">schrieb</a>:</p>\n<blockquote>\n<p>If you want to start a new topic with the CSRF issues, we can attempt to help debug those.  We're not aware of any relevant changes that should have affected behaviour there -- my best guess is that there's a Django upgrade as part of 6.x which changed behaviour in some way.</p>\n</blockquote>\n<p>Appreciated! I still have to figure out whether these are, indeed, real CSRF issues. For now, I occasionally get \"invalid subdomain\" errors, and most (not all) of the older file uploads/images leading to 404 (static content, however, works). It seems something is going wrong with migrating to Docker managed volumes (that alone, without even the PG upgrade, leads to the 404 phenomenon). I can't pin that down narrow enough for asking meaningful questions at the moment. Will keep you updated.</p>",
        "id": 1514005,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1677289282
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"14475\">Roman Bannack</span> <a href=\"#narrow/stream/31-production-help/topic/Docker-Zulip.3A.20Upgrading.20to.20PG14.20fails/near/1514005\">said</a>:</p>\n<blockquote>\n<p>For now, I occasionally get \"invalid subdomain\" errors</p>\n</blockquote>\n<p>Do you host more than one Zulip organization (\"realm\" is the internal name for them) on this server, or just one?</p>\n<blockquote>\n<p>and most (not all) of the older file uploads/images leading to 404 (static content, however, works</p>\n</blockquote>\n<p>Are you using <a href=\"https://zulip.readthedocs.io/en/latest/production/upload-backends.html\">the file upload backend, or the S3 backend</a>?</p>",
        "id": 1514012,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677289722
    },
    {
        "content": "<p>4 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"31\" href=\"/#narrow/stream/31-production-help/topic/upgrading.20to.206.2E1\">#production help &gt; upgrading to 6.1</a> by <span class=\"user-mention silent\" data-user-id=\"21836\">Lauryn Menard</span>.</p>",
        "id": 1514726,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677502418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"12178\">@Alex Vandiver</span> </p>\n<p>There's only one Zulip organization. And no, no file upload backends or S3 involved. I think we can forget the 404 I mentioned above for now. I made a clean start and now it looks a bit different.</p>\n<p>Unfortunately, I could not fix it, yet. What I know so far:</p>\n<p>First, I migrated to Docker-managed volumes. Went well.</p>\n<p>Now, running <code>upgrade-postgresql</code> finishes successfully, but throws two warnings and an error on its way:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>WARN<span class=\"o\">[</span><span class=\"m\">0000</span><span class=\"o\">]</span><span class=\"w\"> </span>volume<span class=\"w\"> </span><span class=\"s2\">\"docker-zulip_postgresql-10\"</span><span class=\"w\"> </span>already<span class=\"w\"> </span>exists<span class=\"w\"> </span>but<span class=\"w\"> </span>was<span class=\"w\"> </span>not<span class=\"w\"> </span>created<span class=\"w\"> </span>by<span class=\"w\"> </span>Docker<span class=\"w\"> </span>Compose.<span class=\"w\"> </span>Use<span class=\"w\"> </span><span class=\"sb\">`</span>external:<span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"sb\">`</span><span class=\"w\"> </span>to<span class=\"w\"> </span>use<span class=\"w\"> </span>an<span class=\"w\"> </span>existing<span class=\"w\"> </span>volume\n\n<span class=\"o\">(</span>...<span class=\"o\">)</span>\n\n+<span class=\"w\"> </span>docker<span class=\"w\"> </span><span class=\"nb\">exec</span><span class=\"w\"> </span>-i<span class=\"w\"> </span>d8ebf0235887ba43d16d8622f430c3cc4b7f051707d78df15cd6dc2c09ed87c2<span class=\"w\"> </span>psql<span class=\"w\"> </span>-U<span class=\"w\"> </span>zulip\ninvalid<span class=\"w\"> </span><span class=\"nb\">command</span><span class=\"w\"> </span><span class=\"se\">\\\"</span><span class=\"s2\">\":</span>\n<span class=\"s2\">ERROR:  syntax error at or near \"</span>OCI<span class=\"s2\">\"</span>\n<span class=\"s2\">LINE 1: OCI runtime exec failed: exec failed: container_linux.go:346...</span>\n<span class=\"s2\">        ^</span>\n\n<span class=\"s2\">WARN[0000] volume \"</span>docker-zulip_postgresql-14<span class=\"s2\">\" already exists but was not created by Docker Compose. Use `external: true` to use an existing volume</span>\n</code></pre></div>\n<p>(Full output <a href=\"https://pastebin.com/3TYm5LEW\">here</a>.)</p>\n<p>On a side note, the shortcut for <code>docker_compose_version</code> doesn't seem to work in my case. It is defined in line 13, but line 14 throws an error: <code>./upgrade-postgresql: Zeile 14: docker_compose_version: Befehl nicht gefunden</code> (command not found). Checked it on the command line (Ubuntu Server 18.04), it gives the same error. I guess you could just do it with <code>alias docker_compose_version=\"docker-compose --version --short\"</code> which works.</p>\n<p>Now, starting the stack of containers with Zulip 6.1 and PG14, everything goes up good, but Zulip now keeps saying that no organisation exists on this subdomain. Only when I try to log in, it results in a CSRF error.</p>\n<p>I am running Zulip behind a reverse proxy (Apache2) with custom <code>SETTING_EXTERNAL_HOST</code>, <code>SETTING_USE_X_FORWARDED_HOST</code>, <code>DISABLE_HTTPS: \"True\"</code>, etc., which all work just fine with 5.7 and PG10. All this lives on a subdomain, e.g. \"<a href=\"http://team.myserver.de\">team.myserver.de</a>\".</p>\n<p>What I didn't try again was the manual PG14 upgrade. Maybe this will give some more insight.</p>",
        "id": 1517255,
        "sender_full_name": "Roman Bannack",
        "timestamp": 1677798078
    },
    {
        "content": "<p>The \"Command not found\" is a stupid mistake on my part -- <a href=\"https://github.com/zulip/docker-zulip/pull/392\">#DZ392</a>.</p>",
        "id": 1517372,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677809242
    },
    {
        "content": "<p>The warning is likely the major contributing cause of the error later -- that <code>OCI runtime exec failed: exec failed: container_linux.go:346</code> is the start of a message saying that running commands in the container failed, because <code>docker-compose exec database pg_dumpall -U zulip</code> failed because the disk wasn't mountable.</p>",
        "id": 1517376,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677809415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"14475\">@Roman Bannack</span>: What version of <code>docker-compose</code> is this?</p>\n<p>i.e. can you show the output of:</p>\n<div class=\"codehilite\"><pre><span></span><code>docker-compose --version --short\n</code></pre></div>",
        "id": 1517382,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677809608
    },
    {
        "content": "<p>Ah, 2.16.0, it's in the full log.</p>",
        "id": 1517388,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677809809
    },
    {
        "content": "<p>OK, verified that that warning is just a warning, and it keeps going.</p>\n<p><span class=\"user-mention\" data-user-id=\"14475\">@Roman Bannack</span>: Can you show me the output of:</p>\n<div class=\"codehilite\"><pre><span></span><code>docker-compose up --wait database\ndocker-compose exec database pg_dumpall -U zulip | head\n</code></pre></div>",
        "id": 1517823,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677870280
    }
]