[
    {
        "content": "<p>I manage a small install of 3.2 on Ubuntu 20.04.  I'd like to upgrade to the newest Zulip along with Ubuntu 22.04.  My preference (with all my upgrades), is to fire up a new server running Ubuntu 22.04, install the latest Zulip, then migrate the data.  I like being able to test the new server and version before messing with the production server.  I also am not a fan of OS upgrades.  I stick with LTS releases so replacing the server every 2 years is no big deal.  I was surprised to see all mentions of restoring and migrating in the docs indicating it has to be done from identical OS and Zulip versions.  Is there no way around this?</p>",
        "id": 1604736,
        "sender_full_name": "J.R. Lillard",
        "timestamp": 1688621919
    },
    {
        "content": "<p>You might be able to do that if you import the pg_dump from the old version, <code>./manage.py migrate</code> to upgrade it to the new version, and carry on from there.   This is moderately untested waters, so I'm not entirely sure what the failure modes of that would be.</p>",
        "id": 1605002,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1688660929
    },
    {
        "content": "<p>I believe that part of it is that pg_dump output isn't necessarily compatible between PostgreSQL versions.</p>",
        "id": 1605003,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1688660980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"15987\">@J.R. Lillard</span> I would recommend just following the recommended process. If you'd like to then do a backup/restore to a fresh server, you can do that. The Zulip upgrade tool itself is pretty painless, so in any case I'd start with upgrading to 7.2 on your existing system.</p>",
        "id": 1605520,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1688689806
    },
    {
        "content": "<p>(Doing a backup/restore from 7.2 on 20.04 to 7.2 on 22.04 I would expect to work as long as the postgres versions on the two installations are the same; and we have docs for upgrading just postgres).</p>",
        "id": 1605521,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1688689849
    },
    {
        "content": "<p>Thanks.  I'm going to try the pg_dump and restore first to see if I can jump straight from old to new.  If that doesn't work, I'll clone the VM and go through the long upgrade process just so I can do a backup / restore from an upgraded server to a fresh server.</p>",
        "id": 1605553,
        "sender_full_name": "J.R. Lillard",
        "timestamp": 1688690970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"15987\">@J.R. Lillard</span>: If you try this, be aware you will also need to bring across the uploaded files and configuration.  Ref <a href=\"https://zulip.readthedocs.io/en/latest/production/export-and-import.html#backup-details\">https://zulip.readthedocs.io/en/latest/production/export-and-import.html#backup-details</a></p>",
        "id": 1605566,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1688691219
    },
    {
        "content": "<p>I ended up going the long route for this issue:</p>\n<ul>\n<li>Create a new Ubuntu 20.04 server with Zulip 3.2</li>\n<li>Backup Zulip 3.2 from live server and restore to new server</li>\n<li>Upgrade new server from Zulip 3.2 to Zulip 5.6</li>\n<li>Upgrade new server from Ubuntu 20.04 to Ubuntu 22.04</li>\n<li>Upgrade new server from Zulip 5.6 to Zulip 7.2</li>\n<li>Upgrade new server from PostgreSQL 14 to PostgreSQL 15</li>\n<li>Create a new Ubuntu 22.04 server with Zulip 7.2</li>\n<li>Backup zulip 7.2 from the temporary server and restore to the new server</li>\n</ul>\n<p>This gave me a trial run of the process to make sure it works without any error and I'm not left with a live server that was upgraded from Ubuntu 20.04.</p>",
        "id": 1607193,
        "sender_full_name": "J.R. Lillard",
        "timestamp": 1689018247
    },
    {
        "content": "<p>Makes sense, given the constraints you decided upon.</p>",
        "id": 1607220,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1689021502
    },
    {
        "content": "<p>Any issues with any of those steps?</p>",
        "id": 1607221,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1689021518
    },
    {
        "content": "<p>My only issue with the process is that I don't think there's a documented uninstall for Zulip.  So if I did something wrong along the way, it was easier for me to reload the server instead of trying to figure out what I did wrong.  As long as I got every step right along the way, I had no problems.  It also until I was pretty far into the process that I realized that the PostgreSQL upgrade was not happening with the Zulip upgrade.  I realize the docs say this but I had not scrolled down enough to notice it.  So the backups from my temporary 7.2 server were failing to restore on my final 7.2 server because my temporary server was on PostgreSQL 14 and my final 7.2 server was on PostgreSQL 15 because it started there from scratch.  Is it worth mentioning that at the end of the upgrade script?</p>",
        "id": 1607286,
        "sender_full_name": "J.R. Lillard",
        "timestamp": 1689024082
    },
    {
        "content": "<p>Yeah, we should update the <a href=\"https://zulip.readthedocs.io/en/latest/production/upgrade.html#upgrading-to-a-release\">\"Upgrading to a release\" docs</a> to mention that explicitly.  We could also mention it in the upgrade script, but for most folks upgrading from, say, 7.1 to 7.2, with PostgreSQL 14, there's no strong reason to need to upgrade to PostgreSQL 15.</p>",
        "id": 1607470,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1689051745
    },
    {
        "content": "<p>That plan sounds good to me.</p>",
        "id": 1607948,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1689109004
    },
    {
        "content": "<p>Pushed <a href=\"https://github.com/zulip/zulip/pull/26242\">#26242</a>.</p>",
        "id": 1607979,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1689110689
    }
]