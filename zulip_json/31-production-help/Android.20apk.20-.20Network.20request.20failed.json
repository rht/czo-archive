[
    {
        "content": "<p>Hello, <br>\nI have installed Zulip server, its working good in browser (internal and external) and desktop apps. But in android app its not working, shows \"Network request failed\". Can anyone suggest me to resolve this issue.</p>",
        "id": 546584,
        "sender_full_name": "Jegan",
        "timestamp": 1521728416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284\">@Boris Yankov</span> any idea what's up there?</p>",
        "id": 546713,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521738271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"5962\">@Jegan</span> <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> is there a chance the server is using a self-signed certificate? Or maybe you have entered the URL wrong?</p>",
        "id": 546718,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521738420
    },
    {
        "content": "<p>It seems possible, though if this is the error message we show for a self-signed cert in the mobile app, we should work hard on improving that.  A similar effort of providing clear error messages for why the initial request failed has been valuable in the electron app to ensure that users can debug connection problems effectively.</p>",
        "id": 546856,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521741854
    },
    {
        "content": "<p>Looks like this is <a href=\"https://github.com/zulip/zulip-mobile/pull/1191\" target=\"_blank\" title=\"https://github.com/zulip/zulip-mobile/pull/1191\">#M1191</a>. I retitled that issue and expanded on it in a comment.</p>",
        "id": 546892,
        "sender_full_name": "Greg Price",
        "timestamp": 1521743243
    },
    {
        "content": "<p>Great <span class=\"emoji emoji-1f603\" title=\"smiley\">:smiley:</span></p>",
        "id": 546895,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521743412
    },
    {
        "content": "<p>To remind you, we can not distinguish between this error and general network error without a major rework on React Native internals - both for Android and iOS</p>",
        "id": 546898,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521743562
    },
    {
        "content": "<p>Well, I'm sure we can figure out something.  Worst case we do a special retry request using a networking library with clearer error codes after this failure (e.g. using the native ones on each platform), if forking the RN internals is more painful than that.</p>",
        "id": 546927,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521744748
    },
    {
        "content": "<p>But this is pretty important, since changing \"the app is broken\" to \"my configuration is wrong\" is pretty important given that this is likely the first thing that will happen for an organization trying out our mobile app with a self-signed cert server.</p>",
        "id": 546928,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521744788
    },
    {
        "content": "<p>There's probably useful mitigation we can do here, though, of at least providing a more detailed custom error message for this case that either explains the possibilities or links to a troubleshooting doc that does so.</p>",
        "id": 546930,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521744821
    },
    {
        "content": "<p>(That was our v1 approach for electron as well)</p>",
        "id": 546931,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1521744829
    },
    {
        "content": "<p>Yeah, that would be useful even if we don't (for now) distinguish the error cases -- just give a much more verbose message that includes this possibility.</p>",
        "id": 546956,
        "sender_full_name": "Greg Price",
        "timestamp": 1521745307
    },
    {
        "content": "<p>I had rhe exact idea which is an order of magnitude more reasonable <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 546990,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521747043
    },
    {
        "content": "<p>Ah, I was at the cinema, bad reception, inadvertently tested how Zulip mobile behaves when almost no connection ;)</p>",
        "id": 547229,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521758392
    },
    {
        "content": "<p>Indeed, doing a <code>get</code> in native Android and iOS at <code>/server_settings</code>to distinguish between inaccessible URL or one that is self-signed is way easier than patching React Native. And solves our problem. RN have already stated that allowing disabling of this protection that stops us connecting is out of scope and will not be implemented.</p>",
        "id": 547234,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521758508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284\">@Boris Yankov</span> Server is not self-signed certificate. Please find the screenshot of which we get the error from Android app. <a href=\"/user_uploads/2/c8/8lVafKKYhJ1amVGnny3GoTrI/Screenshot_20180323-152657.png\" target=\"_blank\" title=\"Screenshot_20180323-152657.png\">Screenshot_20180323-152657.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/c8/8lVafKKYhJ1amVGnny3GoTrI/Screenshot_20180323-152657.png\" target=\"_blank\" title=\"Screenshot_20180323-152657.png\"><img src=\"/user_uploads/2/c8/8lVafKKYhJ1amVGnny3GoTrI/Screenshot_20180323-152657.png\"></a></div>",
        "id": 547400,
        "sender_full_name": "Jegan",
        "timestamp": 1521799641
    },
    {
        "content": "<p>Hmm. Then this is not a known issue. Are you sure the URL you entered is correct?</p>",
        "id": 547448,
        "sender_full_name": "Boris Yankov",
        "timestamp": 1521812928
    }
]