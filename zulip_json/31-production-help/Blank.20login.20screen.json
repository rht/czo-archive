[
    {
        "content": "<p>I followed all instructions and ran dev server. The Login screen is empty, and I am unable to perform an action. Is everything ok here? Attached a JS console.<a href=\"/user_uploads/2/3d/C-rBt7piRkNAf8mg70MWvGsP/Screenshot-from-2016-11-17-155103.png\" target=\"_blank\" title=\"Screenshot-from-2016-11-17-155103.png\">Screenshot-from-2016-11-17-155103.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/3d/C-rBt7piRkNAf8mg70MWvGsP/Screenshot-from-2016-11-17-155103.png\" target=\"_blank\" title=\"Screenshot-from-2016-11-17-155103.png\"><img src=\"/user_uploads/2/3d/C-rBt7piRkNAf8mg70MWvGsP/Screenshot-from-2016-11-17-155103.png\"></a></div>",
        "id": 55878,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416148
    },
    {
        "content": "<p>cool, that looks like you have an empty database</p>",
        "id": 55879,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416191
    },
    {
        "content": "<p>If you rerun <code>tools/provision.py</code>, it should repopulate it, but I'm a it surprised it didn't already.  Can you check your terminal log for errors?</p>",
        "id": 55880,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416218
    },
    {
        "content": "<p>Ok. The reason is  <code>./tools/*</code> DB scripts fail if <code>username</code> is <code>user</code>. <code>user</code> is reserved in <code>Postgres</code>. </p>",
        "id": 55881,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416283
    },
    {
        "content": "<p>Oh, as in your username on the system is <code>user</code>?</p>",
        "id": 55882,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416307
    },
    {
        "content": "<p>I am documenting all of these <a href=\"https://paper.dropbox.com/doc/Zulip-GCI-task-feedback-yPn9ynpXBHIFkCVW0gH4x\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Zulip-GCI-task-feedback-yPn9ynpXBHIFkCVW0gH4x\">here</a>.</p>",
        "id": 55883,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416326
    },
    {
        "content": "<p>sweet!</p>",
        "id": 55884,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416336
    },
    {
        "content": "<p>Yes :-) weird choice!</p>",
        "id": 55885,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416346
    },
    {
        "content": "<p>In theory we should be using <code>zulip</code> as the username in those scripts</p>",
        "id": 55886,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416349
    },
    {
        "content": "<p>Like if you read <code>tools/setup/postgres-init-dev-db</code>, we set USERNAME=zulip</p>",
        "id": 55887,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416368
    },
    {
        "content": "<p>So I'm wondering if something else is going wrong here</p>",
        "id": 55888,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416373
    },
    {
        "content": "<p>First place where things falling out is <code>VAGRANTUSERNAME=$(whoami)</code> in <code>postgres-init-dev-db</code></p>",
        "id": 55889,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416431
    },
    {
        "content": "<p>How are you installing?  Manually, via vagrant?</p>",
        "id": 55890,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416459
    },
    {
        "content": "<p>I am running on <a href=\"https://zulip.readthedocs.io/en/latest/install-generic-unix-dev.html#all-systems\" target=\"_blank\" title=\"https://zulip.readthedocs.io/en/latest/install-generic-unix-dev.html#all-systems\">ubuntu</a>, I didn't choose <code>vagrant</code>. Probably using <code>vagrant/docker</code> will solve this problem.</p>",
        "id": 55891,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416533
    },
    {
        "content": "<p>yeah, and your username is <code>user</code>?  Interesting.  I think those lines <code>VAGRANTUSERNAME</code> are not super essential -- primarily all that they do is make e.g. <code>psql zulip</code> work for playing with the database rather than the more specialized <code>manage.py dbshell</code>.</p>",
        "id": 55893,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416642
    },
    {
        "content": "<p>So I think we could just fix the script by putting those 3 lines that involves VAGRANTUSERNAME inside a conditional to not run if the current username is a reserved username in postgres</p>",
        "id": 55894,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416714
    },
    {
        "content": "<p>and then you could proceed happily onwards :)</p>",
        "id": 55895,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479416729
    },
    {
        "content": "<p>Second place where it fails is <code>version=$(psql -A -t -d postgres -c \"show server_version\")</code> Line 18 in <code>terminate-psql-sessions</code>. <code>psql</code> takes <code>whoami</code> as default in many cases.</p>",
        "id": 55896,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479416876
    },
    {
        "content": "<p>hmm.  I wonder if actually what you want to do is edit your postgres configuration to rewrite the UNIX username <code>user</code> to some actual username</p>",
        "id": 55897,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479417456
    },
    {
        "content": "<p>But that's probably solvable by tweaking the arguments</p>",
        "id": 55898,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479417518
    },
    {
        "content": "<p>Does having a username of <code>user</code> cause problems for other software?</p>",
        "id": 55899,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479417667
    },
    {
        "content": "<p>It's definitely an interesting choice</p>",
        "id": 55900,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1479417673
    },
    {
        "content": "<p>That's interesting question. I never had any issue with other software with username <code>user</code>. Let me search around and see.</p>",
        "id": 56015,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479441774
    },
    {
        "content": "<p>So the workaround is to use login as <code>postgres</code> user and create the schema. Then do <code>./manage.py populate_db</code>. I have asked a question in <a href=\"https://stackoverflow.com/questions/40689568/can-postgres-role-name-be-user\" target=\"_blank\" title=\"https://stackoverflow.com/questions/40689568/can-postgres-role-name-be-user\">SO</a> about <code>user</code> role.</p>",
        "id": 56963,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479533766
    },
    {
        "content": "<p>That's silly of me using <code>create user \"user\"</code> creates a new user.</p>",
        "id": 56967,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479534042
    },
    {
        "content": "<p>Then <code>psql -d zulip</code> works.</p>",
        "id": 56968,
        "sender_full_name": "Kracekumar R",
        "timestamp": 1479534064
    }
]