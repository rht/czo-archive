[
    {
        "content": "<p>LDAP synchronization user failed Same configuration. Version 6.1 is synchronized normally. 6.0 is not available<br>\nthe is 6.0 Version</p>\n<div class=\"codehilite\"><pre><span></span><code>zulip@zulip6:/root$ /home/zulip/deployments/current/manage.py query_ldap fits04\n2023-03-03 08:08:37.001 DEBG [django_auth_ldap] Binding as admin\n2023-03-03 08:08:37.004 DEBG [django_auth_ldap] Invoking search_s(&#39;ou=userid,ou=vmware,dc=t-demo.com,dc=com&#39;, 2, &#39;(sAMAccountName=fits04)&#39;)\n2023-03-03 08:08:37.004 ERR  [django_auth_ldap] search_s(&#39;ou=userid,ou=vmware,dc=t-demo.com,dc=com&#39;, 2, &#39;(sAMAccountName=fits04)&#39;) raised REFERRAL({&#39;msgtype&#39;: 101, &#39;msgid&#39;: 2, &#39;result&#39;: 10, &#39;desc&#39;: &#39;Referral&#39;, &#39;ctrls&#39;: [], &#39;info&#39;: &#39;Referral:\\nldap://t-demo.com.com/ou=userid,ou=vmware,dc=t-demo.com,dc=com&#39;})\n2023-03-03 08:08:37.005 DEBG [django_auth_ldap] search_s(&#39;ou=userid,ou=vmware,dc=t-demo.com,dc=com&#39;, 2, &#39;(sAMAccountName=%(user)s)&#39;) returned 0 objects:\nNo such user found: No LDAP user matching django_to_ldap_username result: fits04. Input username: fits04\n</code></pre></div>\n<p>the is 6.1 Version</p>\n<div class=\"codehilite\"><pre><span></span><code>zulip@zulip:/root$ /home/zulip/deployments/current/manage.py query_ldap fits042023-03-03 08:12:41.421 DEBG [django_auth_ldap] Binding as admin\n2023-03-03 08:12:41.465 DEBG [django_auth_ldap] Invoking search_s(&#39;ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 2, &#39;(sAMAccountName=fits04)&#39;)\n2023-03-03 08:12:41.467 DEBG [django_auth_ldap] search_s(&#39;ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 2, &#39;(sAMAccountName=%(user)s)&#39;) returned 1 objects: cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com\n2023-03-03 08:12:41.467 DEBG [django_auth_ldap] Invoking search_s(&#39;cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 0, &#39;(objectClass=*)&#39;)\n2023-03-03 08:12:41.468 DEBG [django_auth_ldap] search_s(&#39;cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 0, &#39;(objectClass=*)&#39;) returned 1 objects: cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com\n2023-03-03 08:12:41.469 DEBG [django_auth_ldap] Binding as admin\n2023-03-03 08:12:41.471 DEBG [django_auth_ldap] Invoking search_s(&#39;ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 2, &#39;(sAMAccountName=fits04)&#39;)\n2023-03-03 08:12:41.472 DEBG [django_auth_ldap] search_s(&#39;ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 2, &#39;(sAMAccountName=%(user)s)&#39;) returned 1 objects: cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com\n2023-03-03 08:12:41.472 DEBG [django_auth_ldap] Invoking search_s(&#39;cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 0, &#39;(objectClass=*)&#39;)\n2023-03-03 08:12:41.473 DEBG [django_auth_ldap] search_s(&#39;cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com&#39;, 0, &#39;(objectClass=*)&#39;) returned 1 objects: cn=fits04,ou=userid,ou=vmware,dc=t-demo,dc=com\nfull_name: fits04\n</code></pre></div>",
        "id": 1517554,
        "sender_full_name": "TwoDogs2",
        "timestamp": 1677831183
    },
    {
        "content": "<p>the is 6.0 version configuration file</p>\n<div class=\"codehilite\"><pre><span></span><code>AUTHENTICATION_BACKENDS: Tuple[str, ...] = (\n    #&quot;zproject.backends.EmailAuthBackend&quot;,  # Email and password; just requires SMTP setup\n    # &quot;zproject.backends.GoogleAuthBackend&quot;,  # Google auth, setup below\n    # &quot;zproject.backends.GitHubAuthBackend&quot;,  # GitHub auth, setup below\n    # &quot;zproject.backends.GitLabAuthBackend&quot;,  # GitLab auth, setup below\n    # &quot;zproject.backends.AzureADAuthBackend&quot;,  # Microsoft Azure Active Directory auth, setup below\n    # &quot;zproject.backends.AppleAuthBackend&quot;,  # Apple auth, setup below\n    # &quot;zproject.backends.SAMLAuthBackend&quot;,  # SAML, setup below\n    &quot;zproject.backends.ZulipLDAPAuthBackend&quot;,  # LDAP, setup below\n    # &quot;zproject.backends.ZulipRemoteUserBackend&quot;,  # Local SSO, setup docs on readthedocs\n    # &quot;zproject.backends.GenericOpenIdConnectBackend&quot;,  # Generic OIDC integration, setup below\n)\n\n## LDAP integration.\n##\n## Zulip supports retrieving information about users via LDAP, and\n## optionally using LDAP as an authentication mechanism.\n\nimport ldap\nfrom django_auth_ldap.config import GroupOfNamesType, LDAPGroupQuery, LDAPSearch  # noqa: F401\n\nAUTH_LDAP_SERVER_URI = &quot;ldap://dc.t-demo.com:389&quot;\nAUTH_LDAP_USER_SEARCH = LDAPSearch(&quot;ou=userid,ou=vmware,dc=t-demo,dc=com&quot;,ldap.SCOPE_SUBTREE, &quot;(sAMAccountName=%(user)s)&quot;)\nAUTH_LDAP_REVERSE_EMAIL_SEARCH = LDAPSearch(&quot;ou=userid,ou=vmware,dc=t-demo.com,dc=com&quot;,ldap.SCOPE_SUBTREE, &quot;(mail=%(email)s)&quot;)\nAUTH_LDAP_USERNAME_ATTR = &quot;sAMAccountName&quot;\nAUTH_LDAP_BIND_DN = &quot;admin&quot;\n\n\n## Connecting to the LDAP server.\n## For more details and alternatives, see the documentation linked above.\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\n    &quot;ou=userid,ou=vmware,dc=t-demo.com,dc=com&quot;, ldap.SCOPE_SUBTREE, &quot;(sAMAccountName=%(user)s)&quot;\n)\n\n## Configuration to look up a user&#39;s LDAP data given their email address\n## (for Zulip reverse mapping).  If users log in as e.g. &quot;sam&quot; when\n## their email address is &quot;sam@example.com&quot;, set LDAP_APPEND_DOMAIN to\n## &quot;example.com&quot;.  Otherwise, leave LDAP_APPEND_DOMAIN=None and set\n## AUTH_LDAP_REVERSE_EMAIL_SEARCH and AUTH_LDAP_USERNAME_ATTR below.\n# LDAP_APPEND_DOMAIN = None\nLDAP_APPEND_DOMAIN = &quot;t-demo.com&quot;\n## LDAP attribute to find a user&#39;s email address.\n</code></pre></div>",
        "id": 1517556,
        "sender_full_name": "TwoDogs2",
        "timestamp": 1677831326
    },
    {
        "content": "<p>the is 6.1 version configuration file</p>\n<div class=\"codehilite\"><pre><span></span><code>148 AUTHENTICATION_BACKENDS: Tuple[str, ...] = (\n149     &quot;zproject.backends.EmailAuthBackend&quot;,  # Email and password; just requires SMTP setup\n150     # &quot;zproject.backends.GoogleAuthBackend&quot;,  # Google auth, setup below\n151     # &quot;zproject.backends.GitHubAuthBackend&quot;,  # GitHub auth, setup below\n152     # &quot;zproject.backends.GitLabAuthBackend&quot;,  # GitLab auth, setup below\n153     # &quot;zproject.backends.AzureADAuthBackend&quot;,  # Microsoft Azure Active Directory auth, setup below\n154     # &quot;zproject.backends.AppleAuthBackend&quot;,  # Apple auth, setup below\n155     # &quot;zproject.backends.SAMLAuthBackend&quot;,  # SAML, setup below\n156     &quot;zproject.backends.ZulipLDAPAuthBackend&quot;,  # LDAP, setup below\n157     # &quot;zproject.backends.ZulipRemoteUserBackend&quot;,  # Local SSO, setup docs on readthedocs\n158     # &quot;zproject.backends.GenericOpenIdConnectBackend&quot;,  # Generic OIDC integration, setup below\n159 )\n160\n161 ## LDAP integration.\n162 ##\n163 ## Zulip supports retrieving information about users via LDAP, and\n164 ## optionally using LDAP as an authentication mechanism.\n165\n166 import ldap\n167 from django_auth_ldap.config import GroupOfNamesType, LDAPGroupQuery, LDAPSearch  # noqa: F401\n168\n169 ## Connecting to the LDAP server.\n170 ##\n171 ## For detailed instructions, see the Zulip documentation:\n172 ##   https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#ldap\n173\n174 ## The LDAP server to connect to.  Setting this enables Zulip\n175 ## automatically fetching each new user&#39;s name from LDAP.\n176 # AUTH_LDAP_SERVER_URI = &quot;ldaps://ldap.example.com&quot;\n177 AUTH_LDAP_SERVER_URI = &quot;ldap://dc.t-demo.com:389&quot;\n178 AUTH_LDAP_USER_SEARCH = LDAPSearch(&quot;ou=userid,ou=vmware,dc=t-demo,dc=com&quot;,ldap.SCOPE_SUBTREE, &quot;(sAMAccountName=%(user)s)&quot;)\n179 AUTH_LDAP_REVERSE_EMAIL_SEARCH = LDAPSearch(&quot;ou=userid,ou=vmware,dc=t-demo.com,dc=com&quot;,ldap.SCOPE_SUBTREE, &quot;(mail=%(email)s)&quot;)\n180 AUTH_LDAP_USERNAME_ATTR = &quot;sAMAccountName&quot;\n181 #AUTH_LDAP_USERNAME_ATTR = &quot;mail&quot;\n182 AUTH_LDAP_BIND_DN = &quot;admin&quot;\n183 # AUTH_LDAP_BIND_PASSWORD = &quot;1qaz@WSX&quot;\n184 ## The DN of the user to bind as (i.e., authenticate as) in order to\n185 ## query LDAP.  If unset, Zulip does an anonymous bind.\n186 # AUTH_LDAP_BIND_DN = &quot;&quot;\n187\n188 ## Passwords and secrets are not stored in this file.  The password\n189 ## corresponding to AUTH_LDAP_BIND_DN goes in `/etc/zulip/zulip-secrets.conf`.\n190 ## In that file, set `auth_ldap_bind_password`.  For example:\n191 # auth_ldap_bind_password = abcd1234\n192\n193 ## Mapping user info from LDAP to Zulip.\n194 ##\n195 ## For detailed instructions, see the Zulip documentation:\n196 ##   https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#ldap\n197\n198 ## The LDAP search query to find a given user.\n199 ##\n200 ## The arguments to `LDAPSearch` are (base DN, scope, filter).  In the\n201 ## filter, the string `%(user)s` is a Python placeholder.  The Zulip\n202 ## server will replace this with the user&#39;s Zulip username, i.e. the\n203 ## name they type into the Zulip login form.\n204 ##\n205 ## For more details and alternatives, see the documentation linked above.\n206 AUTH_LDAP_USER_SEARCH = LDAPSearch(\n207     &quot;ou=userid,ou=vmware,dc=t-demo,dc=com&quot;, ldap.SCOPE_SUBTREE, &quot;(sAMAccountName=%(user)s)&quot;\n208 )\n209\n210 ## Configuration to look up a user&#39;s LDAP data given their email address\n211 ## (for Zulip reverse mapping).  If users log in as e.g. &quot;sam&quot; when\n212 ## their email address is &quot;sam@example.com&quot;, set LDAP_APPEND_DOMAIN to\n213 ## &quot;example.com&quot;.  Otherwise, leave LDAP_APPEND_DOMAIN=None and set\n214 ## AUTH_LDAP_REVERSE_EMAIL_SEARCH and AUTH_LDAP_USERNAME_ATTR below.\n215 # LDAP_APPEND_DOMAIN = None\n216 LDAP_APPEND_DOMAIN = &quot;t-demo.com&quot;\n</code></pre></div>",
        "id": 1517559,
        "sender_full_name": "TwoDogs2",
        "timestamp": 1677831440
    },
    {
        "content": "<p>The password has been placed in<code>/etc/zulip/zulip-secrets.conf</code></p>",
        "id": 1517560,
        "sender_full_name": "TwoDogs2",
        "timestamp": 1677831565
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"25948\">TwoDogs2</span> has marked this topic as resolved.</p>",
        "id": 1517567,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677833185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"25948\">@TwoDogs2</span>: What was the issue?</p>",
        "id": 1517686,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1677854343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"12178\">@Alex Vandiver</span> I'm not sure if it's a problem with the version. My configuration file contains dc=t-demo.com, dc=com, but version 6.1 will automatically correct this error when synchronizing users. 6.0 won't, so there is no problem with the same configuration version 6.1, but 6.0 will report an error</p>",
        "id": 1518498,
        "sender_full_name": "TwoDogs2",
        "timestamp": 1677945190
    }
]