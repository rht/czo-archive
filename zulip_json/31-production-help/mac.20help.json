[
    {
        "content": "<p>After running <code>vagrant up</code> I get the following response.</p>\n<blockquote>\n<p>Bringing machine 'default' up with 'virtualbox' provider...<br>\n==&gt; default: Checking if box 'ubuntu/trusty64' is up to date...<br>\n==&gt; default: Configuring proxy for Apt...<br>\n==&gt; default: Configuring proxy environment variables...<br>\n==&gt; default: Configuring proxy for npm...<br>\n==&gt; default: Machine already provisioned. Run <code>vagrant provision</code> or use the <code>--provision</code><br>\n==&gt; default: flag to force provisioning. Provisioners marked to run always will still run.</p>\n</blockquote>",
        "id": 118912,
        "sender_full_name": "Ayush Goyal",
        "timestamp": 1483802940
    },
    {
        "content": "<p>seems like it ran fine?</p>",
        "id": 118913,
        "sender_full_name": "Fahri Cihan Demirci",
        "timestamp": 1483802990
    },
    {
        "content": "<p>Running <code>vagrant provision</code> results in following error. <br>\n<code>tunneling socket could not be established, cause=write EPROTO 140091649488768:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:794:</code><br>\nCan anyone please help</p>",
        "id": 118914,
        "sender_full_name": "Ayush Goyal",
        "timestamp": 1483803017
    },
    {
        "content": "<p>Woah, I've never seen that error before.  Would google for it</p>",
        "id": 118960,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1483812984
    },
    {
        "content": "<p><a href=\"https://github.com/jspm/github/issues/59\" target=\"_blank\" title=\"https://github.com/jspm/github/issues/59\">https://github.com/jspm/github/issues/59</a> is maybe relevant</p>",
        "id": 118964,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1483813018
    },
    {
        "content": "<p>Sounds like the problem is your proxy configuration is wrong</p>",
        "id": 118965,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1483813026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"tabbott@zulipchat.com\">@Tim Abbott</span> : I had to add <code>sudo</code> to all the pip command in <code>/srv/zulip/scripts/lib/setup_venv.py</code> in order to make provision.py work. Should I send a PR with the changes so that no one else faces the problem in future ?</p>",
        "id": 122986,
        "sender_full_name": "Ayush Goyal",
        "timestamp": 1484115252
    },
    {
        "content": "<p>No -- those commands shouldn't need root access</p>",
        "id": 122987,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1484115307
    },
    {
        "content": "<p>Something is wrong in the setup code earlier, probably</p>",
        "id": 122988,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1484115316
    },
    {
        "content": "<p>(We also use that code path in production where <code>sudo</code> may not be available, so it's important not to add new sudo usage there)</p>",
        "id": 122989,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1484115331
    },
    {
        "content": "<p>Ok </p>",
        "id": 122990,
        "sender_full_name": "Ayush Goyal",
        "timestamp": 1484115358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"tabbott@zulipchat.com\">@Tim Abbott</span> I am curious if some of our GCI folks who had strange setup issues may have run <code>sudo</code> at one point.  Does it make sense to ensure that we're <strong>not</strong> running with sudo privileges as an early step in the provision code?</p>",
        "id": 123171,
        "sender_full_name": "Steve Howell",
        "timestamp": 1484143915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"showell30@yahoo.com\">@Steve Howell</span> oh, yeah, that's a good point.  Yes, I think that would be a useful check.  I think we have code for it in <code>manage.py</code> that we can borrow</p>",
        "id": 123761,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1484158283
    }
]