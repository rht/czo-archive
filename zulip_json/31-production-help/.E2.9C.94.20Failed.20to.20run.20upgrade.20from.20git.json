[
    {
        "content": "<p>Hi, tried to run github update today, all went fine up to: </p>\n<div class=\"codehilite\"><pre><span></span><code>Applying zerver.0401_migrate_old_realm_reactivation_links...Traceback (most recent call last):\n  File &quot;./manage.py&quot;, line 151, in &lt;module&gt;\n    execute_from_command_line(sys.argv)\n  File &quot;./manage.py&quot;, line 116, in execute_from_command_line\n    utility.execute()\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/__init__.py&quot;, line 440, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/base.py&quot;, line 414, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/base.py&quot;, line 460, in execute\n    output = self.handle(*args, **options)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/base.py&quot;, line 98, in wrapped\n    res = handle_func(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/core/management/commands/migrate.py&quot;, line 290, in handle\n    post_migrate_state = executor.migrate(\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/migrations/executor.py&quot;, line 131, in migrate\n    state = self._migrate_all_forwards(\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/migrations/executor.py&quot;, line 163, in _migrate_all_forwards\n    state = self.apply_migration(\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/migrations/executor.py&quot;, line 248, in apply_migration\n    state = migration.apply(state, schema_editor)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/migrations/migration.py&quot;, line 131, in apply\n    operation.database_forwards(\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/migrations/operations/special.py&quot;, line 193, in database_forwards\n    self.code(from_state.apps, schema_editor)\n  File &quot;/home/zulip/deployments/2022-07-28-12-39-59/zerver/migrations/0401_migrate_old_realm_reactivation_links.py&quot;, line 35, in fix_old_realm_reactivation_confirmations\n    realm_reactivation_status_content_type = ContentType.objects.get(\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/models/manager.py&quot;, line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/db87ef6dd3d5c1514bbfb2e87ebb13abe4673d2c/zulip-py3-venv/lib/python3.8/site-packages/django/db/models/query.py&quot;, line 496, in get\n    raise self.model.DoesNotExist(\n__fake__.DoesNotExist: ContentType matching query does not exist.\nSentry is attempting to send 2 pending error messages\nWaiting up to 10 seconds\nPress Ctrl-C to quit\n2022-07-28 12:50:33.564 WARN [urllib3.connectionpool] Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by &#39;NewConnectionError(&#39;&lt;urllib3.connection.HTTPSConnection object at 0x7f18e6d03730&gt;: Failed to establish a new connection: [Errno 113] No route to host&#39;)&#39;: /api/4/store/\n2022-07-28 12:50:36.635 WARN [urllib3.connectionpool] Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by &#39;NewConnectionError(&#39;&lt;urllib3.connection.HTTPSConnection object at 0x7f18e6aec4f0&gt;: Failed to establish a new connection: [Errno 113] No route to host&#39;)&#39;: /api/4/store/\n2022-07-28 12:50:39.708 WARN [urllib3.connectionpool] Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by &#39;NewConnectionError(&#39;&lt;urllib3.connection.HTTPSConnection object at 0x7f18e6d03dc0&gt;: Failed to establish a new connection: [Errno 113] No route to host&#39;)&#39;: /api/4/store/\nTraceback (most recent call last):\n  File &quot;/home/zulip/deployments/2022-07-28-12-39-59/scripts/lib/upgrade-zulip-stage-2&quot;, line 454, in &lt;module&gt;\n    subprocess.check_call(\n  File &quot;/usr/lib/python3.8/subprocess.py&quot;, line 364, in check_call\n    raise CalledProcessError(retcode, cmd)\nsubprocess.CalledProcessError: Command &#39;[&#39;./manage.py&#39;, &#39;migrate&#39;, &#39;--noinput&#39;, &#39;--skip-checks&#39;]&#39; returned non-zero exit status 1.\n\nZulip upgrade failed (exit code 1)!\n\nThe upgrade process is designed to be idempotent, so you can retry after resolving whatever issue caused the failure (there should be a traceback above). A log of this installation is available in /var/log/zulip/upgrade.log\n</code></pre></div>",
        "id": 1411990,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659012724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> Ah, thanks for reporting, that should be an easy fix. Could you check in <code>manage.py shell</code> the output of these?</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import Confirmation\nConfirmation.objects.filter(type=Confirmation.REALM_REACTIVATION)\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import ContentType\nContentType.objects.filter(app_label=&quot;zerver&quot;).values(&quot;id&quot;,  &quot;model&quot;)\n</code></pre></div>\n<p>That'll help verify if my idea for fixing this is right</p>",
        "id": 1411997,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659016244
    },
    {
        "content": "<p>Sure let me give it a go, meanwhile I restored a older backup, should I try to run the above mentioned ?</p>",
        "id": 1411998,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659016381
    },
    {
        "content": "<p>Yup, sure! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 1412000,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659016615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"10349\">Mateusz Mandera</span> <a href=\"#narrow/stream/31-production-help/topic/Failed.20to.20run.20upgrade.20from.20git/near/1411997\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"20576\">Cosmic Sound</span> Ah, thanks for reporting, that should be an easy fix. Could you check in <code>manage.py shell</code> the output of these?</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import Confirmation\nConfirmation.objects.filter(type=Confirmation.REALM_REACTIVATION)\n\nIn [1]: from confirmation.models import Confirmation\n\nIn [2]: Confirmation.objects.filter(type=Confirmation.REALM_REACTIVATION)\nOut[2]: &lt;QuerySet []&gt;\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import ContentType\nContentType.objects.filter(app_label=&quot;zerver&quot;).values(&quot;id&quot;,  &quot;model&quot;)\n\nIn [3]: from confirmation.models import ContentType\n   ...: ContentType.objects.filter(app_label=&quot;zerver&quot;).values(&quot;id&quot;,  &quot;model&quot;)\n   ...:\nOut[3]: &lt;QuerySet [{&#39;id&#39;: 7, &#39;model&#39;: &#39;userprofile&#39;}, {&#39;id&#39;: 8, &#39;model&#39;: &#39;client&#39;}, {&#39;id&#39;: 9, &#39;model&#39;: &#39;defaultstream&#39;}, {&#39;id&#39;: 10, &#39;model&#39;: &#39;huddle&#39;}, {&#39;id&#39;: 11, &#39;model&#39;: &#39;message&#39;}, {&#39;id&#39;: 12, &#39;model&#39;: &#39;preregistrationuser&#39;}, {&#39;id&#39;: 13, &#39;model&#39;: &#39;pushdevicetoken&#39;}, {&#39;id&#39;: 14, &#39;model&#39;: &#39;realm&#39;}, {&#39;id&#39;: 15, &#39;model&#39;: &#39;realmemoji&#39;}, {&#39;id&#39;: 16, &#39;model&#39;: &#39;realmfilter&#39;}, {&#39;id&#39;: 17, &#39;model&#39;: &#39;recipient&#39;}, {&#39;id&#39;: 18, &#39;model&#39;: &#39;stream&#39;}, {&#39;id&#39;: 19, &#39;model&#39;: &#39;subscription&#39;}, {&#39;id&#39;: 20, &#39;model&#39;: &#39;useractivity&#39;}, {&#39;id&#39;: 21, &#39;model&#39;: &#39;useractivityinterval&#39;}, {&#39;id&#39;: 22, &#39;model&#39;: &#39;usermessage&#39;}, {&#39;id&#39;: 23, &#39;model&#39;: &#39;userpresence&#39;}, {&#39;id&#39;: 24, &#39;model&#39;: &#39;attachment&#39;}, {&#39;id&#39;: 25, &#39;model&#39;: &#39;reaction&#39;}, {&#39;id&#39;: 26, &#39;model&#39;: &#39;emailchangestatus&#39;}, &#39;...(remaining elements truncated)...&#39;]&gt;\n</code></pre></div>\n<p>That'll help verify if my idea for fixing this is right</p>\n</blockquote>",
        "id": 1412004,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659016964
    },
    {
        "content": "<p>Thats what I get</p>",
        "id": 1412008,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659017061
    },
    {
        "content": "<p>Okay, thanks! Hmm, I'm actually quite confused because I just tried upgrading on a similar production server with empty <code> Confirmation.objects.filter(type=Confirmation.REALM_REACTIVATION)</code>, where I expected to reproduce the bug you ran into, but the migration actually succeeds. Not sure why the <code>ContentType</code> is missing in your case <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>  But  the solution to fix the migration is clear anyway, so I'll open a PR - and this mystery can be solved later perhaps</p>",
        "id": 1412013,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659017660
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/zulip/zulip/pull/22610\">#22610</a></p>",
        "id": 1412016,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659018326
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span></p>",
        "id": 1412032,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659020261
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> that PR is merged.</p>",
        "id": 1412208,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1659031611
    },
    {
        "content": "<p>I'm pretty sure the <code>ContentType</code> will only exist if an actual object has been created in it -- I'm pretty sure there's no migration to create <code>ContentType</code> objects when adding new confirmation types.</p>",
        "id": 1412210,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1659031669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> will give it a try again later on</p>",
        "id": 1412227,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659032112
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/Failed.20to.20run.20upgrade.20from.20git/near/1412210\">said</a>:</p>\n<blockquote>\n<p>I'm pretty sure the <code>ContentType</code> will only exist if an actual object has been created in it -- I'm pretty sure there's no migration to create <code>ContentType</code> objects when adding new confirmation types.</p>\n</blockquote>\n<p>I'll re-post my comment from the PR here, since it's closed now:</p>\n<blockquote>\n<p>That was my theory, but then I upgraded my server without  such objects (like the user in the thread) and the migration succeeded anyway - and the <code>ContentType</code> does exist:</p>\n<div class=\"codehilite\"><pre><span></span><code>In [8]: ContentType.objects.get(\n   ...:         model=&quot;realmreactivationstatus&quot;, app_label=&quot;zerver&quot;\n   ...:     )\nOut[8]: &lt;ContentType: zerver | realm reactivation status&gt;\n\nIn [9]: Confirmation.objects.exists()\nOut[9]: False\n\nIn [10]: RealmReactivationStatus.objects.exists()\nOut[10]: False\n</code></pre></div>\n<p>so why it's different between my server vs the user's is a mystery to me</p>\n</blockquote>",
        "id": 1412293,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659036328
    },
    {
        "content": "<p>Perhaps checking <code>ContentType</code> status and testing creating of a realm reactivation link on <span class=\"user-mention silent\" data-user-id=\"20576\">Cosmic Sound</span>'s server post-upgrade would reveal some hints</p>",
        "id": 1412295,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659036419
    },
    {
        "content": "<p>Should I try an upgrade now again?</p>",
        "id": 1413868,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659381282
    },
    {
        "content": "<p>Yep!</p>",
        "id": 1413869,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1659381293
    },
    {
        "content": "<p>Done!<br>\nWorked like a charm!</p>",
        "id": 1413900,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659384144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"20576\">Cosmic Sound</span> has marked this topic as resolved.</p>",
        "id": 1413902,
        "sender_full_name": "Notification Bot",
        "timestamp": 1659384151
    },
    {
        "content": "<p>Great!</p>\n<p><span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> Would you be up for helping with a bit of debugging by running some more stuff in <code>manage.py shell</code>, so that maybe we can manage to figure out what was up with the <code>ContentType</code> object missing error during the upgrade? (and whether it's set up correctly now)</p>",
        "id": 1414246,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659468604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> would it still work after upgrade was done? In that case tell me what to run to help debug this more.</p>",
        "id": 1414479,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659528081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> Yup, checking the post-upgrade situation is exactly what we need <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> We could start by checking if 1. The ContentType has been created now and if 2. Creation of a realm reactivation link works by running in <code>manage.py shell</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import ContentType, Confirmation, create_confirmation_link\n\nContentType.objects.filter(\n    model=&quot;realmreactivationstatus&quot;, app_label=&quot;zerver&quot;\n).exists()\n\nrealm = get_realm(&quot;yoursubdomain&quot;)  # use empty string &quot;&quot; if the realm is on the root domain\nobj = RealmReactivationStatus.objects.create(realm=realm)\n\ncreate_confirmation_link(obj, Confirmation.REALM_REACTIVATION)\n</code></pre></div>\n<p>Perhaps don't click the link (and censor it when posting the output here) - although clicking it shouldn't do anything problematic.</p>",
        "id": 1414551,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659545091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"10349\">Mateusz Mandera</span> <a href=\"#narrow/stream/31-production-help/topic/.E2.9C.94.20Failed.20to.20run.20upgrade.20from.20git/near/1414551\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"20576\">Cosmic Sound</span> Yup, checking the post-upgrade situation is exactly what we need <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> We could start by checking if 1. The ContentType has been created now and if 2. Creation of a realm reactivation link works by running in <code>manage.py shell</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation.models import ContentType, Confirmation, create_confirmation_link\n\nContentType.objects.filter(\n    model=&quot;realmreactivationstatus&quot;, app_label=&quot;zerver&quot;\n).exists()\n\nrealm = get_realm(&quot;yoursubdomain&quot;)  # use empty string &quot;&quot; if the realm is on the root domain\nobj = RealmReactivationStatus.objects.create(realm=realm)\n\ncreate_confirmation_link(obj, Confirmation.REALM_REACTIVATION)\n</code></pre></div>\n<p>Perhaps don't click the link (and censor it when posting the output here) - although clicking it shouldn't do anything problematic.</p>\n</blockquote>\n<p>We got </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">Input</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">cell</span> <span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n      <span class=\"mi\">1</span> <span class=\"kn\">from</span> <span class=\"nn\">confirmation.models</span> <span class=\"kn\">import</span> <span class=\"n\">ContentType</span><span class=\"p\">,</span> <span class=\"n\">Confirmation</span><span class=\"p\">,</span> <span class=\"n\">create_confirmation_link</span>\n      <span class=\"mi\">3</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n      <span class=\"mi\">4</span>     <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">\"realmreactivationstatus\"</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"o\">=</span><span class=\"s2\">\"zerver\"</span>\n      <span class=\"mi\">5</span> <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">7</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">get_realm</span><span class=\"p\">(</span><span class=\"s2\">\"yoursubdomain\"</span><span class=\"p\">)</span>  <span class=\"c1\"># use empty string \"\" if the realm is on the root domain</span>\n      <span class=\"mi\">8</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">RealmReactivationStatus</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">realm</span><span class=\"o\">=</span><span class=\"n\">realm</span><span class=\"p\">)</span>\n     <span class=\"mi\">10</span> <span class=\"n\">create_confirmation_link</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">Confirmation</span><span class=\"o\">.</span><span class=\"n\">REALM_REACTIVATION</span><span class=\"p\">)</span>\n\n<span class=\"n\">File</span> <span class=\"o\">~/</span><span class=\"n\">deployments</span><span class=\"o\">/</span><span class=\"mi\">2022</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"o\">-</span><span class=\"mi\">55</span><span class=\"o\">-</span><span class=\"mi\">31</span><span class=\"o\">/</span><span class=\"n\">zerver</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">1008</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_realm</span><span class=\"p\">(</span><span class=\"n\">string_id</span><span class=\"p\">)</span>\n   <span class=\"mi\">1007</span> <span class=\"k\">def</span> <span class=\"nf\">get_realm</span><span class=\"p\">(</span><span class=\"n\">string_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Realm</span><span class=\"p\">:</span>\n<span class=\"o\">-&gt;</span> <span class=\"mi\">1008</span>     <span class=\"k\">return</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">string_id</span><span class=\"o\">=</span><span class=\"n\">string_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">File</span> <span class=\"o\">/</span><span class=\"n\">srv</span><span class=\"o\">/</span><span class=\"n\">zulip</span><span class=\"o\">-</span><span class=\"n\">venv</span><span class=\"o\">-</span><span class=\"n\">cache</span><span class=\"o\">/</span><span class=\"n\">b9b6b1e1f9bff55507160d19f5d4e646428ecb02</span><span class=\"o\">/</span><span class=\"n\">zulip</span><span class=\"o\">-</span><span class=\"n\">py3</span><span class=\"o\">-</span><span class=\"n\">venv</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python3</span><span class=\"mf\">.8</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">django</span><span class=\"o\">/</span><span class=\"n\">db</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">/</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">BaseManager</span><span class=\"o\">.</span><span class=\"n\">_get_queryset_methods</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">create_method</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">manager_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n     <span class=\"mi\">84</span> <span class=\"k\">def</span> <span class=\"nf\">manager_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">85</span>     <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"p\">)(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"n\">File</span> <span class=\"o\">/</span><span class=\"n\">srv</span><span class=\"o\">/</span><span class=\"n\">zulip</span><span class=\"o\">-</span><span class=\"n\">venv</span><span class=\"o\">-</span><span class=\"n\">cache</span><span class=\"o\">/</span><span class=\"n\">b9b6b1e1f9bff55507160d19f5d4e646428ecb02</span><span class=\"o\">/</span><span class=\"n\">zulip</span><span class=\"o\">-</span><span class=\"n\">py3</span><span class=\"o\">-</span><span class=\"n\">venv</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python3</span><span class=\"mf\">.8</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">django</span><span class=\"o\">/</span><span class=\"n\">db</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">/</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">496</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">QuerySet</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"mi\">494</span>     <span class=\"k\">return</span> <span class=\"n\">clone</span><span class=\"o\">.</span><span class=\"n\">_result_cache</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"mi\">495</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">num</span><span class=\"p\">:</span>\n<span class=\"o\">--&gt;</span> <span class=\"mi\">496</span>     <span class=\"k\">raise</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">DoesNotExist</span><span class=\"p\">(</span>\n    <span class=\"mi\">497</span>         <span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> matching query does not exist.\"</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">object_name</span>\n    <span class=\"mi\">498</span>     <span class=\"p\">)</span>\n    <span class=\"mi\">499</span> <span class=\"k\">raise</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">MultipleObjectsReturned</span><span class=\"p\">(</span>\n    <span class=\"mi\">500</span>     <span class=\"s2\">\"get() returned more than one </span><span class=\"si\">%s</span><span class=\"s2\"> -- it returned </span><span class=\"si\">%s</span><span class=\"s2\">!\"</span>\n    <span class=\"mi\">501</span>     <span class=\"o\">%</span> <span class=\"p\">(</span>\n   <span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"mi\">504</span>     <span class=\"p\">)</span>\n    <span class=\"mi\">505</span> <span class=\"p\">)</span>\n\n<span class=\"n\">DoesNotExist</span><span class=\"p\">:</span> <span class=\"n\">Realm</span> <span class=\"n\">matching</span> <span class=\"n\">query</span> <span class=\"n\">does</span> <span class=\"ow\">not</span> <span class=\"n\">exist</span><span class=\"o\">.</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span>\n</code></pre></div>",
        "id": 1415080,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659624014
    },
    {
        "content": "<p>Oh, sorry <span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> I didn't explain - in that <code>get_realm(\"yoursubdomain\")</code> line you have to put in the correct values instead of <code>yoursubdomain</code>. If you don't have a multi-realm set up i assume it's just the empty string <code>\"\"</code>. You can confirm by checking <code>manage.py list_realm</code> (the subdomain is the same as <code>string_id</code> value)</p>",
        "id": 1415185,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659637033
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"10349\">Mateusz Mandera</span> <a href=\"#narrow/stream/31-production-help/topic/.E2.9C.94.20Failed.20to.20run.20upgrade.20from.20git/near/1415185\">said</a>:</p>\n<blockquote>\n<p>Oh, sorry <span class=\"user-mention silent\" data-user-id=\"20576\">Cosmic Sound</span> I didn't explain - in that <code>get_realm(\"yoursubdomain\")</code> line you have to put in the correct values instead of <code>yoursubdomain</code>. If you don't have a multi-realm set up i assume it's just the empty string <code>\"\"</code>. You can confirm by checking <code>manage.py list_realm</code> (the subdomain is the same as <code>string_id</code> value)</p>\n</blockquote>\n<p>I got this</p>\n<div class=\"codehilite\"><pre><span></span><code>root@chat:/home/ubuntu# su zulip -c &#39;/home/zulip/deployments/current/manage.py list_realms&#39;\nSystem check identified some issues:\n\nWARNINGS:\n?: (staticfiles.W004) The directory &#39;static/&#39; in the STATICFILES_DIRS setting does not exist.\nid    string_id            name                           domain\n--    ---------            ----                           ------\n4     &#39;&#39;                   UHL Concierge Services         https://chat.uhlhosting.ch\n1     zulipinternal        System bot realm               https://zulipinternal.chat.uhlhosting.ch\nroot@chat:/home/ubuntu#\n</code></pre></div>",
        "id": 1415556,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659692732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> this is what we look for I suppose: </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">Successfully</span> <span class=\"n\">imported</span> <span class=\"n\">Zulip</span> <span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"ow\">and</span> <span class=\"n\">actions</span> <span class=\"n\">functions</span><span class=\"o\">.</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">confirmation.models</span> <span class=\"kn\">import</span> <span class=\"n\">ContentType</span><span class=\"p\">,</span> <span class=\"n\">Confirmation</span><span class=\"p\">,</span> <span class=\"n\">create_confirmation_link</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">\"realmreactivationstatus\"</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"o\">=</span><span class=\"s2\">\"zerver\"</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">get_realm</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>  <span class=\"c1\"># use empty string \"\" if the realm is on the root domain</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">RealmReactivationStatus</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">realm</span><span class=\"o\">=</span><span class=\"n\">realm</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">create_confirmation_link</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">Confirmation</span><span class=\"o\">.</span><span class=\"n\">REALM_REACTIVATION</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"s1\">'https://chat.uhlhosting.ch/reactivate/ndhttxpxir3oeiovtnm7alsz'</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n</code></pre></div>",
        "id": 1415557,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659692835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"20576\">@Cosmic Sound</span> Okay, so everything looks to be working right! So the <code>ContentType</code>  has been created at some point <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 1415564,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659695926
    },
    {
        "content": "<p>I'd suggest deleting the reactivation link with</p>\n<div class=\"codehilite\"><pre><span></span><code>from confirmation,models import Confirmation\nc = Confirmation.objects.get(confirmation_key=&quot;ndhttxpxir3oeiovtnm7alsz&quot;)\nobj = c.content_object\nc.delete()\nobj.delete()\n</code></pre></div>",
        "id": 1415565,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659696008
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">confirmation.models</span> <span class=\"kn\">import</span> <span class=\"n\">Confirmation</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Confirmation</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">confirmation_key</span><span class=\"o\">=</span><span class=\"s2\">\"ndhttxpxir3oeiovtnm7alsz\"</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">content_object</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'zerver.RealmReactivationStatus'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n</code></pre></div>",
        "id": 1415566,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659696302
    },
    {
        "content": "<p>Guess thats a success.</p>",
        "id": 1415567,
        "sender_full_name": "Cosmic Sound",
        "timestamp": 1659696309
    },
    {
        "content": "<p>Yup, looks good. Thanks for checking this!</p>",
        "id": 1415581,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1659702971
    }
]