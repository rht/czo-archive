[
    {
        "content": "<p>We upgraded the server today like we regularly do, by downloading and installing <a href=\"https://www.zulip.org/dist/releases/zulip-server-latest.tar.gz\">https://www.zulip.org/dist/releases/zulip-server-latest.tar.gz</a><br>\nMuch to our surprise, that gave us 5.0rc1. Is that expected??</p>\n<p>Anyway, so we are on 5.0rc1 now, and we are seeing sudden delivery failures for some users for what I guess are notification emails sent to end users. They look like this:</p>\n<div class=\"codehilite\" data-code-language=\"logger\"><pre><span></span><code>Error generated by Anonymous user (not logged in) on zulip deployment\n\nTraceback (most recent call last):\n  File \"/home/zulip/deployments/2022-03-16-14-18-05/zerver/lib/send_email.py\", line 274, in send_email\n    if connection.send_messages([mail]) == 0:\n  File \"/home/zulip/deployments/2022-03-16-14-18-05/zulip-py3-venv/lib/python3.7/site-packages/django/core/mail/backends/smtp.py\", line 109, in send_messages\n    sent = self._send(message)\n  File \"/home/zulip/deployments/2022-03-16-14-18-05/zulip-py3-venv/lib/python3.7/site-packages/django/core/mail/backends/smtp.py\", line 125, in _send\n    self.connection.sendmail(from_email, recipients, message.as_bytes(linesep='\\r\\n'))\n  File \"/usr/lib/python3.7/smtplib.py\", line 881, in sendmail\n    raise SMTPRecipientsRefused(senderrs)\nsmtplib.SMTPRecipientsRefused: {'first last &lt;last@company.com&gt;': (550, b'5.1.1 &lt;last@company.com&gt;: Recipient address rejected: User unknown in virtual mailbox table')}\n\n\nDeployed code:\n- git: None\n- ZULIP_VERSION: 5.0-rc1```\n</code></pre></div>",
        "id": 1346299,
        "sender_full_name": "mouk",
        "timestamp": 1647456806
    },
    {
        "content": "<p>We're certainly comfortable with folks upgrading to 5.0-rc1 at this point; we expect minimal changes between now and 5.0 final.</p>",
        "id": 1346300,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647456873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"16223\">@mouk</span> that error message is not familiar.</p>",
        "id": 1346301,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647456939
    },
    {
        "content": "<p>The error message expresses that your outgoing email server is rejecting the email -- so I'd check logs on your mail server.</p>",
        "id": 1346302,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647456957
    },
    {
        "content": "<p>We do have some changes in this code path in 5.0, namely using a reusable connection to the SMTP server rather than creating a new one for each outgoing email, but I don't see a reason why that would cause an issue of that form.</p>",
        "id": 1346304,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647456995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1346302\">said</a>:</p>\n<blockquote>\n<p>The error message expresses that your outgoing email server is rejecting the email -- so I'd check logs on your mail server.</p>\n</blockquote>\n<p>The accounts that zulip tries to send email to, are deactivated in AD. But zulip is supposed to catch that, right..? (we have always had userAccountControl in settings.py activated)</p>",
        "id": 1346314,
        "sender_full_name": "mouk",
        "timestamp": 1647457198
    },
    {
        "content": "<p>I'm a little surprised, personally, that we're pushing an rc to <code>latest</code>.  I mean, if we're not pushing it to <code>latest</code> in <a class=\"stream-topic\" data-stream-id=\"31\" href=\"/#narrow/stream/31-production-help/topic/Docker.20container.20for.205.2E0-rc1.3F\">#production help &gt; Docker container for 5.0-rc1?</a>, it's not clear why we are for the tarball.</p>\n<p>But I also wrote the upload tool, and IIRC it doesn't have a \"don't push to latest\" flag, so perhaps this is my fault. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 1346317,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1647457246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"16223\">@mouk</span>: Are they deactivated in Zulip?</p>",
        "id": 1346318,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1647457260
    },
    {
        "content": "<p>We did have some change in the codepath that controls what users get sent email, so that's where I'd suspect the culprit</p>",
        "id": 1346320,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1647457293
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"12178\">Alex Vandiver</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1346318\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"16223\">mouk</span>: Are they deactivated in Zulip?</p>\n</blockquote>\n<p>I manually deactivated them after discovering the delivery failures. so they were NOT automatically deactivated, no. Not sure when these accounts were deactivated in AD, and how often zulip checks for deactivated AD accounts.</p>",
        "id": 1346324,
        "sender_full_name": "mouk",
        "timestamp": 1647457411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"16223\">@mouk</span> is it possible you haven't configured <a href=\"https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#automatically-deactivating-users\">https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#automatically-deactivating-users</a>?</p>",
        "id": 1346366,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647458881
    },
    {
        "content": "<p>On the question of whether <code>latest</code> should have <code>5.0-rc1</code>, I'm not sure what the best policy should be. I'm more hesitant to do it with Docker, since that doesn't have as good testing in CI. It's probably simplest to remove it from the <code>latest</code> tag to give time to discuss the policy question.</p>",
        "id": 1346373,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647458959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> \"userAccountControl\": \"userAccountControl\" is activated. That should in theory be enough, as I understand it.</p>",
        "id": 1346375,
        "sender_full_name": "mouk",
        "timestamp": 1647459070
    },
    {
        "content": "<p>Can you try running <code>manage.py sync_ldap_user_data</code> to see if that deactivates the user?</p>",
        "id": 1346379,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647459249
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1346379\">said</a>:</p>\n<blockquote>\n<p>Can you try running <code>manage.py sync_ldap_user_data</code> to see if that deactivates the user?</p>\n</blockquote>\n<p>Running it now. We have approx 150 users, and it seem to take a very long time. It processed (\"[zulip.sync_ldap_user_data] Updated <a href=\"mailto:userX@domain.com\">userX@domain.com</a>\") one users already, after running almost ten minutes. I will report here when there is more to report. (there is almost no cpu usage, network is fast, DCs are on the LAN, and the network is not overloaded)</p>",
        "id": 1346391,
        "sender_full_name": "mouk",
        "timestamp": 1647459914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  Update. My ldap server was set to REALM <a href=\"http://ad.domain.com\">ad.domain.com</a>, and at the same time one AD DC was not reachable from the zulip server. After specifying one specific DC, sync_ldap_user_data runs fast now. Sorry about that. But the users are still activated.<br>\nShould manually deactivated/activated users become deactivated again after running manage.py sync_ldap_user_data, or does a manual activation override the manage.py status flip?</p>",
        "id": 1346404,
        "sender_full_name": "mouk",
        "timestamp": 1647460685
    },
    {
        "content": "<p>I believe that setting considers the LDAP database to be the source of truth, so it will reactivate anyone who has been deactivated only on the Zulip side (etc.) -- it's designed for a setting where you want to just manage which users exist in LDAP.</p>",
        "id": 1346405,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647460765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  Yes, good. That is also what I would expect. What I noticed: many users are processed (output to screen) by manage.py sync_ldap_user_data, but the AD deactivated users are NOT processed. (displayed to the screen) So they are skipped...</p>",
        "id": 1346407,
        "sender_full_name": "mouk",
        "timestamp": 1647461019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"16223\">@mouk</span> I think you'll need to look at the actual LDAP query output to debug further. It seems possible that the specific mechanism you're using to deactivate users in AD makes deactivated users invisible to Zulip, rather than visible but with the deactivated flag.</p>",
        "id": 1346478,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647464152
    },
    {
        "content": "<p>If that's the case, you should enable <code>LDAP_DEACTIVATE_NON_MATCHING_USERS</code>.</p>",
        "id": 1346479,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647464167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  I will check, but strange that this started since we upgraded to 5.0rc1.</p>",
        "id": 1346481,
        "sender_full_name": "mouk",
        "timestamp": 1647464243
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1346479\">said</a>:</p>\n<blockquote>\n<p>If that's the case, you should enable <code>LDAP_DEACTIVATE_NON_MATCHING_USERS</code>.</p>\n</blockquote>\n<p>After trying that, we discovered that that setting disables <em>all</em> non-matching LDAP users, including external (manually invited) users. :-( Not what we need. ;-)</p>",
        "id": 1346831,
        "sender_full_name": "mouk",
        "timestamp": 1647518933
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1346478\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"16223\">mouk</span> I think you'll need to look at the actual LDAP query output to debug further. It seems possible that the specific mechanism you're using to deactivate users in AD makes deactivated users invisible to Zulip, rather than visible but with the deactivated flag.</p>\n</blockquote>\n<p>The mechanism we use, is the regular AD checkbox to disable a user. It works everywhere, not sure why it doesn't work here and now. We're using samba AD (not microsoft AD). Anyway, if it's just me complaining, then it must be something specific on our end.<br>\nThanks for having had your attention! It's appreciated!</p>",
        "id": 1346832,
        "sender_full_name": "mouk",
        "timestamp": 1647519078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"16223\">@mouk</span> yeah, I could have spelled this out more clearly, but Zulip's LDAP integration is conceptually stateless, which is convenient in many settings, but also means it cannot distinguish between a user who used to be visible to it via LDAP but no longer is and one who was never in LDAP.</p>",
        "id": 1347101,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1647547106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"7\">Tim Abbott</span> <a href=\"#narrow/stream/31-production-help/topic/5.2E0.2Erc1/near/1347101\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"16223\">mouk</span> yeah, I could have spelled this out more clearly, but Zulip's LDAP integration is conceptually stateless, which is convenient in many settings, but also means it cannot distinguish between a user who used to be visible to it via LDAP but no longer is and one who was never in LDAP.</p>\n</blockquote>\n<p>Yep. Now we know that too :-) It just confused us, as the setting name has LDAP in it, so we thought it was for LDAP only. Anyway, no problem! :-)</p>",
        "id": 1347627,
        "sender_full_name": "mouk",
        "timestamp": 1647589461
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"16223\">mouk</span> has marked this topic as resolved.</p>",
        "id": 1347628,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647589471
    }
]