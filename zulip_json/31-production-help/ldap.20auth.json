[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-email=\"adbirds@hotmail.co.uk\" data-user-id=\"3715\">@Adam Birds</span> <span class=\"user-mention\" data-user-email=\"shidarin@gmail.com\" data-user-id=\"3733\">@Sean Wallitsch</span> I wanted to talk about <a href=\"https://github.com/zulip/zulip/issues/7047\" target=\"_blank\" title=\"https://github.com/zulip/zulip/issues/7047\">https://github.com/zulip/zulip/issues/7047</a>, since I now know exactly what's happening there, just to brainstorm a bit on how we want to resolve it..</p>",
        "id": 303784,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508863154
    },
    {
        "content": "<p>What's happening is that if you're using LDAP authentication, we have this neat flow where you can register an account by just logging in with your LDAP password, and that's what most sites do: just send users to the /login form.</p>",
        "id": 303787,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508863214
    },
    {
        "content": "<p>(And I believe that, aside from creating a first user account, there's no need for /register to be used on LDAP-only sites at all)</p>",
        "id": 303788,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508863236
    },
    {
        "content": "<p>There's a few options for how to proceed:</p>\n<ul>\n<li>For users who fill out the /register form, we could verify their LDAP password, basically making it work structurally the same as the /login form.</li>\n<li>We could just disable the /register form entirely for organizations using the LDAP backend.  </li>\n<li>Probably a few other approaches.</li>\n</ul>",
        "id": 303792,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508863455
    },
    {
        "content": "<p>I would actually expect the register endpoints to disappear entirely if only LDAP is enabled, my hypothesis would be that this approach would lead to the least amount of user confusion as to what to do.</p>\n<p>On an implementation side, allowing them to register but checking their password means there'd have to be new error messages (\"The password you've entered does not match your LDAP password\") that have to be implemented.</p>",
        "id": 303804,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508863922
    },
    {
        "content": "<p>Oh I meant to ask about this- but what happens if an LDAP user attempts to change their password?</p>",
        "id": 303806,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508863969
    },
    {
        "content": "<p>Yeah, I was sorta thinking the same thing; I don't really see any added benefit of having the second flow.</p>",
        "id": 303807,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864052
    },
    {
        "content": "<p>Well, I guess the place that might get interesting is if one wants to invite users, which is going to by default take them to the registration flow.</p>",
        "id": 303810,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864161
    },
    {
        "content": "<p>To the register endpoint? Perhaps with email auth turned off, that should redirect to the homepage</p>",
        "id": 303811,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508864212
    },
    {
        "content": "<p>No changes in the email invite needed, and they're dumped right where they need to be</p>",
        "id": 303812,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508864236
    },
    {
        "content": "<p>Yeah, that seems right.</p>",
        "id": 303813,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864247
    },
    {
        "content": "<p>It gets confusing if a realm, for some reason, has both LDAP and email reg turned on. I don't know how often of a situation that is</p>",
        "id": 303814,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508864265
    },
    {
        "content": "<p>I doubt many people do that intentionally, since it kinda defeats the point of SSO, but I can imagine use cases for it.</p>",
        "id": 303816,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864312
    },
    {
        "content": "<p>There are similar issues if you use SSO. We're working around this right now by creating users via manage.py automatically.</p>",
        "id": 303817,
        "sender_full_name": "Michael Elbel",
        "timestamp": 1508864312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"me@consol.de\" data-user-id=\"1799\">@Michael Elbel</span> you mean the REMOTE_USER integration?</p>",
        "id": 303818,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864325
    },
    {
        "content": "<p>Yes.</p>",
        "id": 303819,
        "sender_full_name": "Michael Elbel",
        "timestamp": 1508864333
    },
    {
        "content": "<p>So one thing that may help is that you can set <code>REGISTER_LINK_DISABLED = False</code> in your settings to hide the link.</p>",
        "id": 303820,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864360
    },
    {
        "content": "<p>That is exactly what we have done here.</p>",
        "id": 303821,
        "sender_full_name": "Michael Elbel",
        "timestamp": 1508864380
    },
    {
        "content": "<p>Which will hide all instances of links to <code>/register</code> in the UI.  Not a complete solution, but helpful.</p>",
        "id": 303822,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864388
    },
    {
        "content": "<p>Cool, this is helpful feedback that this is an area we need to do some cleanup in.</p>",
        "id": 303823,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508864408
    },
    {
        "content": "<p>And if you set the organization to only allow new users via invite, that closes that hole too.</p>",
        "id": 303824,
        "sender_full_name": "Michael Elbel",
        "timestamp": 1508864415
    },
    {
        "content": "<p>OK, so I'm going to do a hybrid of the two approaches for now: </p>\n<ul>\n<li>Set REGISTER_LINK_DISABLED=True by default if you're using LDAP.</li>\n<li>Plug <a href=\"https://github.com/zulip/zulip/pull/7047\" target=\"_blank\" title=\"https://github.com/zulip/zulip/pull/7047\">#7047</a> directly; we don't need a nice error message, though, since there's no way to get there in the UI.</li>\n</ul>",
        "id": 303871,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508867913
    },
    {
        "content": "<p>Neat, I had no idea REGISTER_LINK_DISABLED was even a setting. Guess I missed it when I was going through settings.py</p>",
        "id": 303887,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508868453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"shidarin@gmail.com\" data-user-id=\"3733\">@Sean Wallitsch</span> it's not one that we expect most users to need; we should be able to auto-detect the correct value for most contexts.</p>",
        "id": 303892,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508868692
    },
    {
        "content": "<p>That got rid of all the registration links nicely. Thanks</p>",
        "id": 303898,
        "sender_full_name": "Sean Wallitsch",
        "timestamp": 1508868976
    },
    {
        "content": "<p>OK, implemented the strategy I described above, with tests, so I think we're all set here.</p>",
        "id": 303954,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508872439
    },
    {
        "content": "<p>Will test this now. Cheers for this.</p>",
        "id": 304000,
        "sender_full_name": "Adam Birds",
        "timestamp": 1508879652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"tabbott@zulipchat.com\" data-user-id=\"7\">@Tim Abbott</span> the /register page does get hidden, and upon trying to go to that page I get greeted with:<a href=\"/user_uploads/2/de/tzq3YMUaXODVr65m7Rbti3a2/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<p>However if a user is invited, they can still register without being an LDAP email.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/de/tzq3YMUaXODVr65m7Rbti3a2/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/2/de/tzq3YMUaXODVr65m7Rbti3a2/pasted_image.png\"></a></div>",
        "id": 304015,
        "sender_full_name": "Adam Birds",
        "timestamp": 1508880157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"adbirds@hotmail.co.uk\" data-user-id=\"3715\">@Adam Birds</span> are you sure about the invited user case (EmailAuthBackend was disabled and then you restarted the server)?  I don't see how that's possible on reading the code.</p>",
        "id": 304020,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508880338
    },
    {
        "content": "<p>To be clear: If a user is invited and they then entered on the registration form their correct LDAP email + LDAP password, that should log them in, but that doesn't sound like what you're describing.</p>",
        "id": 304021,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508880392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"tabbott@zulipchat.com\" data-user-id=\"7\">@Tim Abbott</span> me, being an idiot actually, was going throug the process on a broswer i was already logged in on so appeared to have logged me in amd created the user. But just tested on a browser I wasn't logged in on and does as expected, redirects to home page.</p>",
        "id": 304030,
        "sender_full_name": "Adam Birds",
        "timestamp": 1508880833
    },
    {
        "content": "<p>Great :)</p>",
        "id": 304032,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1508880846
    }
]