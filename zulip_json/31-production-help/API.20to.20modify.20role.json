[
    {
        "content": "<p>I'm trying to use the API to modify a user's role, from 400 to 200 (from Member to Administrator). When I do this, I get the following message:<br>\n{\"result\":\"success\",\"msg\":\"\"}<br>\nYet, when I look at the user's profile or at the role value in the database, the role is unchanged. I see \"Member\" on the profile and 400 in the database.<br>\nIt seems this feature is fairly new. Has it been tested in production mode?</p>",
        "id": 899309,
        "sender_full_name": "Plankter",
        "timestamp": 1591709773
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"15931\">@Plankter</span> the API did just change from passing <code>is_admin=true</code> to using role.  Depending what server you're talking to, it's very possible your server does not support that change.</p>",
        "id": 899538,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1591724433
    },
    {
        "content": "<p>One quirk of our API is that to make potentially adding future options in the future, passing random extra parameters is ignored; so my guess is what happened is that 200 success is reporting that you successfully made no changes whatsoever.  I feel like we should be able to do something better here, but I'm not sure what it should be.</p>",
        "id": 899542,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1591724483
    },
    {
        "content": "<p>(Are you self-hosting?)</p>",
        "id": 899543,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1591724490
    },
    {
        "content": "<p>Yes. I have zulip_version   \"2.1.3-9-g2b95f54593\". </p>\n<p>What I find is this:<br>\n1) Changing the role in the admin of the site works: the user's role is changed, as is the role value in the database, which goes from 400 to 200.<br>\n2) Manually setting the role to 200 directly in the database does not change the role, even though the value is recorded as 200 in the database.<br>\n3) Setting the role with the API does not change the value in the database. It remains 400, even though the operation appears to be successful (your mentioned quirk).</p>\n<p>Does 2) imply that there is a second value to set somewhere (e.g. is_admin)?</p>",
        "id": 900328,
        "sender_full_name": "Plankter",
        "timestamp": 1591802046
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"15931\">@Plankter</span> 2 is because manually making changes in the database does not flush caches.  You should use the Django <code>manage.py shell</code> and the functions in <code>zerver/lib/actions.py</code> that handle caching correctly if you're going to make manual changes.</p>",
        "id": 900391,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1591807218
    },
    {
        "content": "<p>And yes, if you're running Zulip 2.1.3, you should use <code>is_admin=True</code> to create an administrator.  This is documented in <a href=\"https://zulipchat.com/api/update-user\">https://zulipchat.com/api/update-user</a>; the <code>role</code> is new in Zulip 2.2 (to be released soon).</p>",
        "id": 900393,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1591807286
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  Thanks again. I'll mind the version from now on.</p>",
        "id": 900450,
        "sender_full_name": "Plankter",
        "timestamp": 1591808882
    }
]