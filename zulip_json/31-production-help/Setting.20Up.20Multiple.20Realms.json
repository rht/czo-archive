[
    {
        "content": "<p>Hi! I've setup Zulip 1.8.1 on a DigitalOcean droplet and so far, the root-Realm is working perfectly with my domain. However, I'd like to add a few more organizations/realms now (they should be subdomains of my main domain), but I can't quite figure out how to do it.</p>\n<p>The documentation doesn't really help, as it points to using LetsEncrypt commands, which I'm unfamiliar with since I just use the --certbot command in the Install Script.</p>\n<p>I tried generating a new server URL via manage.py, and although I was able to go through the form, when it came time to redirect to the new organization's interface, I get a 'Server Not Found' error.</p>\n<p>Any help?</p>",
        "id": 637085,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534942579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> this isn't a flow a lot of folks do (most users just run one organization), but I'd be happy to work with you on clearing this up and updating the documentation.  The main tricky bit for this is that you need to get SSL certificates covering the domains you're going to use.</p>",
        "id": 637404,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534964835
    },
    {
        "content": "<p>Do you have a fixed list of &lt;5 domains you want?</p>",
        "id": 637405,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534964843
    },
    {
        "content": "<p>If so, you should be able to run something like <code>certbot -d example.com -d a.example.com -d b.example.com -d c.example.com certonly</code> to get the certificate.</p>",
        "id": 637406,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534964908
    },
    {
        "content": "<p>Thanks! What would you suggest I do? I mean, I'm fine with running a few scripts and commands so I can add the subdomains to my saved certificate. I just don't know how to go about that.</p>",
        "id": 637415,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965277
    },
    {
        "content": "<p>I think it's good to point out that Lets Encrypt now supports wild card certificates with the release of second version. And I am now using it for my server (I have 3 Zulip realms and a few other servers).</p>",
        "id": 637416,
        "sender_full_name": "Shayan Toqraee",
        "timestamp": 1534965296
    },
    {
        "content": "<p>What would be the best way to do so via let's encrypt?</p>",
        "id": 637418,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965352
    },
    {
        "content": "<p>I think you can just do <code>certbot -d example.com -d *.example.com certonly</code>.</p>",
        "id": 637419,
        "sender_full_name": "Shayan Toqraee",
        "timestamp": 1534965374
    },
    {
        "content": "<p>Ok, I'll try the cerbot command. Using Root, I assume?</p>",
        "id": 637424,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> yep, you run it as root.</p>",
        "id": 637429,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534965612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"1073\">@Shayan Toqraee</span> LetsEncrypt wildcard certs are a pain to get setup still; you have to do this 4-step dance involving your DNS provider.</p>",
        "id": 637430,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534965636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I keep getting a <em>certbot: command not found</em> error</p>",
        "id": 637431,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965654
    },
    {
        "content": "<p>So I wouldn't recommend that to someone who has a fixed set of domains they want and can just use the normal certbot.</p>",
        "id": 637432,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534965658
    },
    {
        "content": "<p>I do have a fixed set of domains, so I don't really need wildcards for now</p>",
        "id": 637433,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> I guess it's installed at this path these days: <code>/usr/local/sbin/certbot-auto</code></p>",
        "id": 637434,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534965684
    },
    {
        "content": "<p>Thanks for the suggestion, though, <span class=\"user-mention\" data-user-id=\"1073\">@Shayan Toqraee</span></p>",
        "id": 637435,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965693
    },
    {
        "content": "<p>I agree <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> , but I used <a href=\"http://acme.sh\" target=\"_blank\" title=\"http://acme.sh\">acme.sh</a> instead of certbot and it did the DNS check automatically. I don't know whether certbot can also do that.</p>",
        "id": 637436,
        "sender_full_name": "Shayan Toqraee",
        "timestamp": 1534965751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> Ok, now I'm feeling really dumb. I did find the certbot-auto file inside /usr/local/sbin , but when I run \"certbot-auto\" I get an error. When I try to run the command you gave above, I still get command not found</p>",
        "id": 637440,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965942
    },
    {
        "content": "<p><a href=\"/user_uploads/2/40/pzuz6IRs0u_yfaPWCgajxghZ/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/40/pzuz6IRs0u_yfaPWCgajxghZ/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img data-src-fullsize=\"/thumbnail?url=user_uploads%2F2%2F40%2Fpzuz6IRs0u_yfaPWCgajxghZ%2Fpasted_image.png&amp;size=full\" src=\"/thumbnail?url=user_uploads%2F2%2F40%2Fpzuz6IRs0u_yfaPWCgajxghZ%2Fpasted_image.png&amp;size=thumbnail\"></a></div>",
        "id": 637442,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534965983
    },
    {
        "content": "<p>I don't know how to proceed from there, though. Certbot-auto is a script or program, right? When I ran it, I got an error. And I still don't know where I should be to run the certbot - d <a href=\"http://subdomain.domain.com\" target=\"_blank\" title=\"http://subdomain.domain.com\">subdomain.domain.com</a> certonly command.</p>",
        "id": 637455,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534966475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> I think you need to pass the right mode to it; something like:<br>\n<code>./certbot-auto certonly --webroot --webroot-path=/var/lib/zulip/certbot-webroot/ --deploy-hook 'service nginx reload' -d ...</code></p>",
        "id": 637456,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534966565
    },
    {
        "content": "<p>We should probably tweak our <code>scripts/setup/setup-certbot</code> script to support multiple domains, since it sorta handles this for you.</p>",
        "id": 637457,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534966597
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>, I'm sorry but you lost me there. A bit too advanced for me. Is that supposed to be a single command? When do I input my subdomains? Apologies for the no-doubt dumb questions, I'm learning as I go along.</p>",
        "id": 637472,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534966917
    },
    {
        "content": "<p>Yes, a single command.  You put your subdomains as a series of <code>-d</code> arguments at the end (the <code>...</code> was meant to indicate that).</p>",
        "id": 637476,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534967026
    },
    {
        "content": "<p>Ok, thanks. After that, everything should work hunky-dory? Or do I need to do additional steps?</p>",
        "id": 637480,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534967238
    },
    {
        "content": "<p>Ok, the script ran correctly. The only problem is now when I try to open the subdomain (vividhouse.vmgnet.work) I get an error on my browser since it says that the certificate was issued only for 'vmgnet.work', not for 'vividhouse.vmgnet.work'.</p>",
        "id": 637488,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534967504
    },
    {
        "content": "<p>Right, so now following <a href=\"https://zulip.readthedocs.io/en/latest/production/multiple-organizations.html\" target=\"_blank\" title=\"https://zulip.readthedocs.io/en/latest/production/multiple-organizations.html\">https://zulip.readthedocs.io/en/latest/production/multiple-organizations.html</a>, you need to edit the file in <code>/etc/nginx/sites-enabled</code> to make sure it points to your new certificates, and then reload <code>nginx</code></p>",
        "id": 637490,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534967577
    },
    {
        "content": "<p>(I think you should be able to just make some appropriate symlinks and not edit the file at all)</p>",
        "id": 637492,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534967593
    },
    {
        "content": "<p>I actually don't know how to do that (symlinking). Weirdly, it seems only 1 of my subdomains was saved? I mean, under  /etc/letsencrypt/live, I only have /vividhouse.vmgnet.work and /vmgnet.work . None of the other subdomains.</p>\n<p>I don't know if this means the other subdomains weren't processed or it's because I had incorrectly created an organization using that subdomain yesterday (and I got the server not found error afterwards).</p>\n<p>I thought using something like <code>ln -s /etc/letsencrypt/live/vividhouse.vmgnet.work/privkey.pem /etc/ssl/private/zulip.key</code> from <a href=\"https://zulip.readthedocs.io/en/1.7.1/ssl-certificates.html\" target=\"_blank\" title=\"https://zulip.readthedocs.io/en/1.7.1/ssl-certificates.html\">https://zulip.readthedocs.io/en/1.7.1/ssl-certificates.html</a>, but I got an <code>ln: failed to create symbolic link '/etc/ssl/private/zulip.key': File exists</code></p>",
        "id": 637508,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534968155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> certbot makes single certificate with multiple domains on it in a single file.</p>",
        "id": 637532,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534968712
    },
    {
        "content": "<p>If you do <code>certbot-auto certificates</code> you'll see what each one contains.</p>",
        "id": 637533,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534968724
    },
    {
        "content": "<p>I think one is the one the installer made, and the other is your new one.</p>",
        "id": 637535,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534968734
    },
    {
        "content": "<p><code>ln -nsf</code> is what you want for overwriting a symlink.</p>",
        "id": 637536,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534968741
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nFound the following certs:\n  Certificate Name: vividhouse.vmgnet.work\n    Domains: vividhouse.vmgnet.work dexeno.vmgnet.work haptic.vmgnet.work tadaima.vmgnet.work\n    Expiry Date: 2018-11-20 18:48:15+00:00 (VALID: 89 days)\n    Certificate Path: /etc/letsencrypt/live/vividhouse.vmgnet.work/fullchain.pem\n    Private Key Path: /etc/letsencrypt/live/vividhouse.vmgnet.work/privkey.pem\n  Certificate Name: vmgnet.work\n    Domains: vmgnet.work\n    Expiry Date: 2018-11-19 11:28:24+00:00 (VALID: 88 days)\n    Certificate Path: /etc/letsencrypt/live/vmgnet.work/fullchain.pem\n    Private Key Path: /etc/letsencrypt/live/vmgnet.work/privkey.pem\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</pre></div>",
        "id": 637542,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534968872
    },
    {
        "content": "<p>This is what I got. I assume I did it wrong when I did the cerbot command earlier and should have included my root domain as well? So that root-domain + subdomains are all in one cert?</p>",
        "id": 637546,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534968920
    },
    {
        "content": "<p>that I'll overwrite and syslink the cert and pKey of that new certificate to zulip.key?</p>",
        "id": 637549,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534968972
    },
    {
        "content": "<p>Still not sure how I'll be 'telling' nginx about these new certificate, though</p>",
        "id": 637551,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534968997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> , Ok so I ran the certbot-auto command again, and this time expanded it to include my 'root domain'. Then I replaced the symlink to zulip.key and zulip.combined-chain.crt. Then reloaded nginx.</p>\n<p>After that, it seems like the subdomains are now working. If I go to 'haptic.vmgnet.work', I get sent to a new page that says \"Organization does not exist…\" So far so good.</p>\n<p>However, when I go to vividhouse.vmgnet.work, I don't get anymore errors, but I get auto-redirected to vmgnet.work.</p>\n<p>This might have something to do with the fact that I tried creating a new organization yesterday (using the one-time realm-creation-link), but that process got stuck when I would get an error due to SSL. </p>\n<p>Is there any way to 'purge' any records of that aborted organization/realm-creation so I can start from scratch? And that all of our sub-organizations behave similarly?</p>",
        "id": 637572,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534969870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> yep, I think we have docs somewhere on how to purge, but I think it's roughly  running these two as root:</p>\n<div class=\"codehilite\"><pre><span></span>scripts/setup/postgres-init-db\nsu zulip -c /home/zulip/deployments/current/scripts/setup/initialize-database\n</pre></div>",
        "id": 637583,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1534970707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> sorry, I'm stuck again. How does the first command work? I went to <code>/home/zulip/deployments/current/scripts/setup/</code> and then tried <code>postgres-init-db</code>, but I got a command not found</p>",
        "id": 637620,
        "sender_full_name": "Justin Exito",
        "timestamp": 1534980995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9271\">@Justin Exito</span> In general when you type a command without a <code>/</code> in the name, the shell won't look in the current directory to find the program; it'll only look in the normal places in your <code>$PATH</code>.</p>\n<p>That's so that if you happen to have a file with a name like <code>ls</code> or <code>su</code>, you won't get surprised by running that file.</p>\n<p>Try <code>./postgres-init-db</code> from that directory. Or <code>/home/zulip/deployments/current/scripts/setup/postgres-init-db</code>, from anywhere.</p>",
        "id": 637621,
        "sender_full_name": "Greg Price",
        "timestamp": 1534981502
    },
    {
        "content": "<p>I'm struggling a bit with the same issue here - we've got two realms running (one being the root and other being a subdomain mapped to a differend actual domain name) and it indeed seems this isn't really considered in the current configuration scripts; so basically I think I'll have to introduce the different hostnames to nginx and tell it where to find the correct ssl_certificate and ssl_certificate_key for each instead of just having the one 'global' ssl setup in nginx/sites-enabled/zulip-enterprise</p>",
        "id": 637804,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535015649
    },
    {
        "content": "<p>Ok I got ours working so far with a bit of manual editing of the nginx configuration files - I moved the :80 part into one file, the common configuration directives of the SSL site definition into another to be included and then set up two differerent sites with server_name and the ssl_certificate and ssl_certificate_keys corresponding to their hostnames and it seems to work.<br>\nI guess I'll next go ahead and just do a little script that will automate this work; call the certbot script with the new hostname and then create the new site entry into the nginx configuration directory for it and voilá I'm all set.</p>",
        "id": 637806,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535016501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9287\">@Antti Kanes</span> I think you should be able to do this without changing the <code>nginx</code> config, if you have a single SSL cert that covers all the domains...</p>",
        "id": 637999,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1535045940
    },
    {
        "content": "<p>How could I possibly have a single cert that cover all the domains (unless they would be a single domain with subdomains/hosts under it, which would be covered with a wildcard certificate)?</p>",
        "id": 638001,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535045986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9287\">@Antti Kanes</span> read the discussion above about passing multiple <code>-d</code> options to <code>certbot-auto</code>.</p>",
        "id": 638002,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1535046005
    },
    {
        "content": "<p>hmm. true,  that'd indeed create a certificate with all those domains. Interesting thought!</p>",
        "id": 638004,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535046047
    },
    {
        "content": "<p>that's what we do on our web/development servers, but as I tried configuring zulip according to the manuals I ended up creating the certificates with the certbot script provided with zulip - which doesn't support multiple domains as argument</p>",
        "id": 638006,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535046115
    },
    {
        "content": "<p>I guess I could revert back to the original configuration and just replace the certificates with a new combined package.</p>",
        "id": 638008,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535046150
    },
    {
        "content": "<p>lets see.</p>",
        "id": 638010,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535046176
    },
    {
        "content": "<p>well, that did the trick. Thanks !<br>\nMy mind was just so derailed with the provided script that I didn't see the forest for the trees :). <br>\nAlso as I set up jitsi on the same server but under yet different host/domain I had to add<br>\n listen 443 default_server;<br>\n   server_name _;<br>\ninto the default configuration so that the zulip server would catch all the other hosts (I recall the original configuration didn't have a server_name set at all; as I'm not familiar with nginx I'm not sure if that's needed or if the default_server just did the trick already, but anyway)</p>",
        "id": 638012,
        "sender_full_name": "Antti Kanes",
        "timestamp": 1535047087
    },
    {
        "content": "<p>Yeah, we don't set a <code>server_name</code> so the <code>nginx</code> configuration doesn't need to know the hostname.</p>",
        "id": 638017,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1535048299
    },
    {
        "content": "<p>Hey guys. I have </p>\n<ul>\n<li><code>foo</code>.example.com as <code>EXTERNAL_HOST</code></li>\n</ul>\n<p>and want to add further realms on <em>example.com</em>, like </p>\n<ul>\n<li><code>bar</code>.example.com.</li>\n</ul>\n<p>Can I update EXTERNAL_HOST to <code>example.com</code> and add(?) <code>foo</code> as subdomain for <a href=\"http://example.com\" target=\"_blank\" title=\"http://example.com\">example.com</a> without losing data (e.g. database)?</p>",
        "id": 818445,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582115049
    },
    {
        "content": "<p>Doesn't seem to work :/</p>",
        "id": 818451,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582116112
    },
    {
        "content": "<p>Reconfigured EXTERNAL_HOST, restarted zulip, and the foo realm wasn't configured: There is no organisation configured for this subdomain :/</p>",
        "id": 818452,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582116183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10462\">@Mark Kusch</span> Can you show output of <code>manage.py list_realms</code>?</p>",
        "id": 818454,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1582117435
    },
    {
        "content": "<p>Oh, and I <em>think</em> you should be able to find your <code>foo</code> realm on <code>example.com</code> now.</p>",
        "id": 818455,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1582117461
    },
    {
        "content": "<p>Ah, I see, \"string_id\" for <a href=\"http://foo.example.com\" target=\"_blank\" title=\"http://foo.example.com\">foo.example.com</a> is empty.</p>",
        "id": 818460,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582119478
    },
    {
        "content": "<p>And the zulipinternal realm has <a href=\"http://foo.example.com\" target=\"_blank\" title=\"http://foo.example.com\">foo.example.com</a> in domain. This would be something I'd have to \"fix\", I guess.</p>",
        "id": 818461,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582119542
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>id    string_id            name                           domain\n--    ---------            ----                           ------\n1     zulipinternal        None                           https://zulipinternal.foo.example.com\n2     &#39;&#39;                   Some foo realm                 https://foo.example.com\n</pre></div>",
        "id": 818462,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582119593
    },
    {
        "content": "<p>This is with the <code>EXTERNAL_HOST</code> set to <code>example.com</code>? Can you check <code>/home/zulip/deployments/current/scripts/get-django-setting EXTERNAL_HOST</code>?</p>",
        "id": 818464,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1582120930
    },
    {
        "content": "<p>No, this is with EXTERNAL_HOST set to <code>foo.example.com</code>. I'll update the configuration again and check these commands. (Right now the guys are using the chat service and I don't want to interrupt their communication tool...)</p>",
        "id": 818467,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582124742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span>: Thanks a lot for pointing out a few things. A simple </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">update</span> <span class=\"n\">zulip</span><span class=\"mf\">.</span><span class=\"n\">zerver_realm</span> <span class=\"k\">SET</span> <span class=\"n\">string_id</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;foo&#39;</span> <span class=\"k\">where</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mf\">2</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>was enough to \"fix\" my issue.</p>",
        "id": 818469,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582126395
    },
    {
        "content": "<p>Yeah, that should work, I was going to suggest it but was confused by the list_realm result, since I assumed EXTERNAL_HOST=example.com. In general, it's <strong>much</strong> safer to do these manual interventions using the Django ORM rather than direct database queries, but in this case this should be completely fine.</p>",
        "id": 818470,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1582126542
    },
    {
        "content": "<p>Only issue now is cookies, I guess. But zulip now behaves exactly like I wanted. &lt;3</p>",
        "id": 818477,
        "sender_full_name": "Mark Kusch",
        "timestamp": 1582127430
    }
]