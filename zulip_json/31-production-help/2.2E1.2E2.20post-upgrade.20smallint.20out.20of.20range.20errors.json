[
    {
        "content": "<p>After upgrading from 2.0.7 to 2.1.2, I started to get \"smallint out of range\" errors:</p>\n<div class=\"codehilite\"><pre><span></span>2020-03-10 03:37:08.105 ERR  [] Traceback (most recent call last):\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/backends/utils.py&quot;, line 64, in execute\n    return self.cursor.execute(sql, params)\n  File &quot;./zerver/lib/db.py&quot;, line 31, in execute\n    return wrapper_execute(self, super().execute, query, vars)\n  File &quot;./zerver/lib/db.py&quot;, line 18, in wrapper_execute\n    return action(sql, params)\npsycopg2.errors.NumericValueOutOfRange: smallint out of range\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/core/handlers/base.py&quot;, line 185, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File &quot;./zerver/lib/rest.py&quot;, line 35, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/views/decorators/csrf.py&quot;, line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File &quot;./zerver/lib/rest.py&quot;, line 172, in rest_dispatch\n    return target_function(request, **kwargs)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/views/decorators/csrf.py&quot;, line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File &quot;./zerver/decorator.py&quot;, line 627, in _wrapped_func_arguments\n    raise err\n  File &quot;./zerver/decorator.py&quot;, line 612, in _wrapped_func_arguments\n    return target_view_func(request, profile, *args, **kwargs)\n  File &quot;./zerver/decorator.py&quot;, line 829, in wrapped_func\n    return func(request, *args, **kwargs)\n  File &quot;./zerver/views/user_settings.py&quot;, line 210, in set_avatar_backend\n    do_change_avatar_fields(user_profile, UserProfile.AVATAR_FROM_USER)\n  File &quot;./zerver/lib/actions.py&quot;, line 3416, in do_change_avatar_fields\n    user_profile.save(update_fields=[&quot;avatar_source&quot;, &quot;avatar_version&quot;])\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/contrib/auth/base_user.py&quot;, line 80, in save\n    super(AbstractBaseUser, self).save(*args, **kwargs)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/base.py&quot;, line 808, in save\n    force_update=force_update, update_fields=update_fields)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/base.py&quot;, line 838, in save_base\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/base.py&quot;, line 905, in _save_table\n    forced_update)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/base.py&quot;, line 955, in _do_update\n    return filtered._update(values) &gt; 0\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/query.py&quot;, line 667, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/sql/compiler.py&quot;, line 1204, in execute_sql\n    cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/sql/compiler.py&quot;, line 899, in execute_sql\n    raise original_exception\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/models/sql/compiler.py&quot;, line 889, in execute_sql\n    cursor.execute(sql, params)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/backends/utils.py&quot;, line 64, in execute\n    return self.cursor.execute(sql, params)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/utils.py&quot;, line 94, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/utils/six.py&quot;, line 685, in reraise\n    raise value.with_traceback(tb)\n  File &quot;/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.5/site-packages/django/db/backends/utils.py&quot;, line 64, in execute\n    return self.cursor.execute(sql, params)\n  File &quot;./zerver/lib/db.py&quot;, line 31, in execute\n    return wrapper_execute(self, super().execute, query, vars)\n  File &quot;./zerver/lib/db.py&quot;, line 18, in wrapper_execute\n    return action(sql, params)\ndjango.db.utils.DataError: smallint out of range\n</pre></div>\n\n\n<p>According to the log, these were happening once a minute.</p>\n<p>Notably, I did not see these in my upgrade testing, so I would think it has either something to do with load on the real server or existing connections, though the log does explicitly mention avatars.</p>\n<p>Anyone know why I'm seeing this data error and how to fix it?</p>",
        "id": 829271,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583857767
    },
    {
        "content": "<p>Did database migrations run succesfully? Can you check <code>manage.py showmigrations</code>?</p>",
        "id": 829277,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1583859653
    },
    {
        "content": "<p>Unfortunately the call was made last night to revert and I only saved off the \"server.log\" and \"errors.log\" which appear to not have a migration record<br>\nRunning <code>manage.py showmigrations</code> on my test upgrade does not show any errors or warnings</p>",
        "id": 829280,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583860466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9893\">@Mike Ray</span> so, what's puzzling with those happening once a minute, is that the route there is the \"Upload a new avatar\" route, which I wouldn't expect the code in question to be run once a minute.</p>",
        "id": 829356,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583864787
    },
    {
        "content": "<p>Is it possible that it hit an error on updating a particular avatar and just kept retrying it? Or is the code not setup to do such?</p>",
        "id": 829363,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583865077
    },
    {
        "content": "<p>Our system is not setup to do that in general, but certainly the pattern you describe makes it sound like it may have been being retried automatically.</p>",
        "id": 829631,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583873041
    },
    {
        "content": "<p>What's curious is I don't get this when testing in isolation -- it only cropped up when it was done on the live server. Is it such that a client attempting to connect to the server could cause that update avatar code to be run?</p>",
        "id": 829637,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583874013
    },
    {
        "content": "<p>Not really -- the UI for that is in the \"Settings\" panel.</p>",
        "id": 829646,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583874536
    },
    {
        "content": "<p>Maybe you just have a user who was retrying a lot?  Or potentially there could be network-level retries happening somehow.</p>",
        "id": 829647,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583874553
    },
    {
        "content": "<p>It was off hours, so the likelihood of a user manually doing it seems unlikely. I don't know what the API exposes -- maybe someone has scripted trying to set their avatar and it kept retrying because it got a failure?</p>",
        "id": 829672,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583875499
    },
    {
        "content": "<p>On the test instance, I was able to get the same error by initiating an ldap sync of user data, though the error doesn't repeated every minute.</p>",
        "id": 829674,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583875542
    },
    {
        "content": "<p>The user it failed on does have a custom avatar set (though he is not by any means the only one). Maybe it's hitting an error where it cannot overwrite the custom value with the value from LDAP? I don't know why that would be the case as his photo is no different from anyone else's</p>",
        "id": 829676,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583875647
    },
    {
        "content": "<p>I could imagine this being somehow caused by the LDAP integration's avatar syncing feature.</p>",
        "id": 829688,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583876119
    },
    {
        "content": "<p>But it's actually a little hard to see that from the code path.</p>",
        "id": 829690,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583876154
    },
    {
        "content": "<p>Is there anything I can do that would make it easier to see/debug?</p>",
        "id": 829694,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583876220
    },
    {
        "content": "<p>Well, on your browser you're testing with, the \"Developer Tools\" tab will let you trace where network requests are coming from.</p>",
        "id": 829733,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583878937
    },
    {
        "content": "<p>And using that or by editing <code>zerver/views/user_settings.py</code>, you could find out what value is being sent.</p>",
        "id": 829734,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583878969
    },
    {
        "content": "<p>The user has a script that runs every minute and tries to set their avatar, so that explains the timing at least.<br>\nI am still debugging why the LDAP sync fails to update their avatar.</p>",
        "id": 830003,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583938202
    },
    {
        "content": "<p>And just as an aside -- is there any way to restrict the API? A quick search of organization settings suggests that the answer is no</p>",
        "id": 830004,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583938480
    },
    {
        "content": "<p>OK, so the error itself is caused because that particular users <code>avatar_version</code> is already at 32767 (I assume because he is updating it every minute) and that is the max value for that field.<br>\n<span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>  - the user is obviously at fault here, but how do we work around it? Can we just set that field back to 0 or will that cause some other issue? If so, how do we work around it?</p>",
        "id": 830006,
        "sender_full_name": "Mike Ray",
        "timestamp": 1583939256
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"9893\">@Mike Ray</span> yeah, just change it to 0.  Also, that's kinda amazing that they wrote a bot to do this <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> </p>\n<p>They can likely just change their bot to check if it's already the right image.</p>",
        "id": 830062,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1583956978
    },
    {
        "content": "<p>In a test instance, setting that user's <code>avatar_version</code> to 0 allowed ldap syncing to function (without errors). I think I am good to go on this issue -- thanks much for the assistance!</p>",
        "id": 830643,
        "sender_full_name": "Mike Ray",
        "timestamp": 1584027114
    },
    {
        "content": "<p>Great!  I'm not sure I can think of a code change that makes sense in this context.</p>",
        "id": 830776,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1584039238
    }
]