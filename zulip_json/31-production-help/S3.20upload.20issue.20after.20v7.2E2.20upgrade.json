[
    {
        "content": "<p>hi everyone,<br>\nAfter updating from v7.2 to v6.1<br>\nWe are facing file upload issue. our file storage is set with AWS S3 bucket.<br>\nfile upload was working fine in v6.1 and no configuration was changed during v7.2 upgrade.</p>\n<p>*I verified the S3 bucket's folder based on the URL generated, the file has been uploaded.<br>\n*But when I try to access the file from zulip or from the direct s3 object URL(got from the s3 bucket), both the URL is not working<br>\n*When I download the file from the s3 bucket, I can access the file locally.</p>",
        "id": 1631611,
        "sender_full_name": "raja",
        "timestamp": 1692978190
    },
    {
        "content": "<p>Can you show what happens when you try to load the <code>/user_uploads/...</code> URL for the upload in your browser?  What form of \"not working\"?</p>",
        "id": 1631612,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692978825
    },
    {
        "content": "<p><a href=\"/user_uploads/2/39/R6FtOm-Aa_0W050YAmp2Ym5n/image.png\">image.png</a><br>\ni get this error whe i access my file url<br>\n{{my site}}user_uploads/2/z-qLxHIFaqj2kEI3YHXkVPpJ/Screenshot-from-2023-07-06-06-21-27.png</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/39/R6FtOm-Aa_0W050YAmp2Ym5n/image.png\" title=\"image.png\"><img src=\"/user_uploads/2/39/R6FtOm-Aa_0W050YAmp2Ym5n/image.png\"></a></div>",
        "id": 1631614,
        "sender_full_name": "raja",
        "timestamp": 1692979184
    },
    {
        "content": "<p>there is no error at /var/log/nginx/error.log</p>",
        "id": 1631615,
        "sender_full_name": "raja",
        "timestamp": 1692979226
    },
    {
        "content": "<p>This is the error when I try to access my s3 object URL<br>\n<a href=\"/user_uploads/2/63/FF03tGceniZLxh3dbQF6o6Aj/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/63/FF03tGceniZLxh3dbQF6o6Aj/image.png\" title=\"image.png\"><img src=\"/user_uploads/2/63/FF03tGceniZLxh3dbQF6o6Aj/image.png\"></a></div>",
        "id": 1631616,
        "sender_full_name": "raja",
        "timestamp": 1692979367
    },
    {
        "content": "<p>Accessing the S3 download URL is expected to fail (it's intentionally not world-readable for security reasons)</p>",
        "id": 1631621,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692980533
    },
    {
        "content": "<p>And this is S3, not an \"S3-compatible\" service?</p>",
        "id": 1631622,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692980637
    },
    {
        "content": "<p>but the in-app image is broken &amp; can't be accessed.<br>\n<a href=\"/user_uploads/2/dc/jVTZSWg19bMDsBOKng5UZBfZ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/dc/jVTZSWg19bMDsBOKng5UZBfZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/2/dc/jVTZSWg19bMDsBOKng5UZBfZ/image.png\"></a></div>",
        "id": 1631623,
        "sender_full_name": "raja",
        "timestamp": 1692980652
    },
    {
        "content": "<p>yes, this is direct AWS S3 bucket setup</p>",
        "id": 1631624,
        "sender_full_name": "raja",
        "timestamp": 1692980673
    },
    {
        "content": "<p>Does uploading new files still seem to put them in the bucket correctly?</p>",
        "id": 1631625,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692981097
    },
    {
        "content": "<p>I tried uploading multiple files,<br>\nall files are in the S3 bucket. but can't be accessed inside Zulip.</p>",
        "id": 1631628,
        "sender_full_name": "raja",
        "timestamp": 1692981347
    },
    {
        "content": "<p>Yes, I understand that none of them currently work through Zulip -- I wanted to make sure that server had the right credentials.</p>",
        "id": 1631629,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692982047
    },
    {
        "content": "<p>Can you paste the error from <a href=\"#narrow/stream/31-production-help/topic/S3.20upload.20issue.20after.20v7.2E2.20upgrade/near/1631614\">this message</a> in a <a href=\"https://zulip.com/help/code-blocks\">code block</a> instead of a screenshot?</p>",
        "id": 1631630,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692982145
    },
    {
        "content": "<p>Error:</p>\n<div class=\"codehilite\"><pre><span></span><code>This XML file does not appear to have any style information associated with it. The document tree is shown below.\n&lt;Error&gt;\n&lt;Code&gt;SignatureDoesNotMatch&lt;/Code&gt;\n&lt;Message&gt;The request signature we calculated does not match the signature you provided. Check your key and signing method.&lt;/Message&gt;\n&lt;AWSAccessKeyId&gt;AKIA4HR4AAO3BY7P6XPH&lt;/AWSAccessKeyId&gt;\n&lt;StringToSign&gt;GET 1692982329 x-amz-cf-id:-Ef0_zRJq-d-NfWLJIKQ4LXUmrAOnwnc_CNrANxRkFtIcSbIe2t9QQ== /zulip-uploads-dev/2/z-qLxHIFaqj2kEI3YHXkVPpJ/Screenshot-from-2023-07-06-06-21-27.png&lt;/StringToSign&gt;\n&lt;SignatureProvided&gt;bylv/+fqIHjdTuwxULP30W6PbOo=&lt;/SignatureProvided&gt;\n&lt;StringToSignBytes&gt;47 45 54 0a 0a 0a 31 36 39 32 39 38 32 33 32 39 0a 78 2d 61 6d 7a 2d 63 66 2d 69 64 3a 2d 45 66 30 5f 7a 52 4a 71 2d 64 2d 4e 66 57 4c 4a 49 4b 51 34 4c 58 55 6d 72 41 4f 6e 77 6e 63 5f 43 4e 72 41 4e 78 52 6b 46 74 49 63 53 62 49 65 32 74 39 51 51 3d 3d 0a 2f 7a 75 6c 69 70 2d 75 70 6c 6f 61 64 73 2d 64 65 76 2f 32 2f 7a 2d 71 4c 78 48 49 46 61 71 6a 32 6b 45 49 33 59 48 58 6b 56 50 70 4a 2f 53 63 72 65 65 6e 73 68 6f 74 2d 66 72 6f 6d 2d 32 30 32 33 2d 30 37 2d 30 36 2d 30 36 2d 32 31 2d 32 37 2e 70 6e 67&lt;/StringToSignBytes&gt;\n&lt;RequestId&gt;EBYH90WEPX4K23EC&lt;/RequestId&gt;\n&lt;HostId&gt;NVnZqZ5OMWwWRhzvkOs8I5y6ZWMxmyzFPXxO1D810MXCLw5HrgFqkAK/2gd/v2AE5+sLWQq6tbM=&lt;/HostId&gt;\n&lt;/Error&gt;\n</code></pre></div>",
        "id": 1631631,
        "sender_full_name": "raja",
        "timestamp": 1692982314
    },
    {
        "content": "<p>Are you using Cloudfront in some way, in this deployment?</p>",
        "id": 1631633,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692982647
    },
    {
        "content": "<p>Try updating <code>/etc/nginx/zulip-include/app.d/uploads-internal.conf</code> with the contents:</p>\n<div class=\"codehilite\" data-code-language=\"Nginx configuration file\"><pre><span></span><code><span class=\"c1\"># Handle redirects to S3</span>\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"p\">~</span><span class=\"w\"> </span><span class=\"sr\">^/internal/s3/(?&lt;s3_hostname&gt;[^/]+)/(?&lt;s3_path&gt;.*)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">style-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"w\"> </span><span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">object-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">plugin-types</span><span class=\"w\"> </span><span class=\"s\">application/pdf</span><span class=\"p\">;</span><span class=\"kn\">\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># The components of this path are originally double-URI-escaped</span>\n<span class=\"w\">    </span><span class=\"c1\"># (see zerver/view/upload.py).  \"location\" matches are on</span>\n<span class=\"w\">    </span><span class=\"c1\"># unescaped values, which fills $s3_path with a properly</span>\n<span class=\"w\">    </span><span class=\"c1\"># single-escaped path to pass to the upstream server.</span>\n<span class=\"w\">    </span><span class=\"c1\"># (see associated commit message for more details)</span>\n<span class=\"w\">    </span><span class=\"kn\">set</span><span class=\"w\"> </span><span class=\"nv\">$download_url</span><span class=\"w\"> </span><span class=\"s\">https://</span><span class=\"nv\">$s3_hostname/$s3_path</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_set_header</span><span class=\"w\"> </span><span class=\"s\">Host</span><span class=\"w\"> </span><span class=\"nv\">$s3_hostname</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Remove x-amx-cf-id header, which otherwise has to be signed over</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">x-amz-cf-id</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Ensure that we only get _one_ of these headers: the one that</span>\n<span class=\"w\">    </span><span class=\"c1\"># Django added, not the one from S3.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Cache-Control</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Expires</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Set-Cookie</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\"># We are _leaving_ S3 to provide Content-Type,</span>\n<span class=\"w\">    </span><span class=\"c1\"># Content-Disposition, and Accept-Ranges headers, which are the</span>\n<span class=\"w\">    </span><span class=\"c1\"># three remaining headers which nginx would also pass through from</span>\n<span class=\"w\">    </span><span class=\"c1\"># the first response.  Django explicitly unsets the first, and</span>\n<span class=\"w\">    </span><span class=\"c1\"># does not set the latter two.</span>\n\n<span class=\"w\">    </span><span class=\"kn\">proxy_pass</span><span class=\"w\"> </span><span class=\"nv\">$download_url$is_args$args</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache</span><span class=\"w\"> </span><span class=\"s\">uploads</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\"># If the S3 response doesn't contain Cache-Control headers (which</span>\n<span class=\"w\">    </span><span class=\"c1\"># we don't expect it to) then we assume they are valid for a very</span>\n<span class=\"w\">    </span><span class=\"c1\"># long time.  The size of the cache is controlled by</span>\n<span class=\"w\">    </span><span class=\"c1\"># `s3_disk_cache_size` and read frequency, set via</span>\n<span class=\"w\">    </span><span class=\"c1\"># `s3_cache_inactive_time`.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache_valid</span><span class=\"w\"> </span><span class=\"mi\">200</span><span class=\"w\"> </span><span class=\"s\">1y</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># We only include the requested content-disposition in the cache</span>\n<span class=\"w\">    </span><span class=\"c1\"># key, so that we cache \"Content-Disposition: attachment\"</span>\n<span class=\"w\">    </span><span class=\"c1\"># separately from the inline version.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache_key</span><span class=\"w\"> </span><span class=\"nv\">$download_url$s3_disposition_cache_key</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Internal file-serving</span>\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"s\">/internal/local/uploads</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">style-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"w\"> </span><span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">object-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">plugin-types</span><span class=\"w\"> </span><span class=\"s\">application/pdf</span><span class=\"p\">;</span><span class=\"kn\">\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Django handles setting Content-Type, Content-Disposition, and Cache-Control.</span>\n\n<span class=\"w\">    </span><span class=\"kn\">alias</span><span class=\"w\"> </span><span class=\"s\">/home/zulip/uploads/files</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"s\">/internal/local/user_avatars</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"w\"> </span><span class=\"s\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/uploads.types</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">alias</span><span class=\"w\"> </span><span class=\"s\">/home/zulip/uploads/avatars</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1631638,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692983210
    },
    {
        "content": "<p>Then run, as <code>root</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>service nginx reload\n</code></pre></div>",
        "id": 1631639,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692983227
    },
    {
        "content": "<p>getting same error after updating uploads-internal.conf</p>",
        "id": 1631643,
        "sender_full_name": "raja",
        "timestamp": 1692983986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"12178\">Alex Vandiver</span> <a href=\"#narrow/stream/31-production-help/topic/S3.20upload.20issue.20after.20v7.2E2.20upgrade/near/1631633\">said</a>:</p>\n<blockquote>\n<p>Are you using Cloudfront in some way, in this deployment?</p>\n</blockquote>\n<p>Can you answer this?</p>",
        "id": 1631646,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984044
    },
    {
        "content": "<p>zulip is behind an application load balancer.</p>",
        "id": 1631647,
        "sender_full_name": "raja",
        "timestamp": 1692984047
    },
    {
        "content": "<p>That should be fine.  But no cloudfront?</p>",
        "id": 1631648,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984062
    },
    {
        "content": "<p>I ask because I see <code>x-amz-cf-id</code> in that error, implying that something is adding a cloudfront id</p>",
        "id": 1631649,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984122
    },
    {
        "content": "<p>using cloudfront</p>",
        "id": 1631650,
        "sender_full_name": "raja",
        "timestamp": 1692984125
    },
    {
        "content": "<p>OK, how and where?</p>",
        "id": 1631651,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984134
    },
    {
        "content": "<p><a href=\"/user_uploads/2/a8/udPlEaq6MeY6OlwH3AIMNXeo/image.png\">image.png</a><br>\nthis is the cloudfront settings</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/a8/udPlEaq6MeY6OlwH3AIMNXeo/image.png\" title=\"image.png\"><img src=\"/user_uploads/2/a8/udPlEaq6MeY6OlwH3AIMNXeo/image.png\"></a></div>",
        "id": 1631652,
        "sender_full_name": "raja",
        "timestamp": 1692984378
    },
    {
        "content": "<p>as Web Application Firewall (WAF)</p>",
        "id": 1631653,
        "sender_full_name": "raja",
        "timestamp": 1692984402
    },
    {
        "content": "<p>this applies to all Wildcard domains (*.domain-name). since we have enabled multi-organisation in Zulip.</p>",
        "id": 1631654,
        "sender_full_name": "raja",
        "timestamp": 1692984557
    },
    {
        "content": "<p>Try this for <code>/etc/nginx/zulip-include/app.d/uploads-internal.conf</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Nginx configuration file\"><pre><span></span><code><span class=\"c1\"># Handle redirects to S3</span>\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"p\">~</span><span class=\"w\"> </span><span class=\"sr\">^/internal/s3/(?&lt;s3_hostname&gt;[^/]+)/(?&lt;s3_path&gt;.*)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">style-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"w\"> </span><span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">object-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">plugin-types</span><span class=\"w\"> </span><span class=\"s\">application/pdf</span><span class=\"p\">;</span><span class=\"kn\">\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># The components of this path are originally double-URI-escaped</span>\n<span class=\"w\">    </span><span class=\"c1\"># (see zerver/view/upload.py).  \"location\" matches are on</span>\n<span class=\"w\">    </span><span class=\"c1\"># unescaped values, which fills $s3_path with a properly</span>\n<span class=\"w\">    </span><span class=\"c1\"># single-escaped path to pass to the upstream server.</span>\n<span class=\"w\">    </span><span class=\"c1\"># (see associated commit message for more details)</span>\n<span class=\"w\">    </span><span class=\"kn\">set</span><span class=\"w\"> </span><span class=\"nv\">$download_url</span><span class=\"w\"> </span><span class=\"s\">https://</span><span class=\"nv\">$s3_hostname/$s3_path</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_set_header</span><span class=\"w\"> </span><span class=\"s\">Host</span><span class=\"w\"> </span><span class=\"nv\">$s3_hostname</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Remove x-amz-cf-id header, which otherwise has to be signed over</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_set_header</span><span class=\"w\"> </span><span class=\"s\">x-amz-cf-id</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Ensure that we only get _one_ of these headers: the one that</span>\n<span class=\"w\">    </span><span class=\"c1\"># Django added, not the one from S3.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Cache-Control</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Expires</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_hide_header</span><span class=\"w\"> </span><span class=\"s\">Set-Cookie</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\"># We are _leaving_ S3 to provide Content-Type,</span>\n<span class=\"w\">    </span><span class=\"c1\"># Content-Disposition, and Accept-Ranges headers, which are the</span>\n<span class=\"w\">    </span><span class=\"c1\"># three remaining headers which nginx would also pass through from</span>\n<span class=\"w\">    </span><span class=\"c1\"># the first response.  Django explicitly unsets the first, and</span>\n<span class=\"w\">    </span><span class=\"c1\"># does not set the latter two.</span>\n\n<span class=\"w\">    </span><span class=\"kn\">proxy_pass</span><span class=\"w\"> </span><span class=\"nv\">$download_url$is_args$args</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache</span><span class=\"w\"> </span><span class=\"s\">uploads</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\"># If the S3 response doesn't contain Cache-Control headers (which</span>\n<span class=\"w\">    </span><span class=\"c1\"># we don't expect it to) then we assume they are valid for a very</span>\n<span class=\"w\">    </span><span class=\"c1\"># long time.  The size of the cache is controlled by</span>\n<span class=\"w\">    </span><span class=\"c1\"># `s3_disk_cache_size` and read frequency, set via</span>\n<span class=\"w\">    </span><span class=\"c1\"># `s3_cache_inactive_time`.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache_valid</span><span class=\"w\"> </span><span class=\"mi\">200</span><span class=\"w\"> </span><span class=\"s\">1y</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># We only include the requested content-disposition in the cache</span>\n<span class=\"w\">    </span><span class=\"c1\"># key, so that we cache \"Content-Disposition: attachment\"</span>\n<span class=\"w\">    </span><span class=\"c1\"># separately from the inline version.</span>\n<span class=\"w\">    </span><span class=\"kn\">proxy_cache_key</span><span class=\"w\"> </span><span class=\"nv\">$download_url$s3_disposition_cache_key</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Internal file-serving</span>\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"s\">/internal/local/uploads</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">style-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"w\"> </span><span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">object-src</span><span class=\"w\"> </span><span class=\"s\">'self'</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kn\">plugin-types</span><span class=\"w\"> </span><span class=\"s\">application/pdf</span><span class=\"p\">;</span><span class=\"kn\">\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># Django handles setting Content-Type, Content-Disposition, and Cache-Control.</span>\n\n<span class=\"w\">    </span><span class=\"kn\">alias</span><span class=\"w\"> </span><span class=\"s\">/home/zulip/uploads/files</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">location</span><span class=\"w\"> </span><span class=\"s\">/internal/local/user_avatars</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kn\">internal</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/headers</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">add_header</span><span class=\"w\"> </span><span class=\"s\">Content-Security-Policy</span><span class=\"w\"> </span><span class=\"s\">\"default-src</span><span class=\"w\"> </span><span class=\"s\">'none'</span><span class=\"w\"> </span><span class=\"s\">img-src</span><span class=\"w\"> </span><span class=\"s\">'self'\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">include</span><span class=\"w\"> </span><span class=\"s\">/etc/nginx/zulip-include/uploads.types</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kn\">alias</span><span class=\"w\"> </span><span class=\"s\">/home/zulip/uploads/avatars</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 1631659,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984989
    },
    {
        "content": "<p>Don't forget to <code>service nginx reload</code></p>",
        "id": 1631660,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692984996
    },
    {
        "content": "<p>yes, it's working now.</p>",
        "id": 1631663,
        "sender_full_name": "raja",
        "timestamp": 1692985259
    },
    {
        "content": "<p>thanks a lot</p>",
        "id": 1631664,
        "sender_full_name": "raja",
        "timestamp": 1692985283
    },
    {
        "content": "<p>That's too late to make it into 7.3 (which I'm releasing as we speak) but we'll get it in <code>main</code> and 7.4.</p>",
        "id": 1631665,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1692985391
    },
    {
        "content": "<p>cool, will wait for 7.4.<br>\nThanks a lot once again. You are a lifesaver</p>",
        "id": 1631667,
        "sender_full_name": "raja",
        "timestamp": 1692985636
    },
    {
        "content": "<p>Pushed <a href=\"https://github.com/zulip/zulip/pull/26591\">#26591</a>.</p>",
        "id": 1632508,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1693243093
    }
]