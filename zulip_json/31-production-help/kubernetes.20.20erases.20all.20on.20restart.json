[
    {
        "content": "<p>I'm trying to deploy  zulip on an on premise cluster without success, as every time I restart the database gets recreated. Any ideas were I have to look at for knowing what is happening? Everything works except at restarting, is like it doesn't properly detect that it is already installed and creates the db again.</p>",
        "id": 1307595,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641851521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"22788\">@Gabriel Díaz</span>: You're using <a href=\"https://github.com/zulip/docker-zulip\">https://github.com/zulip/docker-zulip</a> ?</p>",
        "id": 1307613,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641852094
    },
    {
        "content": "<p>Yes correct, I'm using this one</p>",
        "id": 1307614,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852128
    },
    {
        "content": "<p>Are you using one of the helm charts that folks have tinkered with?</p>",
        "id": 1307616,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641852144
    },
    {
        "content": "<p>No without helm, I was trying to use the yaml in the kubernetes folder</p>",
        "id": 1307617,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852172
    },
    {
        "content": "<p>Is the Helm chart usable?</p>",
        "id": 1307618,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852180
    },
    {
        "content": "<p>:nod:  I think that means that most likely the postgres machine volume isn't set up right.  Can you show that part of your docker-compose, being sure to redact any passwords?</p>",
        "id": 1307619,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641852231
    },
    {
        "content": "<p>\"maybe\" is the most recent status of the Helm chart that I recall.</p>",
        "id": 1307620,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641852252
    },
    {
        "content": "<p><a class=\"stream-topic\" data-stream-id=\"21\" href=\"/#narrow/stream/21-provision-help/topic/K8.20and.20Helm\">#provision help &gt; K8 and Helm</a> is the relevant topic</p>",
        "id": 1307622,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641852280
    },
    {
        "content": "<p>Ok, I will try to provide that. I ended up making some changes as the provided example doesn't use deployments</p>",
        "id": 1307623,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852341
    },
    {
        "content": "<p>But I encountered same problem with the provided example, on every restart all gets wiped and doesn't detect that I even created the realm.</p>",
        "id": 1307625,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852380
    },
    {
        "content": "<p>I create the volumes with longhorn locally, single node kubernetes at this moment.</p>",
        "id": 1307626,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641852403
    },
    {
        "content": "<p>I have zero context with k8s personally, so I can't help much, I'm afraid.</p>",
        "id": 1307634,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641853005
    },
    {
        "content": "<p><a href=\"/user_uploads/2/2/q_-fhm9QsiN9hE9u3qhdWrdt/kubernetes-clean.yaml\">kubernetes-clean.yaml</a> </p>\n<p>Find attached the yaml that I first tried (having the same issue)</p>",
        "id": 1307635,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853187
    },
    {
        "content": "<p>I also noticed two additional issues. The setting PUSH_NOTIFICATION_BOUNCER_URL is indeed SETTING_PUSH_NOTIFICATION_BOUNCER_URL. If you just specify  PUSH_NOTIFICATION_BOUNCER_URL  it doesn't work as it doesnt get replaced in the zulip config file.</p>",
        "id": 1307636,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853218
    },
    {
        "content": "<p>And the volume mount for redis dind't match between the provided docker-compose and kubernetes sample files. In docker-compose the mount volume path is /data and in the kubernetes example is /var/lib/redis</p>",
        "id": 1307637,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853324
    },
    {
        "content": "<p>Pushed a fix for the push notification URL</p>",
        "id": 1307638,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641853551
    },
    {
        "content": "<p>One difference is that the k8s and the docker configs use different redis images.</p>",
        "id": 1307639,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641853631
    },
    {
        "content": "<p>I didn't realize that, I will have a look at it.</p>",
        "id": 1307640,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853673
    },
    {
        "content": "<p>Yeah, in my latest code I already put the redis:alpine and it dind't make any change. I tried to copy all docker-compose attributes as it seems much updated than the kubernetes example.</p>",
        "id": 1307642,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853887
    },
    {
        "content": "<p>Yeah indeed I also noticed and corrected another one, and is that the redis password is required, if not, it doesn't boot up properly.</p>",
        "id": 1307644,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641853919
    },
    {
        "content": "<p>I think the problem is during the startup of the postgres image, I will try to catch the logs I can. Looking at the init script  of the postgres docker I dind't see anything suspicious, it just checks the existence of the PG_VERSION in the postgres volume to check if the database is already created or not.</p>",
        "id": 1307645,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641854025
    },
    {
        "content": "<p>I have seen another issue, in the helm the volume path for postgress is /var/lib/postgresql/data, but in the example provided in kubernetes folder is /var/lib/postgresql</p>",
        "id": 1307670,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641856247
    },
    {
        "content": "<p>I cannot use the path /var/lib/postgresql/data as if I do so I get this error and the pod never starts up:</p>\n<p>zulip-postgres-8ff9659c4-vpzf9     0/1     CrashLoopBackOff   3          113s<br>\nroot@servidor:/home/gabriel/docker/kubernetes# kubectl logs zulip-postgres-8ff9659c4-vpzf9 -n zulip<br>\nThe files belonging to this database system will be owned by user \"postgres\".<br>\nThis user must also own the server process.</p>\n<p>The database cluster will be initialized with locale \"en_US.utf8\".<br>\nThe default database encoding has accordingly been set to \"UTF8\".<br>\nThe default text search configuration will be set to \"english\".</p>\n<p>Data page checksums are disabled.</p>\n<p>initdb: directory \"/var/lib/postgresql/data\" exists but is not empty<br>\nIt contains a lost+found directory, perhaps due to it being a mount point.<br>\nUsing a mount point directly as the data directory is not recommended.<br>\nCreate a subdirectory under the mount point.</p>",
        "id": 1307671,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641856295
    },
    {
        "content": "<p>Found related issue:</p>\n<p><a href=\"https://stackoverflow.com/questions/51168558/how-to-mount-a-postgresql-volume-using-aws-ebs-in-kubernete\">https://stackoverflow.com/questions/51168558/how-to-mount-a-postgresql-volume-using-aws-ebs-in-kubernete</a></p>",
        "id": 1307672,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641856460
    },
    {
        "content": "<p>Solution in stackoverflow seems to be working, I will try if with that it survives to reboots. Corrected postgres volume mount to:</p>\n<div class=\"codehilite\"><pre><span></span><code>    volumeMounts:\n\n      - name: data\n        mountPath: /var/lib/postgresql/data\n        subPath: postgres\n</code></pre></div>",
        "id": 1307673,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641856847
    },
    {
        "content": "<p>Found! Working and all persists after a restart!</p>",
        "id": 1307693,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641859584
    },
    {
        "content": "<p>I will comment this on the k8s and helm topic</p>",
        "id": 1307696,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1641859610
    },
    {
        "content": "<p>Awesome.  And anything you think would be helpful documentation for the future, we'd love to have as a PR!</p>",
        "id": 1307704,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1641859902
    },
    {
        "content": "<p>I will try to do a PR tomorrow with my current kubernetes deployment and updating the documentation.</p>",
        "id": 1309961,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1642114472
    },
    {
        "content": "<p>Found another issue due to the missing camo installation in the docker image. In order to giphy to work properly, this must be set in the config also:</p>\n<div class=\"codehilite\"><pre><span></span><code>    #Bugfix for missing camo installation in docker install\n\n    - name: ZULIP_CUSTOM_SETTINGS\n      value: &quot;CAMO_URI = &#39;&#39;&quot;\n</code></pre></div>",
        "id": 1309962,
        "sender_full_name": "Gabriel Díaz",
        "timestamp": 1642114519
    }
]