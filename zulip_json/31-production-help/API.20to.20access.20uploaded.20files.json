[
    {
        "content": "<p>Hi! Is there a REST/Python API to access and download files that have been uploaded to the Zulip server (and the user/bot's API key has permission to view)? I'm not sure I see anything in the REST API docs or the Zulip python examples so far. Thanks for any help!</p>",
        "id": 999595,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1598398763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"3748\">@Noe Martinez</span> can you talk more about what you're trying to do?  E.g. is the goal to look at all uploaded files by everyone for some auditing purpose?</p>",
        "id": 999660,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1598401081
    },
    {
        "content": "<p>In my case it's just about my silly bot that adds mustaches onto images :). One of the inputs it can handle is a URL to an image, but right now it only works with image URLs on the public internet, which it downloads for the mustaching. If a caller feeds it a URL to a Zulip-uploaded image, it craps out since it can't download it as if it were a public image. So I was just wondering if there's a way for bot clients to access specific Zulip files for that kind of use case of doing something interesting (albeit silly in this case) to augment said files.</p>",
        "id": 999679,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1598401334
    },
    {
        "content": "<p>Ahh, well, the bot should be able to access uploaded file URLs if it's a subscriber to the private stream they're in (or it's a public stream).</p>",
        "id": 999715,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1598401892
    },
    {
        "content": "<p>It may be that the actual issue here is we need to adjust the permissions model for the class of bot you're using.</p>",
        "id": 999716,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1598401912
    },
    {
        "content": "<p>Well, what I mean is, the bot's current logic for downloading public images is just a simple GET download on the given URL with python's requests module, which for Zulip URLs doesn't work since there's no headers (or whatever it is) indicating the bot's identity. So I think my question is more basic than you might be thinking: what exactly is the way/API to download a Zulip file given its URL, using the bot's API key? Is there a call in the Client object I should be using?</p>",
        "id": 999736,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1598402282
    },
    {
        "content": "<p>Oh, you just need to using HTTP basic authentication on that request with the bot's email:api_key.</p>",
        "id": 999746,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1598402569
    },
    {
        "content": "<p>Ah cool, thanks. I'll try that.</p>",
        "id": 999749,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1598402686
    },
    {
        "content": "<p>Success! Thanks again.</p>",
        "id": 999778,
        "sender_full_name": "Noe Martinez",
        "timestamp": 1598404361
    }
]