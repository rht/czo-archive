[
    {
        "content": "<p>We are an LDAP shop and we login with emails (mail=%s). But we'll be switching from our current LDAP to a new server where we have different email addresses. (short version, company was bought) </p>\n<p>I have a task to figure out how to migrate Zulip so users don't lose their history. My plan is some kind of high level of </p>\n<p>1. force log everyone out (I think there is a manage.py for this)<br>\n2. shut down zulip instance<br>\n3. Do some kind of update mapping <a href=\"mailto:user@old-domain.com\" title=\"mailto:user@old-domain.com\">user@old-domain.com</a> -&gt; <a href=\"mailto:user@new-domain.com\" title=\"mailto:user@new-domain.com\">user@new-domain.com</a><br>\n4. start up zulip and let people login with <a href=\"mailto:user@new-domain.com\" title=\"mailto:user@new-domain.com\">user@new-domain.com</a> again</p>\n<p>I can generate a mapping as a CSV, or text file for reference since not all user names will be identical either. But how do I apply it to Zulip? Will this be a direct DB update?</p>",
        "id": 670506,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544481717
    },
    {
        "content": "<p>To be clear, this isn't happening until late January. I have time to plan and test.</p>",
        "id": 670507,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544481741
    },
    {
        "content": "<p>I think you can just run <code>manage.py change_user_email</code> in a loop.</p>",
        "id": 670520,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1544482274
    },
    {
        "content": "<p>(And you may need to update the Zulip LDAP configuration to use the <code>LDAP_EMAIL_ATTR</code> feature.</p>",
        "id": 670521,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1544482298
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span>. To be clear, we login with user@old-domain now so we do not use LDAP_EMAIL_ATTR. So if we use change_user_email (cool, didn't know about this!) that will update the user email address people login with?</p>",
        "id": 670667,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544548165
    },
    {
        "content": "<p>Right, so structurally, you need to without anyone trying to login in between, (1) use <code>change_user_email</code> to update the email addresses in the Zulip database and (2) Change your LDAP_EMAIL_ATTR from method A to C in <a href=\"https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#ldap-including-active-directory\" target=\"_blank\" title=\"https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#ldap-including-active-directory\">https://zulip.readthedocs.io/en/latest/production/authentication-methods.html#ldap-including-active-directory</a> (that doc also has info on testing your config).  If you do just one or the other, the next time users login they'll auto-create a duplicate account for themselves with the other email, which isn't what you want.</p>",
        "id": 670744,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1544555980
    },
    {
        "content": "<p>I'm just missing why I would change my LDAP_EMAIL_ATTR. I think we will still login as <a href=\"mailto:user@new-domain.com\" title=\"mailto:user@new-domain.com\">user@new-domain.com</a> after the email changes.</p>",
        "id": 670749,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544557121
    },
    {
        "content": "<p>ether there is an internal zulip thing I don't get or I didn't comm the issue well</p>",
        "id": 670750,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544557156
    },
    {
        "content": "<p>Oh, I see, I had misunderstood your situation <span class=\"user-mention\" data-user-id=\"5233\">@Scott Russell</span>; you only need to do that if the way to get the email from the LDAP data has changed.</p>",
        "id": 670763,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1544560439
    },
    {
        "content": "<p>Gotcha. Thank you Tim.</p>",
        "id": 670764,
        "sender_full_name": "Scott Russell",
        "timestamp": 1544560457
    }
]