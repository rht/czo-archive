[
    {
        "content": "<p>We use Zulip IM Server (hosted on our systems) for our entire company. On occasion there may be a need to have an admin work with HR with respect to retrieving messages sent in private between users. Other systems like exchange allow global Admins to do this and I was wondering the best way to do this in Zulip? From what I can see there are only a few options:</p>\n<ul>\n<li>Have one user forward their side of the conversation</li>\n<li>Change the one of the Users passwords to a known value and use it to login and retrieve the messages</li>\n<li>Pull the messages directly from the server DB (Since Zulip uses Postgres I assum I would find a table in there? are the private messages encrypted?)</li>\n</ul>\n<p>I'm just looking for options and capabilities at current. </p>\n<p>Thanks</p>",
        "id": 1418565,
        "sender_full_name": "Steven",
        "timestamp": 1660262722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"15835\">@Steven</span> one can also do this via the API: <a href=\"https://zulip.com/api/get-messages\">https://zulip.com/api/get-messages</a></p>",
        "id": 1418566,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1660262767
    },
    {
        "content": "<p>ah will that pull PM's between users or stream messages only?</p>",
        "id": 1418567,
        "sender_full_name": "Steven",
        "timestamp": 1660262826
    },
    {
        "content": "<p>For security reasons, we don't currently offer an API for an administrator to read users' messages, but we may add a setting to allow that in the future for organizations where that fits their policies.</p>\n<p>One can also use <a href=\"https://zulip.readthedocs.io/en/latest/production/export-and-import.html#data-export\">https://zulip.readthedocs.io/en/latest/production/export-and-import.html#data-export</a>, which some folks do who have a legal compliance reason to search all messages from a third-party tool, for example.</p>",
        "id": 1418569,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1660262837
    },
    {
        "content": "<p>An API key from one of the parties would need to be used; you can extract those from the database if neither party is going to cooperate, but basically your IT team could use that endpoint to fetch messages. As documented in the <code>narrow</code> parameter, you can define the query you want -- all private messages, just one conversation, etc.</p>",
        "id": 1418570,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1660262906
    },
    {
        "content": "<p>The data export options also looks promising...</p>",
        "id": 1418571,
        "sender_full_name": "Steven",
        "timestamp": 1660262967
    },
    {
        "content": "<p>Are the messages in the DB encrypted? it looks like the data export is a backup of the DB, would I not be better to just use the server shell or connect to the postgres DB on the server and use select queries to get the messages?</p>",
        "id": 1418575,
        "sender_full_name": "Steven",
        "timestamp": 1660263066
    },
    {
        "content": "<p>Actually the pg dump should be plain text as long as the messages are not stored in the db in an encrypted state so the dump works.. Can anyone confirm that messages stored in the DB are in plain text?</p>",
        "id": 1418584,
        "sender_full_name": "Steven",
        "timestamp": 1660263199
    },
    {
        "content": "<p>The database is not encrypted on disk; we recommend an encrypted disk for folks who want to encrypt the database.</p>",
        "id": 1418588,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1660263250
    },
    {
        "content": "<p>ah perfect..</p>",
        "id": 1418589,
        "sender_full_name": "Steven",
        "timestamp": 1660263262
    },
    {
        "content": "<p>that answers my questions then, you are correct this is a compliance / legal precaution and I think the dump will work for what I need. Thank you</p>",
        "id": 1418591,
        "sender_full_name": "Steven",
        "timestamp": 1660263298
    }
]