[
    {
        "content": "<p>Hi, I've set up zulip server via official docker repo and using it behind Nginx proxy setup with the help of Nginx Proxy Manager (NPM). Came across <a href=\"https://github.com/zulip/docker-zulip/issues/381\">this issue</a> which says that certbot support is broken in the latest release. </p>\n<p>Since I'm using an external certificate (generated by NPM), I'm able to connect to my server and able to send messages from the browser. However on zulip clients (Mac and android), I intermittently get a certificate not valid error. Would appreciate any help on how to debug this.</p>",
        "id": 1489881,
        "sender_full_name": "Siddhartha Golu",
        "timestamp": 1673509853
    },
    {
        "content": "<p>Hey Siddhartha, thanks for reaching out. Do you have any debug output for details on <code>certificate not valid</code>? I can make some educated guesses at what that output likely contains, but of course, a primary source is always nice <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> To get to the underlying Chromium DevTools to analyze network failures in the desktop Electron app, on Linux it's <code>Ctrl-Shift-U</code> (current \"tab\" devtools, meaning the selected realm, which is likely what we want here. I imagine the equivalent on MacOS is <code>Command-Shift-U</code>, but I'm not sure)</p>\n<p>If you are able to share your nginx site config file (with any appropriate redactions) that might also be helpful - with nginx terminating TLS at the reverse-proxy layer, I wouldn't expect the cert in the container to matter at all unless something was getting passed directly (without TLS termination) to the underlying service, which would mean we're actually in nginx configuration territory.</p>",
        "id": 1489914,
        "sender_full_name": "Josh Klar",
        "timestamp": 1673514261
    },
    {
        "content": "<p>(I'm not promising any particular ETA for resolution, but I do want you to know that we're looking into solving the underlying issue you linked - <a href=\"#narrow/stream/3-backend/topic/docker-zulip.20certbot\">we did some investigations in November + December</a> and for my part, those spun off into <em>several</em> side quests along the way around tidying up our Docker story as a whole. I've since paused that work to focus on a few other more-urgent items, but I or someone else will be back to it soonish I hope <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 1489917,
        "sender_full_name": "Josh Klar",
        "timestamp": 1673514466
    },
    {
        "content": "<p>Thanks for the detailed response, Josh.</p>\n<p>The network request for <code>certificate not valid</code> failure is attached. It's the <code>presence</code> call which fails intermittently. <a href=\"/user_uploads/2/2b/IFUbdqrXVvFu5m8XNYXAHvin/zulip-error.png\">zulip-error.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/2b/IFUbdqrXVvFu5m8XNYXAHvin/zulip-error.png\" title=\"zulip-error.png\"><img src=\"/user_uploads/2/2b/IFUbdqrXVvFu5m8XNYXAHvin/zulip-error.png\"></a></div><p>Also, here's the nginx site config:</p>\n<div class=\"codehilite\"><pre><span></span><code>server {\n  set $forward_scheme https;\n  set $server         &quot;zulip-server&quot;;\n  set $port           443;\n\n  listen 80;\nlisten [::]:80;\n\nlisten 443 ssl http2;\nlisten [::]:443 ssl http2;\n\n  server_name zulip.mydomain.tld\n\n  # Let&#39;s Encrypt SSL\n  include conf.d/include/letsencrypt-acme-challenge.conf;\n  include conf.d/include/ssl-ciphers.conf;\n  ssl_certificate /etc/letsencrypt/live/npm-5/fullchain.pem;\n  ssl_certificate_key /etc/letsencrypt/live/npm-5/privkey.pem;\n\n# Asset Caching\n  include conf.d/include/assets.conf;\n\n  # Block Exploits\n  include conf.d/include/block-exploits.conf;\n\n  # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)\n  add_header Strict-Transport-Security &quot;max-age=63072000;includeSubDomains; preload&quot; always;\n\n    # Force SSL\n    include conf.d/include/force-ssl.conf;\n\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $http_connection;\nproxy_http_version 1.1;\n\n  access_log /data/logs/proxy-host-3_access.log proxy;\n  error_log /data/logs/proxy-host-3_error.log warn;\n\n  location / {\n\n  # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)\n  add_header Strict-Transport-Security &quot;max-age=63072000;includeSubDomains; preload&quot; always;\n\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    proxy_http_version 1.1;\n\n    # Proxy!\n    include conf.d/include/proxy.conf;\n  }\n\n  # Custom\n  include /data/nginx/custom/server_proxy[.]conf;\n}\n</code></pre></div>",
        "id": 1489938,
        "sender_full_name": "Siddhartha Golu",
        "timestamp": 1673517986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"25688\">@Siddhartha Golu</span>: <em>Intermittent</em> failures in SSL are really weird.</p>\n<p>I'm a little confused about your deployment -- is the \"Nginx proxy\" you're talking about doing your SSL termination, and is the one which is configured with NPM?  If so, isn't this about some failure in that nginx configuration, and not anything to do with Zulip?</p>",
        "id": 1490036,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1673539097
    },
    {
        "content": "<p>You may want to read <a href=\"https://zulip.readthedocs.io/en/latest/production/deployment.html#nginx-configuration\">our documentation on putting Zulip behind proxies</a>, and in particular our <a href=\"https://zulip.readthedocs.io/en/latest/production/deployment.html#nginx-configuration\">suggested nginx configuration</a>.  For instance, the <code>Upgrade</code> is unnecessary, since Zulip doesn't use websockets, and having a long <code>proxy_read_timeout</code> is important so the longpolls work as expected.</p>",
        "id": 1490037,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1673539281
    },
    {
        "content": "<blockquote>\n<p>is the \"Nginx proxy\" you're talking about doing your SSL termination, and is the one which is configured with NPM? If so, isn't this about some failure in that nginx configuration, and not anything to do with Zulip?</p>\n</blockquote>\n<p>Normally, I would've agreed with you, had it not been the case that SSL termination is working fine for approximately 20 other applications I've been running on the same server with the same nginx configuration. I know that saying \"but it works with other applications\" is annoying and unhelpful, and so I want to get to the bottom of things here. I also saw a couple of folks complaining about certbot in the issues and figured it could be something related.</p>",
        "id": 1490177,
        "sender_full_name": "Siddhartha Golu",
        "timestamp": 1673548583
    },
    {
        "content": "<p>And thank you for the pointers on Nginx configuration. I just get lazy and go with the default options selected in NPM (websockets etc.), will modify these to reflect official suggestions.</p>",
        "id": 1490183,
        "sender_full_name": "Siddhartha Golu",
        "timestamp": 1673548791
    },
    {
        "content": "<p>Can you expand the error from your screenshot any, to provide more details from that?</p>\n<p>Is it <em>always</em> presence?  Can you get it to fail by reloading a trivial endpoint over and over (e.g <code>/compatibility</code>)?</p>",
        "id": 1490184,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1673548791
    },
    {
        "content": "<p>The presence endpoint is pretty fast, so I wouldn't necessarily suspect something weird at the network layer -- but the <code>(cancelled)</code> for the longpoll events request is suspicious.</p>\n<p>But fundamentally nginx is a application-layer proxy.  The SSL handshake to its Zulip upstream is going to happen completely separately, and any failures there are going to present in the <em>application layer</em> of nginx -- that is, as 502's or such.</p>\n<p>The nginx proxy hasn't even parsed the request from the client to know anything about where it goes, if there's a failure in the client of checking the server's certificate.  So I really don't understand how the upstream cert could be relevant.</p>",
        "id": 1490186,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1673549036
    },
    {
        "content": "<p>I assume you've checked the error logs of that nginx proxy?</p>",
        "id": 1490187,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1673549051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"12178\">Alex Vandiver</span> <a href=\"#narrow/stream/31-production-help/topic/self-signed.20certificate.20error/near/1490187\">said</a>:</p>\n<blockquote>\n<p>I assume you've checked the error logs of that nginx proxy?</p>\n</blockquote>\n<p>Yes, and didn't see anything suspicious there. I'll have to do some more thorough investigation to figure out where is the request failing from. The intermittent nature of the failure is a really weird thing. Let me do some more testing with other endpoints like <code>/compatibility</code> and increase the <code>proxy_read_timeout</code> and see where things stand. Will report the findings in sometime. </p>\n<p>Thanks for your support!</p>",
        "id": 1490445,
        "sender_full_name": "Siddhartha Golu",
        "timestamp": 1673588918
    }
]