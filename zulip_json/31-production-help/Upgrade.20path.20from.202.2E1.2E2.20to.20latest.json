[
    {
        "content": "<p>Our Zulip server has been running untouched on Ubuntu 10.04.4 since it was upgraded to 2.1.2. It has been wonderfully stable, so we've never felt the need to upgrade either the host server or Zulip.</p>\n<p>Now however, we want to move the Zulip server to a different host running Latest (3.1). There doesn't seem to be an easy way to do so since both backup/restore and data export /import require that the source and destination servers be on the same release version of Zulip.</p>\n<p>If this is true, am I going to have to upgrade from 2.1.2 ➞ 2.1.5 ➞ 2.1.6  ➞ 2.1.7  ➞ 3.0  ➞ 3.1 then do a backup/restore? Can any of these steps be skipped? If not, I guess I'll have to grin and suffer the pain.</p>\n<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span>  I mentioned that there was a failure in trying to upgrade from 2.1.2 to 2.1.5. This seems to have gone away with a logout/in, so there must have been something left over in my environment when I tried to do a direct upgrade to latest first.</p>",
        "id": 1009164,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599162135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"2530\">@Edmund Lian</span>  I think upgrade straight to 3.1 should be possible, there's absolutely no need to go through all of these minors versions. I'd suggest trying to upgrade to 3.1 and posting the log here if it fails.</p>",
        "id": 1009172,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1599162634
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> I think I need to to to 3.0, then upgrade Ubuntu to 20.04 before going to 3.1?</p>",
        "id": 1009179,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599162849
    },
    {
        "content": "<p>No need, Ubuntu 18.04 is still supported <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>  And we've changed our versioning scheme so 3.0 to 3.1 is only a minor version bump (equivalent of a 2.1.5 to 2.1.6 bump etc.)</p>",
        "id": 1009182,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1599162950
    },
    {
        "content": "<p>Great! I'll try this.</p>",
        "id": 1009204,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599165697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> I managed to upgrade from 2.1.5 to 3.1 (latest). The earlier upgrade failure I had was going from 2.1.2 to latest, so perhaps the upgrade to 2.1.5 was helpful.  ¯\\_(ツ)_/¯</p>\n<p>Thanks for your help!</p>",
        "id": 1009208,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599167093
    },
    {
        "content": "<p>Great! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 1009219,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1599168350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"10349\">@Mateusz Mandera</span> If both source and destination Zulip servers are running the same version, can I do a backup/restore to port the installation even if the underlying Ubuntu versions are different (source = 18.04, destination = 20.04)?</p>",
        "id": 1009277,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599170476
    },
    {
        "content": "<p>Do you mean export/import? That should work indeed</p>",
        "id": 1009285,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1599170775
    },
    {
        "content": "<p>Dont nuke your current server though before verifying the import worked, in  case things go wrong <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 1009287,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1599170840
    },
    {
        "content": "<p>Thanks! I had to revert to 2.1.5 (using a snapshot. Should have snapshotted after a successful upgrade to 3.1, but I didn't. No big deal) and reapply the upgrade. Something broke in the upgrade from 18.04 to 20.04. Not worth to figure out what the problem is if I can export from Zulip 3.1/Ubuntu 10.94 to Zulip 3.1/Ubuntu 20.04.</p>",
        "id": 1009295,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599171237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"2530\">@Edmund Lian</span> in case you haven't seen it, we have explicit documented instructions for how to upgrade the OS version.</p>",
        "id": 1009496,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1599176549
    },
    {
        "content": "<p><a href=\"https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-the-operating-system\">https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-the-operating-system</a></p>",
        "id": 1009497,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1599176562
    },
    {
        "content": "<p>Which covers all of this class of issue <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 1009498,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1599176570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I was following this when I got into trouble! I'll take another crack at this over the weekend, after I've exported the data!</p>",
        "id": 1009708,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599182201
    },
    {
        "content": "<p>I should mention that the backup/restore process will work with the same Zulip version and same postgres version; you may end up using our \"postgres upgrade\" instructions to make a backup you can then import for the 20.04 upgrade.</p>",
        "id": 1009800,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1599195101
    },
    {
        "content": "<p>OK, thanks!</p>",
        "id": 1010186,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599247738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> The Postgresql upgrade breaks because postgresql-12-pgroonga is not available for Ubuntu 18.04 (I think):</p>\n<blockquote>\n<p>Error: Execution of '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install postgresql-12-pgroonga' returned 100: Reading package lists...<br>\nBuilding dependency tree...<br>\nReading state information...<br>\nE: Unable to locate package postgresql-12-pgroonga<br>\nError: /Stage[main]/Zulip::Postgres_appdb_base/Package[postgresql-12-pgroonga]/ensure: change from 'purged' to 'present' failed: Execution of '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install postgresql-12-pgroonga' returned 100: Reading package lists...<br>\nBuilding dependency tree...<br>\nReading state information...<br>\nE: Unable to locate package postgresql-12-pgroonga</p>\n</blockquote>",
        "id": 1010247,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599249283
    },
    {
        "content": "<p>I'm going AFK but <span class=\"user-mention\" data-user-id=\"12178\">@Alex Vandiver</span> an probably help.  <a href=\"https://github.com/zulip/zulip/issues/16058\">https://github.com/zulip/zulip/issues/16058</a> might have a resolution.</p>",
        "id": 1010283,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1599250412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"7\">@Tim Abbott</span> I managed to upgrade and migrate everything successfully. Rather than try to debug/solve the pgroonga upgrade problem, I just disabled it in Zulip and dropped the extension in the DB. Then, the database upgrade script runs properly.</p>\n<p>This is the simplest way to deal with this!</p>",
        "id": 1010569,
        "sender_full_name": "Edmund Lian",
        "timestamp": 1599277846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"2530\">@Edmund Lian</span> awesome, thanks for the confirmation!</p>",
        "id": 1018217,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1600278134
    }
]